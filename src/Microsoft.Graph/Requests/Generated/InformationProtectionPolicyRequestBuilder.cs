// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type InformationProtectionPolicyRequestBuilder.
    /// </summary>
    public partial class InformationProtectionPolicyRequestBuilder : EntityRequestBuilder, IInformationProtectionPolicyRequestBuilder
    {

        /// <summary>
        /// Constructs a new InformationProtectionPolicyRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public InformationProtectionPolicyRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IInformationProtectionPolicyRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IInformationProtectionPolicyRequest Request(IEnumerable<Option> options)
        {
            return new InformationProtectionPolicyRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for Labels.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionPolicyLabelsCollectionRequestBuilder"/>.</returns>
        public IInformationProtectionPolicyLabelsCollectionRequestBuilder Labels
        {
            get
            {
                return new InformationProtectionPolicyLabelsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("labels"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for InformationProtectionPolicyExtractLabel.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionPolicyExtractLabelRequestBuilder"/>.</returns>
        public IInformationProtectionPolicyExtractLabelRequestBuilder ExtractLabel(
            ContentInfo contentInfo)
        {
            return new InformationProtectionPolicyExtractLabelRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.extractLabel"),
                this.Client,
                contentInfo);
        }

        /// <summary>
        /// Gets the request builder for InformationProtectionPolicyApplyLabel.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionPolicyApplyLabelRequestBuilder"/>.</returns>
        public IInformationProtectionPolicyApplyLabelRequestBuilder ApplyLabel(
            ContentInfo contentInfo,
            LabelingOptions labelingOptions)
        {
            return new InformationProtectionPolicyApplyLabelRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.applyLabel"),
                this.Client,
                contentInfo,
                labelingOptions);
        }

        /// <summary>
        /// Gets the request builder for InformationProtectionPolicyRemoveLabel.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionPolicyRemoveLabelRequestBuilder"/>.</returns>
        public IInformationProtectionPolicyRemoveLabelRequestBuilder RemoveLabel(
            ContentInfo contentInfo,
            DowngradeJustification downgradeJustification = null)
        {
            return new InformationProtectionPolicyRemoveLabelRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.removeLabel"),
                this.Client,
                contentInfo,
                downgradeJustification);
        }

        /// <summary>
        /// Gets the request builder for InformationProtectionPolicyApplyLabelFromClassification.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionPolicyApplyLabelFromClassificationRequestBuilder"/>.</returns>
        public IInformationProtectionPolicyApplyLabelFromClassificationRequestBuilder ApplyLabelFromClassification(
            ContentInfo contentInfo,
            IEnumerable<DetectedSensitiveContent> classificationResults)
        {
            return new InformationProtectionPolicyApplyLabelFromClassificationRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.applyLabelFromClassification"),
                this.Client,
                contentInfo,
                classificationResults);
        }
    
    }
}
