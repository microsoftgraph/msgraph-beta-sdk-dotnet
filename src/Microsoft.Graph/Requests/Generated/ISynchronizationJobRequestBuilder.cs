// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\IEntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The interface ISynchronizationJobRequestBuilder.
    /// </summary>
    public partial interface ISynchronizationJobRequestBuilder : IEntityRequestBuilder
    {
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        new ISynchronizationJobRequest Request();

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        new ISynchronizationJobRequest Request(IEnumerable<Option> options);
    
        /// <summary>
        /// Gets the request builder for Schema.
        /// </summary>
        /// <returns>The <see cref="ISynchronizationSchemaRequestBuilder"/>.</returns>
        ISynchronizationSchemaRequestBuilder Schema { get; }
    
        /// <summary>
        /// Gets the request builder for SynchronizationJobPause.
        /// </summary>
        /// <returns>The <see cref="ISynchronizationJobPauseRequestBuilder"/>.</returns>
        ISynchronizationJobPauseRequestBuilder Pause();

        /// <summary>
        /// Gets the request builder for SynchronizationJobStart.
        /// </summary>
        /// <returns>The <see cref="ISynchronizationJobStartRequestBuilder"/>.</returns>
        ISynchronizationJobStartRequestBuilder Start();

        /// <summary>
        /// Gets the request builder for SynchronizationJobStop.
        /// </summary>
        /// <returns>The <see cref="ISynchronizationJobStopRequestBuilder"/>.</returns>
        ISynchronizationJobStopRequestBuilder Stop();

        /// <summary>
        /// Gets the request builder for SynchronizationJobApply.
        /// </summary>
        /// <returns>The <see cref="ISynchronizationJobApplyRequestBuilder"/>.</returns>
        ISynchronizationJobApplyRequestBuilder Apply(
            string objectId,
            string typeName,
            string ruleId = null);

        /// <summary>
        /// Gets the request builder for SynchronizationJobRestart.
        /// </summary>
        /// <returns>The <see cref="ISynchronizationJobRestartRequestBuilder"/>.</returns>
        ISynchronizationJobRestartRequestBuilder Restart(
            SynchronizationJobRestartCriteria criteria = null);

        /// <summary>
        /// Gets the request builder for SynchronizationJobValidateCredentials.
        /// </summary>
        /// <returns>The <see cref="ISynchronizationJobValidateCredentialsRequestBuilder"/>.</returns>
        ISynchronizationJobValidateCredentialsRequestBuilder ValidateCredentials(
            string applicationIdentifier = null,
            string templateId = null,
            bool? useSavedCredentials = null,
            IEnumerable<SynchronizationSecretKeyStringValuePair> credentials = null);
    
    }
}
