// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\MethodRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type GroupGrantResourceSpecificConsentRequestBuilder.
    /// </summary>
    public partial class GroupGrantResourceSpecificConsentRequestBuilder : BaseActionMethodRequestBuilder<IGroupGrantResourceSpecificConsentRequest>, IGroupGrantResourceSpecificConsentRequestBuilder
    {
        /// <summary>
        /// Constructs a new <see cref="GroupGrantResourceSpecificConsentRequestBuilder"/>.
        /// </summary>
        /// <param name="requestUrl">The URL for the request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        /// <param name="checkOnly">A checkOnly parameter for the OData method call.</param>
        /// <param name="clientAppId">A clientAppId parameter for the OData method call.</param>
        /// <param name="permissionSets">A permissionSets parameter for the OData method call.</param>
        /// <param name="tags">A tags parameter for the OData method call.</param>
        public GroupGrantResourceSpecificConsentRequestBuilder(
            string requestUrl,
            IBaseClient client,
            bool checkOnly,
            string clientAppId,
            IEnumerable<InstanceResourceAccess> permissionSets,
            IEnumerable<string> tags)
            : base(requestUrl, client)
        {
            this.SetParameter("checkOnly", checkOnly, false);
            this.SetParameter("clientAppId", clientAppId, false);
            this.SetParameter("permissionSets", permissionSets, false);
            this.SetParameter("tags", tags, true);
        }

        /// <summary>
        /// A method used by the base class to construct a request class instance.
        /// </summary>
        /// <param name="functionUrl">The request URL to </param>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>An instance of a specific request class.</returns>
        protected override IGroupGrantResourceSpecificConsentRequest CreateRequest(string functionUrl, IEnumerable<Option> options)
        {
            var request = new GroupGrantResourceSpecificConsentRequest(functionUrl, this.Client, options);

            if (this.HasParameter("checkOnly"))
            {
                request.RequestBody.CheckOnly = this.GetParameter<bool>("checkOnly");
            }

            if (this.HasParameter("clientAppId"))
            {
                request.RequestBody.ClientAppId = this.GetParameter<string>("clientAppId");
            }

            if (this.HasParameter("permissionSets"))
            {
                request.RequestBody.PermissionSets = this.GetParameter<IEnumerable<InstanceResourceAccess>>("permissionSets");
            }

            if (this.HasParameter("tags"))
            {
                request.RequestBody.Tags = this.GetParameter<IEnumerable<string>>("tags");
            }

            return request;
        }
    }
}
