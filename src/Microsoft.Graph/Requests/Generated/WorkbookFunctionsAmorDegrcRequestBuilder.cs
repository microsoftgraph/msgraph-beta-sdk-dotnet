// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\MethodRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type WorkbookFunctionsAmorDegrcRequestBuilder.
    /// </summary>
    public partial class WorkbookFunctionsAmorDegrcRequestBuilder : BaseActionMethodRequestBuilder<IWorkbookFunctionsAmorDegrcRequest>, IWorkbookFunctionsAmorDegrcRequestBuilder
    {
        /// <summary>
        /// Constructs a new <see cref="WorkbookFunctionsAmorDegrcRequestBuilder"/>.
        /// </summary>
        /// <param name="requestUrl">The URL for the request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        /// <param name="cost">A cost parameter for the OData method call.</param>
        /// <param name="datePurchased">A datePurchased parameter for the OData method call.</param>
        /// <param name="firstPeriod">A firstPeriod parameter for the OData method call.</param>
        /// <param name="salvage">A salvage parameter for the OData method call.</param>
        /// <param name="period">A period parameter for the OData method call.</param>
        /// <param name="rate">A rate parameter for the OData method call.</param>
        /// <param name="basis">A basis parameter for the OData method call.</param>
        public WorkbookFunctionsAmorDegrcRequestBuilder(
            string requestUrl,
            IBaseClient client,
            Newtonsoft.Json.Linq.JToken cost,
            Newtonsoft.Json.Linq.JToken datePurchased,
            Newtonsoft.Json.Linq.JToken firstPeriod,
            Newtonsoft.Json.Linq.JToken salvage,
            Newtonsoft.Json.Linq.JToken period,
            Newtonsoft.Json.Linq.JToken rate,
            Newtonsoft.Json.Linq.JToken basis)
            : base(requestUrl, client)
        {
            this.SetParameter("cost", cost, true);
            this.SetParameter("datePurchased", datePurchased, true);
            this.SetParameter("firstPeriod", firstPeriod, true);
            this.SetParameter("salvage", salvage, true);
            this.SetParameter("period", period, true);
            this.SetParameter("rate", rate, true);
            this.SetParameter("basis", basis, true);
        }

        /// <summary>
        /// A method used by the base class to construct a request class instance.
        /// </summary>
        /// <param name="functionUrl">The request URL to </param>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>An instance of a specific request class.</returns>
        protected override IWorkbookFunctionsAmorDegrcRequest CreateRequest(string functionUrl, IEnumerable<Option> options)
        {
            var request = new WorkbookFunctionsAmorDegrcRequest(functionUrl, this.Client, options);

            if (this.HasParameter("cost"))
            {
                request.RequestBody.Cost = this.GetParameter<Newtonsoft.Json.Linq.JToken>("cost");
            }

            if (this.HasParameter("datePurchased"))
            {
                request.RequestBody.DatePurchased = this.GetParameter<Newtonsoft.Json.Linq.JToken>("datePurchased");
            }

            if (this.HasParameter("firstPeriod"))
            {
                request.RequestBody.FirstPeriod = this.GetParameter<Newtonsoft.Json.Linq.JToken>("firstPeriod");
            }

            if (this.HasParameter("salvage"))
            {
                request.RequestBody.Salvage = this.GetParameter<Newtonsoft.Json.Linq.JToken>("salvage");
            }

            if (this.HasParameter("period"))
            {
                request.RequestBody.Period = this.GetParameter<Newtonsoft.Json.Linq.JToken>("period");
            }

            if (this.HasParameter("rate"))
            {
                request.RequestBody.Rate = this.GetParameter<Newtonsoft.Json.Linq.JToken>("rate");
            }

            if (this.HasParameter("basis"))
            {
                request.RequestBody.Basis = this.GetParameter<Newtonsoft.Json.Linq.JToken>("basis");
            }

            return request;
        }
    }
}
