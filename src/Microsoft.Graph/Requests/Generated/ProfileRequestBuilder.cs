// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type ProfileRequestBuilder.
    /// </summary>
    public partial class ProfileRequestBuilder : EntityRequestBuilder, IProfileRequestBuilder
    {

        /// <summary>
        /// Constructs a new ProfileRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public ProfileRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IProfileRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IProfileRequest Request(IEnumerable<Option> options)
        {
            return new ProfileRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for Account.
        /// </summary>
        /// <returns>The <see cref="IProfileAccountCollectionRequestBuilder"/>.</returns>
        public IProfileAccountCollectionRequestBuilder Account
        {
            get
            {
                return new ProfileAccountCollectionRequestBuilder(this.AppendSegmentToRequestUrl("account"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Addresses.
        /// </summary>
        /// <returns>The <see cref="IProfileAddressesCollectionRequestBuilder"/>.</returns>
        public IProfileAddressesCollectionRequestBuilder Addresses
        {
            get
            {
                return new ProfileAddressesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("addresses"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Anniversaries.
        /// </summary>
        /// <returns>The <see cref="IProfileAnniversariesCollectionRequestBuilder"/>.</returns>
        public IProfileAnniversariesCollectionRequestBuilder Anniversaries
        {
            get
            {
                return new ProfileAnniversariesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("anniversaries"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Awards.
        /// </summary>
        /// <returns>The <see cref="IProfileAwardsCollectionRequestBuilder"/>.</returns>
        public IProfileAwardsCollectionRequestBuilder Awards
        {
            get
            {
                return new ProfileAwardsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("awards"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Certifications.
        /// </summary>
        /// <returns>The <see cref="IProfileCertificationsCollectionRequestBuilder"/>.</returns>
        public IProfileCertificationsCollectionRequestBuilder Certifications
        {
            get
            {
                return new ProfileCertificationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("certifications"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for EducationalActivities.
        /// </summary>
        /// <returns>The <see cref="IProfileEducationalActivitiesCollectionRequestBuilder"/>.</returns>
        public IProfileEducationalActivitiesCollectionRequestBuilder EducationalActivities
        {
            get
            {
                return new ProfileEducationalActivitiesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("educationalActivities"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Emails.
        /// </summary>
        /// <returns>The <see cref="IProfileEmailsCollectionRequestBuilder"/>.</returns>
        public IProfileEmailsCollectionRequestBuilder Emails
        {
            get
            {
                return new ProfileEmailsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("emails"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Interests.
        /// </summary>
        /// <returns>The <see cref="IProfileInterestsCollectionRequestBuilder"/>.</returns>
        public IProfileInterestsCollectionRequestBuilder Interests
        {
            get
            {
                return new ProfileInterestsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("interests"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Languages.
        /// </summary>
        /// <returns>The <see cref="IProfileLanguagesCollectionRequestBuilder"/>.</returns>
        public IProfileLanguagesCollectionRequestBuilder Languages
        {
            get
            {
                return new ProfileLanguagesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("languages"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Names.
        /// </summary>
        /// <returns>The <see cref="IProfileNamesCollectionRequestBuilder"/>.</returns>
        public IProfileNamesCollectionRequestBuilder Names
        {
            get
            {
                return new ProfileNamesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("names"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Notes.
        /// </summary>
        /// <returns>The <see cref="IProfileNotesCollectionRequestBuilder"/>.</returns>
        public IProfileNotesCollectionRequestBuilder Notes
        {
            get
            {
                return new ProfileNotesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("notes"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Patents.
        /// </summary>
        /// <returns>The <see cref="IProfilePatentsCollectionRequestBuilder"/>.</returns>
        public IProfilePatentsCollectionRequestBuilder Patents
        {
            get
            {
                return new ProfilePatentsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("patents"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Phones.
        /// </summary>
        /// <returns>The <see cref="IProfilePhonesCollectionRequestBuilder"/>.</returns>
        public IProfilePhonesCollectionRequestBuilder Phones
        {
            get
            {
                return new ProfilePhonesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("phones"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Positions.
        /// </summary>
        /// <returns>The <see cref="IProfilePositionsCollectionRequestBuilder"/>.</returns>
        public IProfilePositionsCollectionRequestBuilder Positions
        {
            get
            {
                return new ProfilePositionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("positions"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Projects.
        /// </summary>
        /// <returns>The <see cref="IProfileProjectsCollectionRequestBuilder"/>.</returns>
        public IProfileProjectsCollectionRequestBuilder Projects
        {
            get
            {
                return new ProfileProjectsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("projects"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Publications.
        /// </summary>
        /// <returns>The <see cref="IProfilePublicationsCollectionRequestBuilder"/>.</returns>
        public IProfilePublicationsCollectionRequestBuilder Publications
        {
            get
            {
                return new ProfilePublicationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("publications"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Skills.
        /// </summary>
        /// <returns>The <see cref="IProfileSkillsCollectionRequestBuilder"/>.</returns>
        public IProfileSkillsCollectionRequestBuilder Skills
        {
            get
            {
                return new ProfileSkillsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("skills"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WebAccounts.
        /// </summary>
        /// <returns>The <see cref="IProfileWebAccountsCollectionRequestBuilder"/>.</returns>
        public IProfileWebAccountsCollectionRequestBuilder WebAccounts
        {
            get
            {
                return new ProfileWebAccountsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("webAccounts"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Websites.
        /// </summary>
        /// <returns>The <see cref="IProfileWebsitesCollectionRequestBuilder"/>.</returns>
        public IProfileWebsitesCollectionRequestBuilder Websites
        {
            get
            {
                return new ProfileWebsitesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("websites"), this.Client);
            }
        }
    
    }
}
