// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\IEntityCollectionRequestBuilder.cs.tt
namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// The interface IInformationProtectionPolicyLabelsCollectionRequestBuilder.
    /// </summary>
    public partial interface IInformationProtectionPolicyLabelsCollectionRequestBuilder : IBaseRequestBuilder
    {
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        IInformationProtectionPolicyLabelsCollectionRequest Request();

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        IInformationProtectionPolicyLabelsCollectionRequest Request(IEnumerable<Option> options);

        /// <summary>
        /// Gets an <see cref="IInformationProtectionLabelRequestBuilder"/> for the specified InformationProtectionLabel.
        /// </summary>
        /// <param name="id">The ID for the InformationProtectionLabel.</param>
        /// <returns>The <see cref="IInformationProtectionLabelRequestBuilder"/>.</returns>
        IInformationProtectionLabelRequestBuilder this[string id] { get; }

        /// <summary>
        /// Gets the request builder for InformationProtectionLabelExtractLabel.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionLabelExtractLabelRequestBuilder"/>.</returns>
        IInformationProtectionLabelExtractLabelRequestBuilder ExtractLabel(
            ContentInfo contentInfo);

        /// <summary>
        /// Gets the request builder for InformationProtectionLabelEvaluateApplication.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionLabelEvaluateApplicationRequestBuilder"/>.</returns>
        IInformationProtectionLabelEvaluateApplicationRequestBuilder EvaluateApplication(
            ContentInfo contentInfo,
            LabelingOptions labelingOptions);

        /// <summary>
        /// Gets the request builder for InformationProtectionLabelEvaluateRemoval.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionLabelEvaluateRemovalRequestBuilder"/>.</returns>
        IInformationProtectionLabelEvaluateRemovalRequestBuilder EvaluateRemoval(
            ContentInfo contentInfo,
            DowngradeJustification downgradeJustification = null);

        /// <summary>
        /// Gets the request builder for InformationProtectionLabelEvaluateClassificationResults.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionLabelEvaluateClassificationResultsRequestBuilder"/>.</returns>
        IInformationProtectionLabelEvaluateClassificationResultsRequestBuilder EvaluateClassificationResults(
            ContentInfo contentInfo,
            IEnumerable<ClassificationResult> classificationResults);
    }
}
