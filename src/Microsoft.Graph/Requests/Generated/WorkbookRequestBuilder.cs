// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type WorkbookRequestBuilder.
    /// </summary>
    public partial class WorkbookRequestBuilder : EntityRequestBuilder, IWorkbookRequestBuilder
    {

        /// <summary>
        /// Constructs a new WorkbookRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public WorkbookRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IWorkbookRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IWorkbookRequest Request(IEnumerable<Option> options)
        {
            return new WorkbookRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for Application.
        /// </summary>
        /// <returns>The <see cref="IWorkbookApplicationRequestBuilder"/>.</returns>
        public IWorkbookApplicationRequestBuilder Application
        {
            get
            {
                return new WorkbookApplicationRequestBuilder(this.AppendSegmentToRequestUrl("application"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Names.
        /// </summary>
        /// <returns>The <see cref="IWorkbookNamesCollectionRequestBuilder"/>.</returns>
        public IWorkbookNamesCollectionRequestBuilder Names
        {
            get
            {
                return new WorkbookNamesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("names"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Tables.
        /// </summary>
        /// <returns>The <see cref="IWorkbookTablesCollectionRequestBuilder"/>.</returns>
        public IWorkbookTablesCollectionRequestBuilder Tables
        {
            get
            {
                return new WorkbookTablesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("tables"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Worksheets.
        /// </summary>
        /// <returns>The <see cref="IWorkbookWorksheetsCollectionRequestBuilder"/>.</returns>
        public IWorkbookWorksheetsCollectionRequestBuilder Worksheets
        {
            get
            {
                return new WorkbookWorksheetsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("worksheets"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Comments.
        /// </summary>
        /// <returns>The <see cref="IWorkbookCommentsCollectionRequestBuilder"/>.</returns>
        public IWorkbookCommentsCollectionRequestBuilder Comments
        {
            get
            {
                return new WorkbookCommentsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("comments"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Functions.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRequestBuilder Functions
        {
            get
            {
                return new WorkbookFunctionsRequestBuilder(this.AppendSegmentToRequestUrl("functions"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for WorkbookCreateSession.
        /// </summary>
        /// <returns>The <see cref="IWorkbookCreateSessionRequestBuilder"/>.</returns>
        public IWorkbookCreateSessionRequestBuilder CreateSession(
            bool persistChanges)
        {
            return new WorkbookCreateSessionRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.createSession"),
                this.Client,
                persistChanges);
        }

        /// <summary>
        /// Gets the request builder for WorkbookCloseSession.
        /// </summary>
        /// <returns>The <see cref="IWorkbookCloseSessionRequestBuilder"/>.</returns>
        public IWorkbookCloseSessionRequestBuilder CloseSession()
        {
            return new WorkbookCloseSessionRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.closeSession"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for WorkbookRefreshSession.
        /// </summary>
        /// <returns>The <see cref="IWorkbookRefreshSessionRequestBuilder"/>.</returns>
        public IWorkbookRefreshSessionRequestBuilder RefreshSession()
        {
            return new WorkbookRefreshSessionRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.refreshSession"),
                this.Client);
        }
    
    }
}
