// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type ReportRootRequestBuilder.
    /// </summary>
    public partial class ReportRootRequestBuilder : EntityRequestBuilder, IReportRootRequestBuilder
    {

        /// <summary>
        /// Constructs a new ReportRootRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public ReportRootRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IReportRootRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IReportRootRequest Request(IEnumerable<Option> options)
        {
            return new ReportRootRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for ApplicationSignInDetailedSummary.
        /// </summary>
        /// <returns>The <see cref="IReportRootApplicationSignInDetailedSummaryCollectionRequestBuilder"/>.</returns>
        public IReportRootApplicationSignInDetailedSummaryCollectionRequestBuilder ApplicationSignInDetailedSummary
        {
            get
            {
                return new ReportRootApplicationSignInDetailedSummaryCollectionRequestBuilder(this.AppendSegmentToRequestUrl("applicationSignInDetailedSummary"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for CredentialUserRegistrationDetails.
        /// </summary>
        /// <returns>The <see cref="IReportRootCredentialUserRegistrationDetailsCollectionRequestBuilder"/>.</returns>
        public IReportRootCredentialUserRegistrationDetailsCollectionRequestBuilder CredentialUserRegistrationDetails
        {
            get
            {
                return new ReportRootCredentialUserRegistrationDetailsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("credentialUserRegistrationDetails"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserCredentialUsageDetails.
        /// </summary>
        /// <returns>The <see cref="IReportRootUserCredentialUsageDetailsCollectionRequestBuilder"/>.</returns>
        public IReportRootUserCredentialUsageDetailsCollectionRequestBuilder UserCredentialUsageDetails
        {
            get
            {
                return new ReportRootUserCredentialUsageDetailsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userCredentialUsageDetails"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for ReportRootGetAzureADLicenseUsage.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetAzureADLicenseUsageRequestBuilder"/>.</returns>
        public IReportRootGetAzureADLicenseUsageRequestBuilder GetAzureADLicenseUsage(
            string period)
        {
            return new ReportRootGetAzureADLicenseUsageRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getAzureADLicenseUsage"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetAzureADUserFeatureUsage.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetAzureADUserFeatureUsageRequestBuilder"/>.</returns>
        public IReportRootGetAzureADUserFeatureUsageRequestBuilder GetAzureADUserFeatureUsage()
        {
            return new ReportRootGetAzureADUserFeatureUsageRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getAzureADUserFeatureUsage"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetAzureADFeatureUsage.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetAzureADFeatureUsageRequestBuilder"/>.</returns>
        public IReportRootGetAzureADFeatureUsageRequestBuilder GetAzureADFeatureUsage(
            string period)
        {
            return new ReportRootGetAzureADFeatureUsageRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getAzureADFeatureUsage"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetAzureADApplicationSignInSummary.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetAzureADApplicationSignInSummaryRequestBuilder"/>.</returns>
        public IReportRootGetAzureADApplicationSignInSummaryRequestBuilder GetAzureADApplicationSignInSummary(
            string period)
        {
            return new ReportRootGetAzureADApplicationSignInSummaryRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getAzureADApplicationSignInSummary"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetCredentialUserRegistrationCount.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetCredentialUserRegistrationCountRequestBuilder"/>.</returns>
        public IReportRootGetCredentialUserRegistrationCountRequestBuilder GetCredentialUserRegistrationCount()
        {
            return new ReportRootGetCredentialUserRegistrationCountRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getCredentialUserRegistrationCount"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetCredentialUsageSummary.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetCredentialUsageSummaryRequestBuilder"/>.</returns>
        public IReportRootGetCredentialUsageSummaryRequestBuilder GetCredentialUsageSummary(
            string period)
        {
            return new ReportRootGetCredentialUsageSummaryRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getCredentialUsageSummary"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetRelyingPartyDetailedSummary.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetRelyingPartyDetailedSummaryRequestBuilder"/>.</returns>
        public IReportRootGetRelyingPartyDetailedSummaryRequestBuilder GetRelyingPartyDetailedSummary(
            string period)
        {
            return new ReportRootGetRelyingPartyDetailedSummaryRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getRelyingPartyDetailedSummary"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootDeviceConfigurationUserActivity.
        /// </summary>
        /// <returns>The <see cref="IReportRootDeviceConfigurationUserActivityRequestBuilder"/>.</returns>
        public IReportRootDeviceConfigurationUserActivityRequestBuilder DeviceConfigurationUserActivity()
        {
            return new ReportRootDeviceConfigurationUserActivityRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.deviceConfigurationUserActivity"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ReportRootDeviceConfigurationDeviceActivity.
        /// </summary>
        /// <returns>The <see cref="IReportRootDeviceConfigurationDeviceActivityRequestBuilder"/>.</returns>
        public IReportRootDeviceConfigurationDeviceActivityRequestBuilder DeviceConfigurationDeviceActivity()
        {
            return new ReportRootDeviceConfigurationDeviceActivityRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.deviceConfigurationDeviceActivity"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ReportRootManagedDeviceEnrollmentFailureDetails.
        /// </summary>
        /// <returns>The <see cref="IReportRootManagedDeviceEnrollmentFailureDetailsRequestBuilder"/>.</returns>
        public IReportRootManagedDeviceEnrollmentFailureDetailsRequestBuilder ManagedDeviceEnrollmentFailureDetails()
        {
            return new ReportRootManagedDeviceEnrollmentFailureDetailsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.managedDeviceEnrollmentFailureDetails"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ReportRootManagedDeviceEnrollmentFailureDetails.
        /// </summary>
        /// <returns>The <see cref="IReportRootManagedDeviceEnrollmentFailureDetailsRequestBuilder"/>.</returns>
        public IReportRootManagedDeviceEnrollmentFailureDetailsRequestBuilder ManagedDeviceEnrollmentFailureDetails(
            Int32? skip = null,
            Int32? top = null,
            string filter = null,
            string skipToken = null)
        {
            return new ReportRootManagedDeviceEnrollmentFailureDetailsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.managedDeviceEnrollmentFailureDetails"),
                this.Client,
                skip,
                top,
                filter,
                skipToken);
        }

        /// <summary>
        /// Gets the request builder for ReportRootManagedDeviceEnrollmentFailureTrends.
        /// </summary>
        /// <returns>The <see cref="IReportRootManagedDeviceEnrollmentFailureTrendsRequestBuilder"/>.</returns>
        public IReportRootManagedDeviceEnrollmentFailureTrendsRequestBuilder ManagedDeviceEnrollmentFailureTrends()
        {
            return new ReportRootManagedDeviceEnrollmentFailureTrendsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.managedDeviceEnrollmentFailureTrends"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ReportRootManagedDeviceEnrollmentTopFailures.
        /// </summary>
        /// <returns>The <see cref="IReportRootManagedDeviceEnrollmentTopFailuresRequestBuilder"/>.</returns>
        public IReportRootManagedDeviceEnrollmentTopFailuresRequestBuilder ManagedDeviceEnrollmentTopFailures()
        {
            return new ReportRootManagedDeviceEnrollmentTopFailuresRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.managedDeviceEnrollmentTopFailures"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ReportRootManagedDeviceEnrollmentTopFailures.
        /// </summary>
        /// <returns>The <see cref="IReportRootManagedDeviceEnrollmentTopFailuresRequestBuilder"/>.</returns>
        public IReportRootManagedDeviceEnrollmentTopFailuresRequestBuilder ManagedDeviceEnrollmentTopFailures(
            string period = null)
        {
            return new ReportRootManagedDeviceEnrollmentTopFailuresRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.managedDeviceEnrollmentTopFailures"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootManagedDeviceEnrollmentAbandonmentSummary.
        /// </summary>
        /// <returns>The <see cref="IReportRootManagedDeviceEnrollmentAbandonmentSummaryRequestBuilder"/>.</returns>
        public IReportRootManagedDeviceEnrollmentAbandonmentSummaryRequestBuilder ManagedDeviceEnrollmentAbandonmentSummary(
            Int32? skip = null,
            Int32? top = null,
            string filter = null,
            string skipToken = null)
        {
            return new ReportRootManagedDeviceEnrollmentAbandonmentSummaryRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.managedDeviceEnrollmentAbandonmentSummary"),
                this.Client,
                skip,
                top,
                filter,
                skipToken);
        }

        /// <summary>
        /// Gets the request builder for ReportRootManagedDeviceEnrollmentAbandonmentDetails.
        /// </summary>
        /// <returns>The <see cref="IReportRootManagedDeviceEnrollmentAbandonmentDetailsRequestBuilder"/>.</returns>
        public IReportRootManagedDeviceEnrollmentAbandonmentDetailsRequestBuilder ManagedDeviceEnrollmentAbandonmentDetails(
            Int32? skip = null,
            Int32? top = null,
            string filter = null,
            string skipToken = null)
        {
            return new ReportRootManagedDeviceEnrollmentAbandonmentDetailsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.managedDeviceEnrollmentAbandonmentDetails"),
                this.Client,
                skip,
                top,
                filter,
                skipToken);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365ActivationsUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365ActivationsUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetOffice365ActivationsUserDetailRequestBuilder GetOffice365ActivationsUserDetail()
        {
            return new ReportRootGetOffice365ActivationsUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365ActivationsUserDetail"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365ActivationCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365ActivationCountsRequestBuilder"/>.</returns>
        public IReportRootGetOffice365ActivationCountsRequestBuilder GetOffice365ActivationCounts()
        {
            return new ReportRootGetOffice365ActivationCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365ActivationCounts"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365ActivationsUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365ActivationsUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetOffice365ActivationsUserCountsRequestBuilder GetOffice365ActivationsUserCounts()
        {
            return new ReportRootGetOffice365ActivationsUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365ActivationsUserCounts"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365ActiveUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365ActiveUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetOffice365ActiveUserDetailRequestBuilder GetOffice365ActiveUserDetail(
            Date date)
        {
            return new ReportRootGetOffice365ActiveUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365ActiveUserDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365ActiveUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365ActiveUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetOffice365ActiveUserDetailRequestBuilder GetOffice365ActiveUserDetail(
            string period)
        {
            return new ReportRootGetOffice365ActiveUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365ActiveUserDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365ServicesUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365ServicesUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetOffice365ServicesUserCountsRequestBuilder GetOffice365ServicesUserCounts(
            string period)
        {
            return new ReportRootGetOffice365ServicesUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365ServicesUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365ActiveUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365ActiveUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetOffice365ActiveUserCountsRequestBuilder GetOffice365ActiveUserCounts(
            string period)
        {
            return new ReportRootGetOffice365ActiveUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365ActiveUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365GroupsActivityDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365GroupsActivityDetailRequestBuilder"/>.</returns>
        public IReportRootGetOffice365GroupsActivityDetailRequestBuilder GetOffice365GroupsActivityDetail(
            Date date)
        {
            return new ReportRootGetOffice365GroupsActivityDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365GroupsActivityDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365GroupsActivityDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365GroupsActivityDetailRequestBuilder"/>.</returns>
        public IReportRootGetOffice365GroupsActivityDetailRequestBuilder GetOffice365GroupsActivityDetail(
            string period)
        {
            return new ReportRootGetOffice365GroupsActivityDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365GroupsActivityDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365GroupsActivityCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365GroupsActivityCountsRequestBuilder"/>.</returns>
        public IReportRootGetOffice365GroupsActivityCountsRequestBuilder GetOffice365GroupsActivityCounts(
            string period)
        {
            return new ReportRootGetOffice365GroupsActivityCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365GroupsActivityCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365GroupsActivityGroupCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365GroupsActivityGroupCountsRequestBuilder"/>.</returns>
        public IReportRootGetOffice365GroupsActivityGroupCountsRequestBuilder GetOffice365GroupsActivityGroupCounts(
            string period)
        {
            return new ReportRootGetOffice365GroupsActivityGroupCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365GroupsActivityGroupCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365GroupsActivityStorage.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365GroupsActivityStorageRequestBuilder"/>.</returns>
        public IReportRootGetOffice365GroupsActivityStorageRequestBuilder GetOffice365GroupsActivityStorage(
            string period)
        {
            return new ReportRootGetOffice365GroupsActivityStorageRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365GroupsActivityStorage"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOffice365GroupsActivityFileCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOffice365GroupsActivityFileCountsRequestBuilder"/>.</returns>
        public IReportRootGetOffice365GroupsActivityFileCountsRequestBuilder GetOffice365GroupsActivityFileCounts(
            string period)
        {
            return new ReportRootGetOffice365GroupsActivityFileCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOffice365GroupsActivityFileCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetEmailActivityUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetEmailActivityUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetEmailActivityUserDetailRequestBuilder GetEmailActivityUserDetail(
            Date date)
        {
            return new ReportRootGetEmailActivityUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEmailActivityUserDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetEmailActivityUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetEmailActivityUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetEmailActivityUserDetailRequestBuilder GetEmailActivityUserDetail(
            string period)
        {
            return new ReportRootGetEmailActivityUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEmailActivityUserDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetEmailActivityCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetEmailActivityCountsRequestBuilder"/>.</returns>
        public IReportRootGetEmailActivityCountsRequestBuilder GetEmailActivityCounts(
            string period)
        {
            return new ReportRootGetEmailActivityCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEmailActivityCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetEmailActivityUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetEmailActivityUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetEmailActivityUserCountsRequestBuilder GetEmailActivityUserCounts(
            string period)
        {
            return new ReportRootGetEmailActivityUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEmailActivityUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetEmailAppUsageUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetEmailAppUsageUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetEmailAppUsageUserDetailRequestBuilder GetEmailAppUsageUserDetail(
            Date date)
        {
            return new ReportRootGetEmailAppUsageUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEmailAppUsageUserDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetEmailAppUsageUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetEmailAppUsageUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetEmailAppUsageUserDetailRequestBuilder GetEmailAppUsageUserDetail(
            string period)
        {
            return new ReportRootGetEmailAppUsageUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEmailAppUsageUserDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetEmailAppUsageAppsUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetEmailAppUsageAppsUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetEmailAppUsageAppsUserCountsRequestBuilder GetEmailAppUsageAppsUserCounts(
            string period)
        {
            return new ReportRootGetEmailAppUsageAppsUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEmailAppUsageAppsUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetEmailAppUsageUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetEmailAppUsageUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetEmailAppUsageUserCountsRequestBuilder GetEmailAppUsageUserCounts(
            string period)
        {
            return new ReportRootGetEmailAppUsageUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEmailAppUsageUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetEmailAppUsageVersionsUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetEmailAppUsageVersionsUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetEmailAppUsageVersionsUserCountsRequestBuilder GetEmailAppUsageVersionsUserCounts(
            string period)
        {
            return new ReportRootGetEmailAppUsageVersionsUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEmailAppUsageVersionsUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetMailboxUsageDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetMailboxUsageDetailRequestBuilder"/>.</returns>
        public IReportRootGetMailboxUsageDetailRequestBuilder GetMailboxUsageDetail(
            string period)
        {
            return new ReportRootGetMailboxUsageDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getMailboxUsageDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetMailboxUsageMailboxCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetMailboxUsageMailboxCountsRequestBuilder"/>.</returns>
        public IReportRootGetMailboxUsageMailboxCountsRequestBuilder GetMailboxUsageMailboxCounts(
            string period)
        {
            return new ReportRootGetMailboxUsageMailboxCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getMailboxUsageMailboxCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetMailboxUsageQuotaStatusMailboxCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetMailboxUsageQuotaStatusMailboxCountsRequestBuilder"/>.</returns>
        public IReportRootGetMailboxUsageQuotaStatusMailboxCountsRequestBuilder GetMailboxUsageQuotaStatusMailboxCounts(
            string period)
        {
            return new ReportRootGetMailboxUsageQuotaStatusMailboxCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getMailboxUsageQuotaStatusMailboxCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetMailboxUsageStorage.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetMailboxUsageStorageRequestBuilder"/>.</returns>
        public IReportRootGetMailboxUsageStorageRequestBuilder GetMailboxUsageStorage(
            string period)
        {
            return new ReportRootGetMailboxUsageStorageRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getMailboxUsageStorage"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOneDriveActivityUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOneDriveActivityUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetOneDriveActivityUserDetailRequestBuilder GetOneDriveActivityUserDetail(
            Date date)
        {
            return new ReportRootGetOneDriveActivityUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOneDriveActivityUserDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOneDriveActivityUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOneDriveActivityUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetOneDriveActivityUserDetailRequestBuilder GetOneDriveActivityUserDetail(
            string period)
        {
            return new ReportRootGetOneDriveActivityUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOneDriveActivityUserDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOneDriveActivityUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOneDriveActivityUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetOneDriveActivityUserCountsRequestBuilder GetOneDriveActivityUserCounts(
            string period)
        {
            return new ReportRootGetOneDriveActivityUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOneDriveActivityUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOneDriveActivityFileCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOneDriveActivityFileCountsRequestBuilder"/>.</returns>
        public IReportRootGetOneDriveActivityFileCountsRequestBuilder GetOneDriveActivityFileCounts(
            string period)
        {
            return new ReportRootGetOneDriveActivityFileCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOneDriveActivityFileCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOneDriveUsageAccountDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOneDriveUsageAccountDetailRequestBuilder"/>.</returns>
        public IReportRootGetOneDriveUsageAccountDetailRequestBuilder GetOneDriveUsageAccountDetail(
            Date date)
        {
            return new ReportRootGetOneDriveUsageAccountDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOneDriveUsageAccountDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOneDriveUsageAccountDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOneDriveUsageAccountDetailRequestBuilder"/>.</returns>
        public IReportRootGetOneDriveUsageAccountDetailRequestBuilder GetOneDriveUsageAccountDetail(
            string period)
        {
            return new ReportRootGetOneDriveUsageAccountDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOneDriveUsageAccountDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOneDriveUsageAccountCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOneDriveUsageAccountCountsRequestBuilder"/>.</returns>
        public IReportRootGetOneDriveUsageAccountCountsRequestBuilder GetOneDriveUsageAccountCounts(
            string period)
        {
            return new ReportRootGetOneDriveUsageAccountCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOneDriveUsageAccountCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOneDriveUsageFileCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOneDriveUsageFileCountsRequestBuilder"/>.</returns>
        public IReportRootGetOneDriveUsageFileCountsRequestBuilder GetOneDriveUsageFileCounts(
            string period)
        {
            return new ReportRootGetOneDriveUsageFileCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOneDriveUsageFileCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetOneDriveUsageStorage.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOneDriveUsageStorageRequestBuilder"/>.</returns>
        public IReportRootGetOneDriveUsageStorageRequestBuilder GetOneDriveUsageStorage(
            string period)
        {
            return new ReportRootGetOneDriveUsageStorageRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getOneDriveUsageStorage"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSharePointActivityUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSharePointActivityUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetSharePointActivityUserDetailRequestBuilder GetSharePointActivityUserDetail(
            Date date)
        {
            return new ReportRootGetSharePointActivityUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSharePointActivityUserDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSharePointActivityUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSharePointActivityUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetSharePointActivityUserDetailRequestBuilder GetSharePointActivityUserDetail(
            string period)
        {
            return new ReportRootGetSharePointActivityUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSharePointActivityUserDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSharePointActivityFileCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSharePointActivityFileCountsRequestBuilder"/>.</returns>
        public IReportRootGetSharePointActivityFileCountsRequestBuilder GetSharePointActivityFileCounts(
            string period)
        {
            return new ReportRootGetSharePointActivityFileCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSharePointActivityFileCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSharePointActivityUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSharePointActivityUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetSharePointActivityUserCountsRequestBuilder GetSharePointActivityUserCounts(
            string period)
        {
            return new ReportRootGetSharePointActivityUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSharePointActivityUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSharePointActivityPages.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSharePointActivityPagesRequestBuilder"/>.</returns>
        public IReportRootGetSharePointActivityPagesRequestBuilder GetSharePointActivityPages(
            string period)
        {
            return new ReportRootGetSharePointActivityPagesRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSharePointActivityPages"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSharePointSiteUsageDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSharePointSiteUsageDetailRequestBuilder"/>.</returns>
        public IReportRootGetSharePointSiteUsageDetailRequestBuilder GetSharePointSiteUsageDetail(
            Date date)
        {
            return new ReportRootGetSharePointSiteUsageDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSharePointSiteUsageDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSharePointSiteUsageDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSharePointSiteUsageDetailRequestBuilder"/>.</returns>
        public IReportRootGetSharePointSiteUsageDetailRequestBuilder GetSharePointSiteUsageDetail(
            string period)
        {
            return new ReportRootGetSharePointSiteUsageDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSharePointSiteUsageDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSharePointSiteUsageFileCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSharePointSiteUsageFileCountsRequestBuilder"/>.</returns>
        public IReportRootGetSharePointSiteUsageFileCountsRequestBuilder GetSharePointSiteUsageFileCounts(
            string period)
        {
            return new ReportRootGetSharePointSiteUsageFileCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSharePointSiteUsageFileCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSharePointSiteUsageSiteCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSharePointSiteUsageSiteCountsRequestBuilder"/>.</returns>
        public IReportRootGetSharePointSiteUsageSiteCountsRequestBuilder GetSharePointSiteUsageSiteCounts(
            string period)
        {
            return new ReportRootGetSharePointSiteUsageSiteCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSharePointSiteUsageSiteCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSharePointSiteUsageStorage.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSharePointSiteUsageStorageRequestBuilder"/>.</returns>
        public IReportRootGetSharePointSiteUsageStorageRequestBuilder GetSharePointSiteUsageStorage(
            string period)
        {
            return new ReportRootGetSharePointSiteUsageStorageRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSharePointSiteUsageStorage"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSharePointSiteUsagePages.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSharePointSiteUsagePagesRequestBuilder"/>.</returns>
        public IReportRootGetSharePointSiteUsagePagesRequestBuilder GetSharePointSiteUsagePages(
            string period)
        {
            return new ReportRootGetSharePointSiteUsagePagesRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSharePointSiteUsagePages"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessActivityUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessActivityUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessActivityUserDetailRequestBuilder GetSkypeForBusinessActivityUserDetail(
            Date date)
        {
            return new ReportRootGetSkypeForBusinessActivityUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessActivityUserDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessActivityUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessActivityUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessActivityUserDetailRequestBuilder GetSkypeForBusinessActivityUserDetail(
            string period)
        {
            return new ReportRootGetSkypeForBusinessActivityUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessActivityUserDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessActivityCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessActivityCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessActivityCountsRequestBuilder GetSkypeForBusinessActivityCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessActivityCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessActivityCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessActivityUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessActivityUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessActivityUserCountsRequestBuilder GetSkypeForBusinessActivityUserCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessActivityUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessActivityUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessPeerToPeerActivityCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessPeerToPeerActivityCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessPeerToPeerActivityCountsRequestBuilder GetSkypeForBusinessPeerToPeerActivityCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessPeerToPeerActivityCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessPeerToPeerActivityCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessPeerToPeerActivityUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessPeerToPeerActivityUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessPeerToPeerActivityUserCountsRequestBuilder GetSkypeForBusinessPeerToPeerActivityUserCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessPeerToPeerActivityUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessPeerToPeerActivityUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessPeerToPeerActivityMinuteCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessPeerToPeerActivityMinuteCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessPeerToPeerActivityMinuteCountsRequestBuilder GetSkypeForBusinessPeerToPeerActivityMinuteCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessPeerToPeerActivityMinuteCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessPeerToPeerActivityMinuteCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessOrganizerActivityCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessOrganizerActivityCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessOrganizerActivityCountsRequestBuilder GetSkypeForBusinessOrganizerActivityCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessOrganizerActivityCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessOrganizerActivityCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessOrganizerActivityUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessOrganizerActivityUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessOrganizerActivityUserCountsRequestBuilder GetSkypeForBusinessOrganizerActivityUserCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessOrganizerActivityUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessOrganizerActivityUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessOrganizerActivityMinuteCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessOrganizerActivityMinuteCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessOrganizerActivityMinuteCountsRequestBuilder GetSkypeForBusinessOrganizerActivityMinuteCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessOrganizerActivityMinuteCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessOrganizerActivityMinuteCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessParticipantActivityCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessParticipantActivityCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessParticipantActivityCountsRequestBuilder GetSkypeForBusinessParticipantActivityCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessParticipantActivityCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessParticipantActivityCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessParticipantActivityUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessParticipantActivityUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessParticipantActivityUserCountsRequestBuilder GetSkypeForBusinessParticipantActivityUserCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessParticipantActivityUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessParticipantActivityUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessParticipantActivityMinuteCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessParticipantActivityMinuteCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessParticipantActivityMinuteCountsRequestBuilder GetSkypeForBusinessParticipantActivityMinuteCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessParticipantActivityMinuteCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessParticipantActivityMinuteCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessDeviceUsageUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessDeviceUsageUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessDeviceUsageUserDetailRequestBuilder GetSkypeForBusinessDeviceUsageUserDetail(
            Date date)
        {
            return new ReportRootGetSkypeForBusinessDeviceUsageUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessDeviceUsageUserDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessDeviceUsageUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessDeviceUsageUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessDeviceUsageUserDetailRequestBuilder GetSkypeForBusinessDeviceUsageUserDetail(
            string period)
        {
            return new ReportRootGetSkypeForBusinessDeviceUsageUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessDeviceUsageUserDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessDeviceUsageDistributionUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessDeviceUsageDistributionUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessDeviceUsageDistributionUserCountsRequestBuilder GetSkypeForBusinessDeviceUsageDistributionUserCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessDeviceUsageDistributionUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessDeviceUsageDistributionUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetSkypeForBusinessDeviceUsageUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetSkypeForBusinessDeviceUsageUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetSkypeForBusinessDeviceUsageUserCountsRequestBuilder GetSkypeForBusinessDeviceUsageUserCounts(
            string period)
        {
            return new ReportRootGetSkypeForBusinessDeviceUsageUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSkypeForBusinessDeviceUsageUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetYammerActivityUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetYammerActivityUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetYammerActivityUserDetailRequestBuilder GetYammerActivityUserDetail(
            Date date)
        {
            return new ReportRootGetYammerActivityUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getYammerActivityUserDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetYammerActivityUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetYammerActivityUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetYammerActivityUserDetailRequestBuilder GetYammerActivityUserDetail(
            string period)
        {
            return new ReportRootGetYammerActivityUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getYammerActivityUserDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetYammerActivityCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetYammerActivityCountsRequestBuilder"/>.</returns>
        public IReportRootGetYammerActivityCountsRequestBuilder GetYammerActivityCounts(
            string period)
        {
            return new ReportRootGetYammerActivityCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getYammerActivityCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetYammerActivityUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetYammerActivityUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetYammerActivityUserCountsRequestBuilder GetYammerActivityUserCounts(
            string period)
        {
            return new ReportRootGetYammerActivityUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getYammerActivityUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetYammerDeviceUsageUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetYammerDeviceUsageUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetYammerDeviceUsageUserDetailRequestBuilder GetYammerDeviceUsageUserDetail(
            Date date)
        {
            return new ReportRootGetYammerDeviceUsageUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getYammerDeviceUsageUserDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetYammerDeviceUsageUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetYammerDeviceUsageUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetYammerDeviceUsageUserDetailRequestBuilder GetYammerDeviceUsageUserDetail(
            string period)
        {
            return new ReportRootGetYammerDeviceUsageUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getYammerDeviceUsageUserDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetYammerDeviceUsageDistributionUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetYammerDeviceUsageDistributionUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetYammerDeviceUsageDistributionUserCountsRequestBuilder GetYammerDeviceUsageDistributionUserCounts(
            string period)
        {
            return new ReportRootGetYammerDeviceUsageDistributionUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getYammerDeviceUsageDistributionUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetYammerDeviceUsageUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetYammerDeviceUsageUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetYammerDeviceUsageUserCountsRequestBuilder GetYammerDeviceUsageUserCounts(
            string period)
        {
            return new ReportRootGetYammerDeviceUsageUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getYammerDeviceUsageUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetYammerGroupsActivityDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetYammerGroupsActivityDetailRequestBuilder"/>.</returns>
        public IReportRootGetYammerGroupsActivityDetailRequestBuilder GetYammerGroupsActivityDetail(
            Date date)
        {
            return new ReportRootGetYammerGroupsActivityDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getYammerGroupsActivityDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetYammerGroupsActivityDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetYammerGroupsActivityDetailRequestBuilder"/>.</returns>
        public IReportRootGetYammerGroupsActivityDetailRequestBuilder GetYammerGroupsActivityDetail(
            string period)
        {
            return new ReportRootGetYammerGroupsActivityDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getYammerGroupsActivityDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetYammerGroupsActivityGroupCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetYammerGroupsActivityGroupCountsRequestBuilder"/>.</returns>
        public IReportRootGetYammerGroupsActivityGroupCountsRequestBuilder GetYammerGroupsActivityGroupCounts(
            string period)
        {
            return new ReportRootGetYammerGroupsActivityGroupCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getYammerGroupsActivityGroupCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetYammerGroupsActivityCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetYammerGroupsActivityCountsRequestBuilder"/>.</returns>
        public IReportRootGetYammerGroupsActivityCountsRequestBuilder GetYammerGroupsActivityCounts(
            string period)
        {
            return new ReportRootGetYammerGroupsActivityCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getYammerGroupsActivityCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetTeamsUserActivityUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetTeamsUserActivityUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetTeamsUserActivityUserDetailRequestBuilder GetTeamsUserActivityUserDetail(
            Date date)
        {
            return new ReportRootGetTeamsUserActivityUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getTeamsUserActivityUserDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetTeamsUserActivityUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetTeamsUserActivityUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetTeamsUserActivityUserDetailRequestBuilder GetTeamsUserActivityUserDetail(
            string period)
        {
            return new ReportRootGetTeamsUserActivityUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getTeamsUserActivityUserDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetTeamsUserActivityCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetTeamsUserActivityCountsRequestBuilder"/>.</returns>
        public IReportRootGetTeamsUserActivityCountsRequestBuilder GetTeamsUserActivityCounts(
            string period)
        {
            return new ReportRootGetTeamsUserActivityCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getTeamsUserActivityCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetTeamsUserActivityUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetTeamsUserActivityUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetTeamsUserActivityUserCountsRequestBuilder GetTeamsUserActivityUserCounts(
            string period)
        {
            return new ReportRootGetTeamsUserActivityUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getTeamsUserActivityUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetTeamsDeviceUsageUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetTeamsDeviceUsageUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetTeamsDeviceUsageUserDetailRequestBuilder GetTeamsDeviceUsageUserDetail(
            Date date)
        {
            return new ReportRootGetTeamsDeviceUsageUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getTeamsDeviceUsageUserDetail"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetTeamsDeviceUsageUserDetail.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetTeamsDeviceUsageUserDetailRequestBuilder"/>.</returns>
        public IReportRootGetTeamsDeviceUsageUserDetailRequestBuilder GetTeamsDeviceUsageUserDetail(
            string period)
        {
            return new ReportRootGetTeamsDeviceUsageUserDetailRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getTeamsDeviceUsageUserDetail"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetTeamsDeviceUsageUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetTeamsDeviceUsageUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetTeamsDeviceUsageUserCountsRequestBuilder GetTeamsDeviceUsageUserCounts(
            string period)
        {
            return new ReportRootGetTeamsDeviceUsageUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getTeamsDeviceUsageUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetTeamsDeviceUsageDistributionUserCounts.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetTeamsDeviceUsageDistributionUserCountsRequestBuilder"/>.</returns>
        public IReportRootGetTeamsDeviceUsageDistributionUserCountsRequestBuilder GetTeamsDeviceUsageDistributionUserCounts(
            string period)
        {
            return new ReportRootGetTeamsDeviceUsageDistributionUserCountsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getTeamsDeviceUsageDistributionUserCounts"),
                this.Client,
                period);
        }

        /// <summary>
        /// Gets the request builder for ReportRootGetTenantSecureScores.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetTenantSecureScoresRequestBuilder"/>.</returns>
        public IReportRootGetTenantSecureScoresRequestBuilder GetTenantSecureScores(
            Int32 period)
        {
            return new ReportRootGetTenantSecureScoresRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getTenantSecureScores"),
                this.Client,
                period);
        }
    
    }
}
