// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type EducationRootRequestBuilder.
    /// </summary>
    public partial class EducationRootRequestBuilder : EntityRequestBuilder, IEducationRootRequestBuilder
    {

        /// <summary>
        /// Constructs a new EducationRootRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public EducationRootRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IEducationRootRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IEducationRootRequest Request(IEnumerable<Option> options)
        {
            return new EducationRootRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for SynchronizationProfiles.
        /// </summary>
        /// <returns>The <see cref="IEducationRootSynchronizationProfilesCollectionRequestBuilder"/>.</returns>
        public IEducationRootSynchronizationProfilesCollectionRequestBuilder SynchronizationProfiles
        {
            get
            {
                return new EducationRootSynchronizationProfilesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("synchronizationProfiles"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Classes.
        /// </summary>
        /// <returns>The <see cref="IEducationRootClassesCollectionRequestBuilder"/>.</returns>
        public IEducationRootClassesCollectionRequestBuilder Classes
        {
            get
            {
                return new EducationRootClassesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("classes"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Schools.
        /// </summary>
        /// <returns>The <see cref="IEducationRootSchoolsCollectionRequestBuilder"/>.</returns>
        public IEducationRootSchoolsCollectionRequestBuilder Schools
        {
            get
            {
                return new EducationRootSchoolsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("schools"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Users.
        /// </summary>
        /// <returns>The <see cref="IEducationRootUsersCollectionRequestBuilder"/>.</returns>
        public IEducationRootUsersCollectionRequestBuilder Users
        {
            get
            {
                return new EducationRootUsersCollectionRequestBuilder(this.AppendSegmentToRequestUrl("users"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Me.
        /// </summary>
        /// <returns>The <see cref="IEducationUserRequestBuilder"/>.</returns>
        public IEducationUserRequestBuilder Me
        {
            get
            {
                return new EducationUserRequestBuilder(this.AppendSegmentToRequestUrl("me"), this.Client);
            }
        }
    
    }
}
