// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\EntityCollectionRequestBuilder.cs.tt
namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// The type InformationProtectionPolicyLabelsCollectionRequestBuilder.
    /// </summary>
    public partial class InformationProtectionPolicyLabelsCollectionRequestBuilder : BaseRequestBuilder, IInformationProtectionPolicyLabelsCollectionRequestBuilder
    {
        /// <summary>
        /// Constructs a new InformationProtectionPolicyLabelsCollectionRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public InformationProtectionPolicyLabelsCollectionRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public IInformationProtectionPolicyLabelsCollectionRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public IInformationProtectionPolicyLabelsCollectionRequest Request(IEnumerable<Option> options)
        {
            return new InformationProtectionPolicyLabelsCollectionRequest(this.RequestUrl, this.Client, options);
        }

        /// <summary>
        /// Gets an <see cref="IInformationProtectionLabelRequestBuilder"/> for the specified InformationProtectionPolicyInformationProtectionLabel.
        /// </summary>
        /// <param name="id">The ID for the InformationProtectionPolicyInformationProtectionLabel.</param>
        /// <returns>The <see cref="IInformationProtectionLabelRequestBuilder"/>.</returns>
        public IInformationProtectionLabelRequestBuilder this[string id]
        {
            get
            {
                return new InformationProtectionLabelRequestBuilder(this.AppendSegmentToRequestUrl(id), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for InformationProtectionLabelExtractLabel.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionLabelExtractLabelRequestBuilder"/>.</returns>
        public IInformationProtectionLabelExtractLabelRequestBuilder ExtractLabel(
            ContentInfo contentInfo)
        {
            return new InformationProtectionLabelExtractLabelRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.extractLabel"),
                this.Client,
                contentInfo);
        }

        /// <summary>
        /// Gets the request builder for InformationProtectionLabelEvaluateApplication.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionLabelEvaluateApplicationRequestBuilder"/>.</returns>
        public IInformationProtectionLabelEvaluateApplicationRequestBuilder EvaluateApplication(
            ContentInfo contentInfo,
            LabelingOptions labelingOptions)
        {
            return new InformationProtectionLabelEvaluateApplicationRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.evaluateApplication"),
                this.Client,
                contentInfo,
                labelingOptions);
        }

        /// <summary>
        /// Gets the request builder for InformationProtectionLabelEvaluateRemoval.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionLabelEvaluateRemovalRequestBuilder"/>.</returns>
        public IInformationProtectionLabelEvaluateRemovalRequestBuilder EvaluateRemoval(
            ContentInfo contentInfo,
            DowngradeJustification downgradeJustification = null)
        {
            return new InformationProtectionLabelEvaluateRemovalRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.evaluateRemoval"),
                this.Client,
                contentInfo,
                downgradeJustification);
        }

        /// <summary>
        /// Gets the request builder for InformationProtectionLabelEvaluateClassificationResults.
        /// </summary>
        /// <returns>The <see cref="IInformationProtectionLabelEvaluateClassificationResultsRequestBuilder"/>.</returns>
        public IInformationProtectionLabelEvaluateClassificationResultsRequestBuilder EvaluateClassificationResults(
            ContentInfo contentInfo,
            IEnumerable<ClassificationResult> classificationResults)
        {
            return new InformationProtectionLabelEvaluateClassificationResultsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.evaluateClassificationResults"),
                this.Client,
                contentInfo,
                classificationResults);
        }
    }
}
