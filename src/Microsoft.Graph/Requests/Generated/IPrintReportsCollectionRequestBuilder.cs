// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\IEntityCollectionRequestBuilder.cs.tt
namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// The interface IPrintReportsCollectionRequestBuilder.
    /// </summary>
    public partial interface IPrintReportsCollectionRequestBuilder : IBaseRequestBuilder
    {
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        IPrintReportsCollectionRequest Request();

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        IPrintReportsCollectionRequest Request(IEnumerable<Option> options);

        /// <summary>
        /// Gets an <see cref="IReportRootRequestBuilder"/> for the specified ReportRoot.
        /// </summary>
        /// <param name="id">The ID for the ReportRoot.</param>
        /// <returns>The <see cref="IReportRootRequestBuilder"/>.</returns>
        IReportRootRequestBuilder this[string id] { get; }

        /// <summary>
        /// Gets the request builder for ReportRootGetUserArchivedPrintJobs.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetUserArchivedPrintJobsRequestBuilder"/>.</returns>
        IReportRootGetUserArchivedPrintJobsRequestBuilder GetUserArchivedPrintJobs(
            string userId = null,
            DateTimeOffset? periodStart = null,
            DateTimeOffset? periodEnd = null);

        /// <summary>
        /// Gets the request builder for ReportRootGetGroupArchivedPrintJobs.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetGroupArchivedPrintJobsRequestBuilder"/>.</returns>
        IReportRootGetGroupArchivedPrintJobsRequestBuilder GetGroupArchivedPrintJobs(
            string groupId = null,
            DateTimeOffset? periodStart = null,
            DateTimeOffset? periodEnd = null);

        /// <summary>
        /// Gets the request builder for ReportRootGetPrinterArchivedPrintJobs.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetPrinterArchivedPrintJobsRequestBuilder"/>.</returns>
        IReportRootGetPrinterArchivedPrintJobsRequestBuilder GetPrinterArchivedPrintJobs(
            string printerId = null,
            DateTimeOffset? periodStart = null,
            DateTimeOffset? periodEnd = null);

        /// <summary>
        /// Gets the request builder for ReportRootGetUserPrintUsageSummary.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetUserPrintUsageSummaryRequestBuilder"/>.</returns>
        IReportRootGetUserPrintUsageSummaryRequestBuilder GetUserPrintUsageSummary(
            DateTimeOffset periodStart,
            DateTimeOffset periodEnd,
            string userId = null);

        /// <summary>
        /// Gets the request builder for ReportRootGetGroupPrintUsageSummary.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetGroupPrintUsageSummaryRequestBuilder"/>.</returns>
        IReportRootGetGroupPrintUsageSummaryRequestBuilder GetGroupPrintUsageSummary(
            DateTimeOffset periodStart,
            DateTimeOffset periodEnd,
            string groupId = null);

        /// <summary>
        /// Gets the request builder for ReportRootGetPrinterUsageSummary.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetPrinterUsageSummaryRequestBuilder"/>.</returns>
        IReportRootGetPrinterUsageSummaryRequestBuilder GetPrinterUsageSummary(
            DateTimeOffset periodStart,
            DateTimeOffset periodEnd,
            string printerId = null);

        /// <summary>
        /// Gets the request builder for ReportRootGetPrintUsageSummariesByUser.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetPrintUsageSummariesByUserRequestBuilder"/>.</returns>
        IReportRootGetPrintUsageSummariesByUserRequestBuilder GetPrintUsageSummariesByUser(
            DateTimeOffset periodStart,
            DateTimeOffset periodEnd);

        /// <summary>
        /// Gets the request builder for ReportRootGetPrintUsageSummariesByGroup.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetPrintUsageSummariesByGroupRequestBuilder"/>.</returns>
        IReportRootGetPrintUsageSummariesByGroupRequestBuilder GetPrintUsageSummariesByGroup(
            DateTimeOffset periodStart,
            DateTimeOffset periodEnd);

        /// <summary>
        /// Gets the request builder for ReportRootGetPrintUsageSummariesByPrinter.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetPrintUsageSummariesByPrinterRequestBuilder"/>.</returns>
        IReportRootGetPrintUsageSummariesByPrinterRequestBuilder GetPrintUsageSummariesByPrinter(
            DateTimeOffset periodStart,
            DateTimeOffset periodEnd);

        /// <summary>
        /// Gets the request builder for ReportRootGetOverallPrintUsageSummary.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetOverallPrintUsageSummaryRequestBuilder"/>.</returns>
        IReportRootGetOverallPrintUsageSummaryRequestBuilder GetOverallPrintUsageSummary(
            DateTimeOffset periodStart,
            DateTimeOffset periodEnd,
            Int32 topListsSize);

        /// <summary>
        /// Gets the request builder for ReportRootGetPrintUsageSummariesByTimeSpan.
        /// </summary>
        /// <returns>The <see cref="IReportRootGetPrintUsageSummariesByTimeSpanRequestBuilder"/>.</returns>
        IReportRootGetPrintUsageSummariesByTimeSpanRequestBuilder GetPrintUsageSummariesByTimeSpan(
            DateTimeOffset periodStart,
            DateTimeOffset periodEnd,
            Int32 timeSpanInMinutes);
    }
}
