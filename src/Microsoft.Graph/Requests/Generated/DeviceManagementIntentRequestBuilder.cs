// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type DeviceManagementIntentRequestBuilder.
    /// </summary>
    public partial class DeviceManagementIntentRequestBuilder : EntityRequestBuilder, IDeviceManagementIntentRequestBuilder
    {

        /// <summary>
        /// Constructs a new DeviceManagementIntentRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public DeviceManagementIntentRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IDeviceManagementIntentRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IDeviceManagementIntentRequest Request(IEnumerable<Option> options)
        {
            return new DeviceManagementIntentRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for Settings.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentSettingsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementIntentSettingsCollectionRequestBuilder Settings
        {
            get
            {
                return new DeviceManagementIntentSettingsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("settings"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Categories.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentCategoriesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementIntentCategoriesCollectionRequestBuilder Categories
        {
            get
            {
                return new DeviceManagementIntentCategoriesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("categories"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Assignments.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentAssignmentsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementIntentAssignmentsCollectionRequestBuilder Assignments
        {
            get
            {
                return new DeviceManagementIntentAssignmentsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("assignments"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceSettingStateSummaries.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentDeviceSettingStateSummariesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementIntentDeviceSettingStateSummariesCollectionRequestBuilder DeviceSettingStateSummaries
        {
            get
            {
                return new DeviceManagementIntentDeviceSettingStateSummariesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceSettingStateSummaries"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceStates.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentDeviceStatesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementIntentDeviceStatesCollectionRequestBuilder DeviceStates
        {
            get
            {
                return new DeviceManagementIntentDeviceStatesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceStates"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserStates.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentUserStatesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementIntentUserStatesCollectionRequestBuilder UserStates
        {
            get
            {
                return new DeviceManagementIntentUserStatesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userStates"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceStateSummary.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentDeviceStateSummaryRequestBuilder"/>.</returns>
        public IDeviceManagementIntentDeviceStateSummaryRequestBuilder DeviceStateSummary
        {
            get
            {
                return new DeviceManagementIntentDeviceStateSummaryRequestBuilder(this.AppendSegmentToRequestUrl("deviceStateSummary"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserStateSummary.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentUserStateSummaryRequestBuilder"/>.</returns>
        public IDeviceManagementIntentUserStateSummaryRequestBuilder UserStateSummary
        {
            get
            {
                return new DeviceManagementIntentUserStateSummaryRequestBuilder(this.AppendSegmentToRequestUrl("userStateSummary"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for DeviceManagementIntentUpdateSettings.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentUpdateSettingsRequestBuilder"/>.</returns>
        public IDeviceManagementIntentUpdateSettingsRequestBuilder UpdateSettings(
            IEnumerable<DeviceManagementSettingInstance> settings = null)
        {
            return new DeviceManagementIntentUpdateSettingsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.updateSettings"),
                this.Client,
                settings);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementIntentMigrateToTemplate.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentMigrateToTemplateRequestBuilder"/>.</returns>
        public IDeviceManagementIntentMigrateToTemplateRequestBuilder MigrateToTemplate(
            bool preserveCustomValues,
            string newTemplateId = null)
        {
            return new DeviceManagementIntentMigrateToTemplateRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.migrateToTemplate"),
                this.Client,
                preserveCustomValues,
                newTemplateId);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementIntentAssign.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentAssignRequestBuilder"/>.</returns>
        public IDeviceManagementIntentAssignRequestBuilder Assign(
            IEnumerable<DeviceManagementIntentAssignment> assignments = null)
        {
            return new DeviceManagementIntentAssignRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.assign"),
                this.Client,
                assignments);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementIntentCompare.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentCompareRequestBuilder"/>.</returns>
        public IDeviceManagementIntentCompareRequestBuilder Compare(
            string templateId = null)
        {
            return new DeviceManagementIntentCompareRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.compare"),
                this.Client,
                templateId);
        }
    
    }
}
