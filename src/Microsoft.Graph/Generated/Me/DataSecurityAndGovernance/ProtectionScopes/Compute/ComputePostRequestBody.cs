// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Graph.Beta.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Me.DataSecurityAndGovernance.ProtectionScopes.Compute
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ComputePostRequestBody : IAdditionalDataHolder, IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The activities property</summary>
        public global::Microsoft.Graph.Beta.Models.UserActivityTypes? Activities
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.UserActivityTypes?>("activities"); }
            set { BackingStore?.Set("activities", value); }
        }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>The deviceMetadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.DeviceMetadata? DeviceMetadata
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.DeviceMetadata?>("deviceMetadata"); }
            set { BackingStore?.Set("deviceMetadata", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.DeviceMetadata DeviceMetadata
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.DeviceMetadata>("deviceMetadata"); }
            set { BackingStore?.Set("deviceMetadata", value); }
        }
#endif
        /// <summary>The integratedAppMetadata property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.IntegratedApplicationMetadata? IntegratedAppMetadata
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IntegratedApplicationMetadata?>("integratedAppMetadata"); }
            set { BackingStore?.Set("integratedAppMetadata", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.IntegratedApplicationMetadata IntegratedAppMetadata
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IntegratedApplicationMetadata>("integratedAppMetadata"); }
            set { BackingStore?.Set("integratedAppMetadata", value); }
        }
#endif
        /// <summary>The locations property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.PolicyLocation>? Locations
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.PolicyLocation>?>("locations"); }
            set { BackingStore?.Set("locations", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.PolicyLocation> Locations
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.PolicyLocation>>("locations"); }
            set { BackingStore?.Set("locations", value); }
        }
#endif
        /// <summary>The pivotOn property</summary>
        public global::Microsoft.Graph.Beta.Models.PolicyPivotProperty? PivotOn
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.PolicyPivotProperty?>("pivotOn"); }
            set { BackingStore?.Set("pivotOn", value); }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Me.DataSecurityAndGovernance.ProtectionScopes.Compute.ComputePostRequestBody"/> and sets the default values.
        /// </summary>
        public ComputePostRequestBody()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Me.DataSecurityAndGovernance.ProtectionScopes.Compute.ComputePostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Microsoft.Graph.Beta.Me.DataSecurityAndGovernance.ProtectionScopes.Compute.ComputePostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Me.DataSecurityAndGovernance.ProtectionScopes.Compute.ComputePostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "activities", n => { Activities = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.UserActivityTypes>(); } },
                { "deviceMetadata", n => { DeviceMetadata = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.DeviceMetadata>(global::Microsoft.Graph.Beta.Models.DeviceMetadata.CreateFromDiscriminatorValue); } },
                { "integratedAppMetadata", n => { IntegratedAppMetadata = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.IntegratedApplicationMetadata>(global::Microsoft.Graph.Beta.Models.IntegratedApplicationMetadata.CreateFromDiscriminatorValue); } },
                { "locations", n => { Locations = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.PolicyLocation>(global::Microsoft.Graph.Beta.Models.PolicyLocation.CreateFromDiscriminatorValue)?.AsList(); } },
                { "pivotOn", n => { PivotOn = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.PolicyPivotProperty>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.UserActivityTypes>("activities", Activities);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.DeviceMetadata>("deviceMetadata", DeviceMetadata);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.IntegratedApplicationMetadata>("integratedAppMetadata", IntegratedAppMetadata);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.PolicyLocation>("locations", Locations);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.PolicyPivotProperty>("pivotOn", PivotOn);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
