// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph.Ediscovery
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type LegalHoldRequestBuilder.
    /// </summary>
    public partial class LegalHoldRequestBuilder : Microsoft.Graph.EntityRequestBuilder, ILegalHoldRequestBuilder
    {

        /// <summary>
        /// Constructs a new LegalHoldRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="Microsoft.Graph.IBaseClient"/> for handling requests.</param>
        public LegalHoldRequestBuilder(
            string requestUrl,
            Microsoft.Graph.IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new ILegalHoldRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new ILegalHoldRequest Request(IEnumerable<Microsoft.Graph.Option> options)
        {
            return new LegalHoldRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for SiteSources.
        /// </summary>
        /// <returns>The <see cref="ILegalHoldSiteSourcesCollectionRequestBuilder"/>.</returns>
        public ILegalHoldSiteSourcesCollectionRequestBuilder SiteSources
        {
            get
            {
                return new LegalHoldSiteSourcesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("siteSources"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UnifiedGroupSources.
        /// </summary>
        /// <returns>The <see cref="ILegalHoldUnifiedGroupSourcesCollectionRequestBuilder"/>.</returns>
        public ILegalHoldUnifiedGroupSourcesCollectionRequestBuilder UnifiedGroupSources
        {
            get
            {
                return new LegalHoldUnifiedGroupSourcesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("unifiedGroupSources"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserSources.
        /// </summary>
        /// <returns>The <see cref="ILegalHoldUserSourcesCollectionRequestBuilder"/>.</returns>
        public ILegalHoldUserSourcesCollectionRequestBuilder UserSources
        {
            get
            {
                return new LegalHoldUserSourcesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userSources"), this.Client);
            }
        }
    
    }
}
