// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.Ediscovery
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Custodian.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class Custodian : DataSourceContainer
    {
    
		///<summary>
		/// The Custodian constructor
		///</summary>
        public Custodian()
        {
            this.ODataType = "microsoft.graph.ediscovery.custodian";
        }
	
        /// <summary>
        /// Gets or sets acknowledged date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "acknowledgedDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? AcknowledgedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets apply hold to sources.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "applyHoldToSources", Required = Newtonsoft.Json.Required.Default)]
        public bool? ApplyHoldToSources { get; set; }
    
        /// <summary>
        /// Gets or sets email.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "email", Required = Newtonsoft.Json.Required.Default)]
        public string Email { get; set; }
    
        /// <summary>
        /// Gets or sets site sources.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "siteSources", Required = Newtonsoft.Json.Required.Default)]
        public ICustodianSiteSourcesCollectionPage SiteSources { get; set; }
    
        /// <summary>
        /// Gets or sets unified group sources.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "unifiedGroupSources", Required = Newtonsoft.Json.Required.Default)]
        public ICustodianUnifiedGroupSourcesCollectionPage UnifiedGroupSources { get; set; }
    
        /// <summary>
        /// Gets or sets user sources.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "userSources", Required = Newtonsoft.Json.Required.Default)]
        public ICustodianUserSourcesCollectionPage UserSources { get; set; }
    
    }
}

