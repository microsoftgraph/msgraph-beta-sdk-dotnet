// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.Ediscovery
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Estimate Statistics Operation.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class EstimateStatisticsOperation : CaseOperation
    {
    
		///<summary>
		/// The EstimateStatisticsOperation constructor
		///</summary>
        public EstimateStatisticsOperation()
        {
            this.ODataType = "microsoft.graph.ediscovery.estimateStatisticsOperation";
        }
	
        /// <summary>
        /// Gets or sets indexed item count.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "indexedItemCount", Required = Newtonsoft.Json.Required.Default)]
        public Int64? IndexedItemCount { get; set; }
    
        /// <summary>
        /// Gets or sets indexed items size.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "indexedItemsSize", Required = Newtonsoft.Json.Required.Default)]
        public Int64? IndexedItemsSize { get; set; }
    
        /// <summary>
        /// Gets or sets mailbox count.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "mailboxCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MailboxCount { get; set; }
    
        /// <summary>
        /// Gets or sets site count.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "siteCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? SiteCount { get; set; }
    
        /// <summary>
        /// Gets or sets unindexed item count.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "unindexedItemCount", Required = Newtonsoft.Json.Required.Default)]
        public Int64? UnindexedItemCount { get; set; }
    
        /// <summary>
        /// Gets or sets unindexed items size.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "unindexedItemsSize", Required = Newtonsoft.Json.Required.Default)]
        public Int64? UnindexedItemsSize { get; set; }
    
        /// <summary>
        /// Gets or sets source collection.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "sourceCollection", Required = Newtonsoft.Json.Required.Default)]
        public SourceCollection SourceCollection { get; set; }
    
    }
}

