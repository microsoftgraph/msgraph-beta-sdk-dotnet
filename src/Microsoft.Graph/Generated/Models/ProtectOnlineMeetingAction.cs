// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProtectOnlineMeetingAction : global::Microsoft.Graph.Beta.Models.LabelActionBase, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The allowedForwarders property</summary>
        public global::Microsoft.Graph.Beta.Models.OnlineMeetingForwarders? AllowedForwarders
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.OnlineMeetingForwarders?>("allowedForwarders"); }
            set { BackingStore?.Set("allowedForwarders", value); }
        }
        /// <summary>The allowedPresenters property</summary>
        public global::Microsoft.Graph.Beta.Models.OnlineMeetingPresenters? AllowedPresenters
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.OnlineMeetingPresenters?>("allowedPresenters"); }
            set { BackingStore?.Set("allowedPresenters", value); }
        }
        /// <summary>The isCopyToClipboardEnabled property</summary>
        public bool? IsCopyToClipboardEnabled
        {
            get { return BackingStore?.Get<bool?>("isCopyToClipboardEnabled"); }
            set { BackingStore?.Set("isCopyToClipboardEnabled", value); }
        }
        /// <summary>The isLobbyEnabled property</summary>
        public bool? IsLobbyEnabled
        {
            get { return BackingStore?.Get<bool?>("isLobbyEnabled"); }
            set { BackingStore?.Set("isLobbyEnabled", value); }
        }
        /// <summary>The lobbyBypassSettings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.LobbyBypassSettings? LobbyBypassSettings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LobbyBypassSettings?>("lobbyBypassSettings"); }
            set { BackingStore?.Set("lobbyBypassSettings", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.LobbyBypassSettings LobbyBypassSettings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LobbyBypassSettings>("lobbyBypassSettings"); }
            set { BackingStore?.Set("lobbyBypassSettings", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.ProtectOnlineMeetingAction"/> and sets the default values.
        /// </summary>
        public ProtectOnlineMeetingAction() : base()
        {
            OdataType = "#microsoft.graph.protectOnlineMeetingAction";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.ProtectOnlineMeetingAction"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.ProtectOnlineMeetingAction CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.ProtectOnlineMeetingAction();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "allowedForwarders", n => { AllowedForwarders = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.OnlineMeetingForwarders>(); } },
                { "allowedPresenters", n => { AllowedPresenters = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.OnlineMeetingPresenters>(); } },
                { "isCopyToClipboardEnabled", n => { IsCopyToClipboardEnabled = n.GetBoolValue(); } },
                { "isLobbyEnabled", n => { IsLobbyEnabled = n.GetBoolValue(); } },
                { "lobbyBypassSettings", n => { LobbyBypassSettings = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.LobbyBypassSettings>(global::Microsoft.Graph.Beta.Models.LobbyBypassSettings.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.OnlineMeetingForwarders>("allowedForwarders", AllowedForwarders);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.OnlineMeetingPresenters>("allowedPresenters", AllowedPresenters);
            writer.WriteBoolValue("isCopyToClipboardEnabled", IsCopyToClipboardEnabled);
            writer.WriteBoolValue("isLobbyEnabled", IsLobbyEnabled);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.LobbyBypassSettings>("lobbyBypassSettings", LobbyBypassSettings);
        }
    }
}
#pragma warning restore CS0618
