// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    /// <summary>
    /// A Viva Engage conversation message.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class EngagementConversationMessage : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    {
        /// <summary>The body property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.ItemBody? Body
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ItemBody?>("body"); }
            set { BackingStore?.Set("body", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.ItemBody Body
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ItemBody>("body"); }
            set { BackingStore?.Set("body", value); }
        }
#endif
        /// <summary>The conversation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.EngagementConversation? Conversation
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EngagementConversation?>("conversation"); }
            set { BackingStore?.Set("conversation", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.EngagementConversation Conversation
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EngagementConversation>("conversation"); }
            set { BackingStore?.Set("conversation", value); }
        }
#endif
        /// <summary>The date and time when the message was created. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? CreatedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("createdDateTime"); }
            set { BackingStore?.Set("createdDateTime", value); }
        }
        /// <summary>Indicates that the resource is in migration state and is currently being used for migration purposes.</summary>
        public global::Microsoft.Graph.Beta.Models.EngagementCreationMode? CreationMode
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EngagementCreationMode?>("creationMode"); }
            set { BackingStore?.Set("creationMode", value); }
        }
        /// <summary>Identity of the sender of the message.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.EngagementIdentitySet? From
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EngagementIdentitySet?>("from"); }
            set { BackingStore?.Set("from", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.EngagementIdentitySet From
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EngagementIdentitySet>("from"); }
            set { BackingStore?.Set("from", value); }
        }
#endif
        /// <summary>The date and time when message was last modified. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? LastModifiedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastModifiedDateTime"); }
            set { BackingStore?.Set("lastModifiedDateTime", value); }
        }
        /// <summary>A collection of reactions (such as like and smile) that users have applied to this message.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.EngagementConversationMessageReaction>? Reactions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.EngagementConversationMessageReaction>?>("reactions"); }
            set { BackingStore?.Set("reactions", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.EngagementConversationMessageReaction> Reactions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.EngagementConversationMessageReaction>>("reactions"); }
            set { BackingStore?.Set("reactions", value); }
        }
#endif
        /// <summary>A collection of messages that are replies to this message and form a threaded discussion.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.EngagementConversationMessage>? Replies
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.EngagementConversationMessage>?>("replies"); }
            set { BackingStore?.Set("replies", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.EngagementConversationMessage> Replies
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.EngagementConversationMessage>>("replies"); }
            set { BackingStore?.Set("replies", value); }
        }
#endif
        /// <summary>The parent message to which this message is a reply, if it is part of a reply chain.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.EngagementConversationMessage? ReplyTo
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EngagementConversationMessage?>("replyTo"); }
            set { BackingStore?.Set("replyTo", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.EngagementConversationMessage ReplyTo
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EngagementConversationMessage>("replyTo"); }
            set { BackingStore?.Set("replyTo", value); }
        }
#endif
        /// <summary>The ID of the parent message to which this message is a reply, if applicable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReplyToId
        {
            get { return BackingStore?.Get<string?>("replyToId"); }
            set { BackingStore?.Set("replyToId", value); }
        }
#nullable restore
#else
        public string ReplyToId
        {
            get { return BackingStore?.Get<string>("replyToId"); }
            set { BackingStore?.Set("replyToId", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.EngagementConversationMessage"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.EngagementConversationMessage CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.engagementConversationDiscussionMessage" => new global::Microsoft.Graph.Beta.Models.EngagementConversationDiscussionMessage(),
                "#microsoft.graph.engagementConversationQuestionMessage" => new global::Microsoft.Graph.Beta.Models.EngagementConversationQuestionMessage(),
                "#microsoft.graph.engagementConversationSystemMessage" => new global::Microsoft.Graph.Beta.Models.EngagementConversationSystemMessage(),
                _ => new global::Microsoft.Graph.Beta.Models.EngagementConversationMessage(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "body", n => { Body = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.ItemBody>(global::Microsoft.Graph.Beta.Models.ItemBody.CreateFromDiscriminatorValue); } },
                { "conversation", n => { Conversation = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.EngagementConversation>(global::Microsoft.Graph.Beta.Models.EngagementConversation.CreateFromDiscriminatorValue); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "creationMode", n => { CreationMode = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.EngagementCreationMode>(); } },
                { "from", n => { From = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.EngagementIdentitySet>(global::Microsoft.Graph.Beta.Models.EngagementIdentitySet.CreateFromDiscriminatorValue); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "reactions", n => { Reactions = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.EngagementConversationMessageReaction>(global::Microsoft.Graph.Beta.Models.EngagementConversationMessageReaction.CreateFromDiscriminatorValue)?.AsList(); } },
                { "replies", n => { Replies = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.EngagementConversationMessage>(global::Microsoft.Graph.Beta.Models.EngagementConversationMessage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "replyTo", n => { ReplyTo = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.EngagementConversationMessage>(global::Microsoft.Graph.Beta.Models.EngagementConversationMessage.CreateFromDiscriminatorValue); } },
                { "replyToId", n => { ReplyToId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.ItemBody>("body", Body);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.EngagementConversation>("conversation", Conversation);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.EngagementCreationMode>("creationMode", CreationMode);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.EngagementIdentitySet>("from", From);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.EngagementConversationMessageReaction>("reactions", Reactions);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.EngagementConversationMessage>("replies", Replies);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.EngagementConversationMessage>("replyTo", ReplyTo);
            writer.WriteStringValue("replyToId", ReplyToId);
        }
    }
}
#pragma warning restore CS0618
