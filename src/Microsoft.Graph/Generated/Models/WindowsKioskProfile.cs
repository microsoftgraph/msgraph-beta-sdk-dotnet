// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models
{
    #pragma warning disable CS1591
    public class WindowsKioskProfile : IAdditionalDataHolder, IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>The app base class used to identify the application info for the kiosk configuration</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.WindowsKioskAppConfiguration? AppConfiguration
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.WindowsKioskAppConfiguration?>("appConfiguration"); }
            set { BackingStore?.Set("appConfiguration", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.WindowsKioskAppConfiguration AppConfiguration
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.WindowsKioskAppConfiguration>("appConfiguration"); }
            set { BackingStore?.Set("appConfiguration", value); }
        }
#endif
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType
        {
            get { return BackingStore?.Get<string?>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#nullable restore
#else
        public string OdataType
        {
            get { return BackingStore?.Get<string>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#endif
        /// <summary>Key of the entity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProfileId
        {
            get { return BackingStore?.Get<string?>("profileId"); }
            set { BackingStore?.Set("profileId", value); }
        }
#nullable restore
#else
        public string ProfileId
        {
            get { return BackingStore?.Get<string>("profileId"); }
            set { BackingStore?.Set("profileId", value); }
        }
#endif
        /// <summary>This is a friendly nameÂ used to identify a group of applications, the layout of these apps on the start menu and the users to whom this kiosk configuration is assigned.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProfileName
        {
            get { return BackingStore?.Get<string?>("profileName"); }
            set { BackingStore?.Set("profileName", value); }
        }
#nullable restore
#else
        public string ProfileName
        {
            get { return BackingStore?.Get<string>("profileName"); }
            set { BackingStore?.Set("profileName", value); }
        }
#endif
        /// <summary>The user accounts that will be locked to this kiosk configuration. This collection can contain a maximum of 100 elements.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.WindowsKioskUser>? UserAccountsConfiguration
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WindowsKioskUser>?>("userAccountsConfiguration"); }
            set { BackingStore?.Set("userAccountsConfiguration", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.WindowsKioskUser> UserAccountsConfiguration
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WindowsKioskUser>>("userAccountsConfiguration"); }
            set { BackingStore?.Set("userAccountsConfiguration", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="Microsoft.Graph.Beta.Models.WindowsKioskProfile"/> and sets the default values.
        /// </summary>
        public WindowsKioskProfile()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.WindowsKioskProfile"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static Microsoft.Graph.Beta.Models.WindowsKioskProfile CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Microsoft.Graph.Beta.Models.WindowsKioskProfile();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "appConfiguration", n => { AppConfiguration = n.GetObjectValue<Microsoft.Graph.Beta.Models.WindowsKioskAppConfiguration>(Microsoft.Graph.Beta.Models.WindowsKioskAppConfiguration.CreateFromDiscriminatorValue); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "profileId", n => { ProfileId = n.GetStringValue(); } },
                { "profileName", n => { ProfileName = n.GetStringValue(); } },
                { "userAccountsConfiguration", n => { UserAccountsConfiguration = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WindowsKioskUser>(Microsoft.Graph.Beta.Models.WindowsKioskUser.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.WindowsKioskAppConfiguration>("appConfiguration", AppConfiguration);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteStringValue("profileId", ProfileId);
            writer.WriteStringValue("profileName", ProfileName);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WindowsKioskUser>("userAccountsConfiguration", UserAccountsConfiguration);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
