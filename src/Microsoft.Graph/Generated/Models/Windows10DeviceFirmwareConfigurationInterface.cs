// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    /// <summary>
    /// Graph properties for Device Firmware Configuration Interface 
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class Windows10DeviceFirmwareConfigurationInterface : global::Microsoft.Graph.Beta.Models.DeviceConfiguration, IParsable
    {
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? Bluetooth
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("bluetooth"); }
            set { BackingStore?.Set("bluetooth", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? BootFromBuiltInNetworkAdapters
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("bootFromBuiltInNetworkAdapters"); }
            set { BackingStore?.Set("bootFromBuiltInNetworkAdapters", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? BootFromExternalMedia
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("bootFromExternalMedia"); }
            set { BackingStore?.Set("bootFromExternalMedia", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? Cameras
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("cameras"); }
            set { BackingStore?.Set("cameras", value); }
        }
        /// <summary>Defines the permission level granted to users to enable them change Uefi settings</summary>
        public global::Microsoft.Graph.Beta.Models.ChangeUefiSettingsPermission? ChangeUefiSettingsPermission
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ChangeUefiSettingsPermission?>("changeUefiSettingsPermission"); }
            set { BackingStore?.Set("changeUefiSettingsPermission", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? FrontCamera
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("frontCamera"); }
            set { BackingStore?.Set("frontCamera", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? InfraredCamera
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("infraredCamera"); }
            set { BackingStore?.Set("infraredCamera", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? Microphone
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("microphone"); }
            set { BackingStore?.Set("microphone", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? MicrophonesAndSpeakers
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("microphonesAndSpeakers"); }
            set { BackingStore?.Set("microphonesAndSpeakers", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? NearFieldCommunication
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("nearFieldCommunication"); }
            set { BackingStore?.Set("nearFieldCommunication", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? Radios
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("radios"); }
            set { BackingStore?.Set("radios", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? RearCamera
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("rearCamera"); }
            set { BackingStore?.Set("rearCamera", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? SdCard
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("sdCard"); }
            set { BackingStore?.Set("sdCard", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? SimultaneousMultiThreading
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("simultaneousMultiThreading"); }
            set { BackingStore?.Set("simultaneousMultiThreading", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? UsbTypeAPort
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("usbTypeAPort"); }
            set { BackingStore?.Set("usbTypeAPort", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? VirtualizationOfCpuAndIO
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("virtualizationOfCpuAndIO"); }
            set { BackingStore?.Set("virtualizationOfCpuAndIO", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? WakeOnLAN
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("wakeOnLAN"); }
            set { BackingStore?.Set("wakeOnLAN", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? WakeOnPower
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("wakeOnPower"); }
            set { BackingStore?.Set("wakeOnPower", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? WiFi
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("wiFi"); }
            set { BackingStore?.Set("wiFi", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? WindowsPlatformBinaryTable
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("windowsPlatformBinaryTable"); }
            set { BackingStore?.Set("windowsPlatformBinaryTable", value); }
        }
        /// <summary>Possible values of a property</summary>
        public global::Microsoft.Graph.Beta.Models.Enablement? WirelessWideAreaNetwork
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Enablement?>("wirelessWideAreaNetwork"); }
            set { BackingStore?.Set("wirelessWideAreaNetwork", value); }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.Windows10DeviceFirmwareConfigurationInterface"/> and sets the default values.
        /// </summary>
        public Windows10DeviceFirmwareConfigurationInterface() : base()
        {
            OdataType = "#microsoft.graph.windows10DeviceFirmwareConfigurationInterface";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Windows10DeviceFirmwareConfigurationInterface"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.Windows10DeviceFirmwareConfigurationInterface CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.Windows10DeviceFirmwareConfigurationInterface();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "bluetooth", n => { Bluetooth = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "bootFromBuiltInNetworkAdapters", n => { BootFromBuiltInNetworkAdapters = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "bootFromExternalMedia", n => { BootFromExternalMedia = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "cameras", n => { Cameras = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "changeUefiSettingsPermission", n => { ChangeUefiSettingsPermission = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.ChangeUefiSettingsPermission>(); } },
                { "frontCamera", n => { FrontCamera = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "infraredCamera", n => { InfraredCamera = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "microphone", n => { Microphone = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "microphonesAndSpeakers", n => { MicrophonesAndSpeakers = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "nearFieldCommunication", n => { NearFieldCommunication = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "radios", n => { Radios = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "rearCamera", n => { RearCamera = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "sdCard", n => { SdCard = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "simultaneousMultiThreading", n => { SimultaneousMultiThreading = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "usbTypeAPort", n => { UsbTypeAPort = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "virtualizationOfCpuAndIO", n => { VirtualizationOfCpuAndIO = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "wakeOnLAN", n => { WakeOnLAN = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "wakeOnPower", n => { WakeOnPower = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "wiFi", n => { WiFi = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "windowsPlatformBinaryTable", n => { WindowsPlatformBinaryTable = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
                { "wirelessWideAreaNetwork", n => { WirelessWideAreaNetwork = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("bluetooth", Bluetooth);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("bootFromBuiltInNetworkAdapters", BootFromBuiltInNetworkAdapters);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("bootFromExternalMedia", BootFromExternalMedia);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("cameras", Cameras);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.ChangeUefiSettingsPermission>("changeUefiSettingsPermission", ChangeUefiSettingsPermission);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("frontCamera", FrontCamera);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("infraredCamera", InfraredCamera);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("microphone", Microphone);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("microphonesAndSpeakers", MicrophonesAndSpeakers);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("nearFieldCommunication", NearFieldCommunication);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("radios", Radios);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("rearCamera", RearCamera);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("sdCard", SdCard);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("simultaneousMultiThreading", SimultaneousMultiThreading);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("usbTypeAPort", UsbTypeAPort);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("virtualizationOfCpuAndIO", VirtualizationOfCpuAndIO);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("wakeOnLAN", WakeOnLAN);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("wakeOnPower", WakeOnPower);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("wiFi", WiFi);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("windowsPlatformBinaryTable", WindowsPlatformBinaryTable);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Enablement>("wirelessWideAreaNetwork", WirelessWideAreaNetwork);
        }
    }
}
#pragma warning restore CS0618
