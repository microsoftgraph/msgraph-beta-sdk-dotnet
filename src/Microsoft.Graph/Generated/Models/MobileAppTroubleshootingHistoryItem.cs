// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    /// <summary>
    /// History Item contained in the Mobile App Troubleshooting Event.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class MobileAppTroubleshootingHistoryItem : IAdditionalDataHolder, IBackedModel, IParsable
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>Time when the history item occurred.</summary>
        public DateTimeOffset? OccurrenceDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("occurrenceDateTime"); }
            set { BackingStore?.Set("occurrenceDateTime", value); }
        }
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType
        {
            get { return BackingStore?.Get<string?>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#nullable restore
#else
        public string OdataType
        {
            get { return BackingStore?.Get<string>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#endif
        /// <summary>Object containing detailed information about the error and its remediation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.DeviceManagementTroubleshootingErrorDetails? TroubleshootingErrorDetails
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.DeviceManagementTroubleshootingErrorDetails?>("troubleshootingErrorDetails"); }
            set { BackingStore?.Set("troubleshootingErrorDetails", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.DeviceManagementTroubleshootingErrorDetails TroubleshootingErrorDetails
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.DeviceManagementTroubleshootingErrorDetails>("troubleshootingErrorDetails"); }
            set { BackingStore?.Set("troubleshootingErrorDetails", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.MobileAppTroubleshootingHistoryItem"/> and sets the default values.
        /// </summary>
        public MobileAppTroubleshootingHistoryItem()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.MobileAppTroubleshootingHistoryItem"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Microsoft.Graph.Beta.Models.MobileAppTroubleshootingHistoryItem CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.mobileAppTroubleshootingAppPolicyCreationHistory" => new global::Microsoft.Graph.Beta.Models.MobileAppTroubleshootingAppPolicyCreationHistory(),
                "#microsoft.graph.mobileAppTroubleshootingAppStateHistory" => new global::Microsoft.Graph.Beta.Models.MobileAppTroubleshootingAppStateHistory(),
                "#microsoft.graph.mobileAppTroubleshootingAppTargetHistory" => new global::Microsoft.Graph.Beta.Models.MobileAppTroubleshootingAppTargetHistory(),
                "#microsoft.graph.mobileAppTroubleshootingAppUpdateHistory" => new global::Microsoft.Graph.Beta.Models.MobileAppTroubleshootingAppUpdateHistory(),
                "#microsoft.graph.mobileAppTroubleshootingDeviceCheckinHistory" => new global::Microsoft.Graph.Beta.Models.MobileAppTroubleshootingDeviceCheckinHistory(),
                _ => new global::Microsoft.Graph.Beta.Models.MobileAppTroubleshootingHistoryItem(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "occurrenceDateTime", n => { OccurrenceDateTime = n.GetDateTimeOffsetValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "troubleshootingErrorDetails", n => { TroubleshootingErrorDetails = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.DeviceManagementTroubleshootingErrorDetails>(global::Microsoft.Graph.Beta.Models.DeviceManagementTroubleshootingErrorDetails.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateTimeOffsetValue("occurrenceDateTime", OccurrenceDateTime);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.DeviceManagementTroubleshootingErrorDetails>("troubleshootingErrorDetails", TroubleshootingErrorDetails);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
