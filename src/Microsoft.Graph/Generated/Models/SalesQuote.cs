// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class SalesQuote : IAdditionalDataHolder, IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The acceptedDate property</summary>
        public Date? AcceptedDate
        {
            get { return BackingStore?.Get<Date?>("acceptedDate"); }
            set { BackingStore?.Set("acceptedDate", value); }
        }
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>The billingPostalAddress property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.PostalAddressType? BillingPostalAddress
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.PostalAddressType?>("billingPostalAddress"); }
            set { BackingStore?.Set("billingPostalAddress", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.PostalAddressType BillingPostalAddress
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.PostalAddressType>("billingPostalAddress"); }
            set { BackingStore?.Set("billingPostalAddress", value); }
        }
#endif
        /// <summary>The billToCustomerId property</summary>
        public Guid? BillToCustomerId
        {
            get { return BackingStore?.Get<Guid?>("billToCustomerId"); }
            set { BackingStore?.Set("billToCustomerId", value); }
        }
        /// <summary>The billToCustomerNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BillToCustomerNumber
        {
            get { return BackingStore?.Get<string?>("billToCustomerNumber"); }
            set { BackingStore?.Set("billToCustomerNumber", value); }
        }
#nullable restore
#else
        public string BillToCustomerNumber
        {
            get { return BackingStore?.Get<string>("billToCustomerNumber"); }
            set { BackingStore?.Set("billToCustomerNumber", value); }
        }
#endif
        /// <summary>The billToName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BillToName
        {
            get { return BackingStore?.Get<string?>("billToName"); }
            set { BackingStore?.Set("billToName", value); }
        }
#nullable restore
#else
        public string BillToName
        {
            get { return BackingStore?.Get<string>("billToName"); }
            set { BackingStore?.Set("billToName", value); }
        }
#endif
        /// <summary>The currency property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Currency? Currency
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Currency?>("currency"); }
            set { BackingStore?.Set("currency", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Currency Currency
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Currency>("currency"); }
            set { BackingStore?.Set("currency", value); }
        }
#endif
        /// <summary>The currencyCode property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CurrencyCode
        {
            get { return BackingStore?.Get<string?>("currencyCode"); }
            set { BackingStore?.Set("currencyCode", value); }
        }
#nullable restore
#else
        public string CurrencyCode
        {
            get { return BackingStore?.Get<string>("currencyCode"); }
            set { BackingStore?.Set("currencyCode", value); }
        }
#endif
        /// <summary>The currencyId property</summary>
        public Guid? CurrencyId
        {
            get { return BackingStore?.Get<Guid?>("currencyId"); }
            set { BackingStore?.Set("currencyId", value); }
        }
        /// <summary>The customer property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Customer? Customer
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Customer?>("customer"); }
            set { BackingStore?.Set("customer", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Customer Customer
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Customer>("customer"); }
            set { BackingStore?.Set("customer", value); }
        }
#endif
        /// <summary>The customerId property</summary>
        public Guid? CustomerId
        {
            get { return BackingStore?.Get<Guid?>("customerId"); }
            set { BackingStore?.Set("customerId", value); }
        }
        /// <summary>The customerName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerName
        {
            get { return BackingStore?.Get<string?>("customerName"); }
            set { BackingStore?.Set("customerName", value); }
        }
#nullable restore
#else
        public string CustomerName
        {
            get { return BackingStore?.Get<string>("customerName"); }
            set { BackingStore?.Set("customerName", value); }
        }
#endif
        /// <summary>The customerNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CustomerNumber
        {
            get { return BackingStore?.Get<string?>("customerNumber"); }
            set { BackingStore?.Set("customerNumber", value); }
        }
#nullable restore
#else
        public string CustomerNumber
        {
            get { return BackingStore?.Get<string>("customerNumber"); }
            set { BackingStore?.Set("customerNumber", value); }
        }
#endif
        /// <summary>The discountAmount property</summary>
        public decimal? DiscountAmount
        {
            get { return BackingStore?.Get<decimal?>("discountAmount"); }
            set { BackingStore?.Set("discountAmount", value); }
        }
        /// <summary>The documentDate property</summary>
        public Date? DocumentDate
        {
            get { return BackingStore?.Get<Date?>("documentDate"); }
            set { BackingStore?.Set("documentDate", value); }
        }
        /// <summary>The dueDate property</summary>
        public Date? DueDate
        {
            get { return BackingStore?.Get<Date?>("dueDate"); }
            set { BackingStore?.Set("dueDate", value); }
        }
        /// <summary>The email property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email
        {
            get { return BackingStore?.Get<string?>("email"); }
            set { BackingStore?.Set("email", value); }
        }
#nullable restore
#else
        public string Email
        {
            get { return BackingStore?.Get<string>("email"); }
            set { BackingStore?.Set("email", value); }
        }
#endif
        /// <summary>The externalDocumentNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalDocumentNumber
        {
            get { return BackingStore?.Get<string?>("externalDocumentNumber"); }
            set { BackingStore?.Set("externalDocumentNumber", value); }
        }
#nullable restore
#else
        public string ExternalDocumentNumber
        {
            get { return BackingStore?.Get<string>("externalDocumentNumber"); }
            set { BackingStore?.Set("externalDocumentNumber", value); }
        }
#endif
        /// <summary>The id property</summary>
        public Guid? Id
        {
            get { return BackingStore?.Get<Guid?>("id"); }
            set { BackingStore?.Set("id", value); }
        }
        /// <summary>The lastModifiedDateTime property</summary>
        public DateTimeOffset? LastModifiedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastModifiedDateTime"); }
            set { BackingStore?.Set("lastModifiedDateTime", value); }
        }
        /// <summary>The number property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Number
        {
            get { return BackingStore?.Get<string?>("number"); }
            set { BackingStore?.Set("number", value); }
        }
#nullable restore
#else
        public string Number
        {
            get { return BackingStore?.Get<string>("number"); }
            set { BackingStore?.Set("number", value); }
        }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType
        {
            get { return BackingStore?.Get<string?>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#nullable restore
#else
        public string OdataType
        {
            get { return BackingStore?.Get<string>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#endif
        /// <summary>The paymentTerm property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.PaymentTerm? PaymentTerm
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.PaymentTerm?>("paymentTerm"); }
            set { BackingStore?.Set("paymentTerm", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.PaymentTerm PaymentTerm
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.PaymentTerm>("paymentTerm"); }
            set { BackingStore?.Set("paymentTerm", value); }
        }
#endif
        /// <summary>The paymentTermsId property</summary>
        public Guid? PaymentTermsId
        {
            get { return BackingStore?.Get<Guid?>("paymentTermsId"); }
            set { BackingStore?.Set("paymentTermsId", value); }
        }
        /// <summary>The phoneNumber property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PhoneNumber
        {
            get { return BackingStore?.Get<string?>("phoneNumber"); }
            set { BackingStore?.Set("phoneNumber", value); }
        }
#nullable restore
#else
        public string PhoneNumber
        {
            get { return BackingStore?.Get<string>("phoneNumber"); }
            set { BackingStore?.Set("phoneNumber", value); }
        }
#endif
        /// <summary>The salesperson property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Salesperson
        {
            get { return BackingStore?.Get<string?>("salesperson"); }
            set { BackingStore?.Set("salesperson", value); }
        }
#nullable restore
#else
        public string Salesperson
        {
            get { return BackingStore?.Get<string>("salesperson"); }
            set { BackingStore?.Set("salesperson", value); }
        }
#endif
        /// <summary>The salesQuoteLines property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.SalesQuoteLine>? SalesQuoteLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesQuoteLine>?>("salesQuoteLines"); }
            set { BackingStore?.Set("salesQuoteLines", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.SalesQuoteLine> SalesQuoteLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesQuoteLine>>("salesQuoteLines"); }
            set { BackingStore?.Set("salesQuoteLines", value); }
        }
#endif
        /// <summary>The sellingPostalAddress property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.PostalAddressType? SellingPostalAddress
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.PostalAddressType?>("sellingPostalAddress"); }
            set { BackingStore?.Set("sellingPostalAddress", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.PostalAddressType SellingPostalAddress
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.PostalAddressType>("sellingPostalAddress"); }
            set { BackingStore?.Set("sellingPostalAddress", value); }
        }
#endif
        /// <summary>The sentDate property</summary>
        public DateTimeOffset? SentDate
        {
            get { return BackingStore?.Get<DateTimeOffset?>("sentDate"); }
            set { BackingStore?.Set("sentDate", value); }
        }
        /// <summary>The shipmentMethod property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.ShipmentMethod? ShipmentMethod
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ShipmentMethod?>("shipmentMethod"); }
            set { BackingStore?.Set("shipmentMethod", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.ShipmentMethod ShipmentMethod
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ShipmentMethod>("shipmentMethod"); }
            set { BackingStore?.Set("shipmentMethod", value); }
        }
#endif
        /// <summary>The shipmentMethodId property</summary>
        public Guid? ShipmentMethodId
        {
            get { return BackingStore?.Get<Guid?>("shipmentMethodId"); }
            set { BackingStore?.Set("shipmentMethodId", value); }
        }
        /// <summary>The shippingPostalAddress property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.PostalAddressType? ShippingPostalAddress
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.PostalAddressType?>("shippingPostalAddress"); }
            set { BackingStore?.Set("shippingPostalAddress", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.PostalAddressType ShippingPostalAddress
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.PostalAddressType>("shippingPostalAddress"); }
            set { BackingStore?.Set("shippingPostalAddress", value); }
        }
#endif
        /// <summary>The shipToContact property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ShipToContact
        {
            get { return BackingStore?.Get<string?>("shipToContact"); }
            set { BackingStore?.Set("shipToContact", value); }
        }
#nullable restore
#else
        public string ShipToContact
        {
            get { return BackingStore?.Get<string>("shipToContact"); }
            set { BackingStore?.Set("shipToContact", value); }
        }
#endif
        /// <summary>The shipToName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ShipToName
        {
            get { return BackingStore?.Get<string?>("shipToName"); }
            set { BackingStore?.Set("shipToName", value); }
        }
#nullable restore
#else
        public string ShipToName
        {
            get { return BackingStore?.Get<string>("shipToName"); }
            set { BackingStore?.Set("shipToName", value); }
        }
#endif
        /// <summary>The status property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status
        {
            get { return BackingStore?.Get<string?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
#nullable restore
#else
        public string Status
        {
            get { return BackingStore?.Get<string>("status"); }
            set { BackingStore?.Set("status", value); }
        }
#endif
        /// <summary>The totalAmountExcludingTax property</summary>
        public decimal? TotalAmountExcludingTax
        {
            get { return BackingStore?.Get<decimal?>("totalAmountExcludingTax"); }
            set { BackingStore?.Set("totalAmountExcludingTax", value); }
        }
        /// <summary>The totalAmountIncludingTax property</summary>
        public decimal? TotalAmountIncludingTax
        {
            get { return BackingStore?.Get<decimal?>("totalAmountIncludingTax"); }
            set { BackingStore?.Set("totalAmountIncludingTax", value); }
        }
        /// <summary>The totalTaxAmount property</summary>
        public decimal? TotalTaxAmount
        {
            get { return BackingStore?.Get<decimal?>("totalTaxAmount"); }
            set { BackingStore?.Set("totalTaxAmount", value); }
        }
        /// <summary>The validUntilDate property</summary>
        public Date? ValidUntilDate
        {
            get { return BackingStore?.Get<Date?>("validUntilDate"); }
            set { BackingStore?.Set("validUntilDate", value); }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.SalesQuote"/> and sets the default values.
        /// </summary>
        public SalesQuote()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.SalesQuote"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Microsoft.Graph.Beta.Models.SalesQuote CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.SalesQuote();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "acceptedDate", n => { AcceptedDate = n.GetDateValue(); } },
                { "billToCustomerId", n => { BillToCustomerId = n.GetGuidValue(); } },
                { "billToCustomerNumber", n => { BillToCustomerNumber = n.GetStringValue(); } },
                { "billToName", n => { BillToName = n.GetStringValue(); } },
                { "billingPostalAddress", n => { BillingPostalAddress = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.PostalAddressType>(global::Microsoft.Graph.Beta.Models.PostalAddressType.CreateFromDiscriminatorValue); } },
                { "currency", n => { Currency = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Currency>(global::Microsoft.Graph.Beta.Models.Currency.CreateFromDiscriminatorValue); } },
                { "currencyCode", n => { CurrencyCode = n.GetStringValue(); } },
                { "currencyId", n => { CurrencyId = n.GetGuidValue(); } },
                { "customer", n => { Customer = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Customer>(global::Microsoft.Graph.Beta.Models.Customer.CreateFromDiscriminatorValue); } },
                { "customerId", n => { CustomerId = n.GetGuidValue(); } },
                { "customerName", n => { CustomerName = n.GetStringValue(); } },
                { "customerNumber", n => { CustomerNumber = n.GetStringValue(); } },
                { "discountAmount", n => { DiscountAmount = n.GetDecimalValue(); } },
                { "documentDate", n => { DocumentDate = n.GetDateValue(); } },
                { "dueDate", n => { DueDate = n.GetDateValue(); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "externalDocumentNumber", n => { ExternalDocumentNumber = n.GetStringValue(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "number", n => { Number = n.GetStringValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "paymentTerm", n => { PaymentTerm = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.PaymentTerm>(global::Microsoft.Graph.Beta.Models.PaymentTerm.CreateFromDiscriminatorValue); } },
                { "paymentTermsId", n => { PaymentTermsId = n.GetGuidValue(); } },
                { "phoneNumber", n => { PhoneNumber = n.GetStringValue(); } },
                { "salesQuoteLines", n => { SalesQuoteLines = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesQuoteLine>(global::Microsoft.Graph.Beta.Models.SalesQuoteLine.CreateFromDiscriminatorValue)?.AsList(); } },
                { "salesperson", n => { Salesperson = n.GetStringValue(); } },
                { "sellingPostalAddress", n => { SellingPostalAddress = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.PostalAddressType>(global::Microsoft.Graph.Beta.Models.PostalAddressType.CreateFromDiscriminatorValue); } },
                { "sentDate", n => { SentDate = n.GetDateTimeOffsetValue(); } },
                { "shipToContact", n => { ShipToContact = n.GetStringValue(); } },
                { "shipToName", n => { ShipToName = n.GetStringValue(); } },
                { "shipmentMethod", n => { ShipmentMethod = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.ShipmentMethod>(global::Microsoft.Graph.Beta.Models.ShipmentMethod.CreateFromDiscriminatorValue); } },
                { "shipmentMethodId", n => { ShipmentMethodId = n.GetGuidValue(); } },
                { "shippingPostalAddress", n => { ShippingPostalAddress = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.PostalAddressType>(global::Microsoft.Graph.Beta.Models.PostalAddressType.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetStringValue(); } },
                { "totalAmountExcludingTax", n => { TotalAmountExcludingTax = n.GetDecimalValue(); } },
                { "totalAmountIncludingTax", n => { TotalAmountIncludingTax = n.GetDecimalValue(); } },
                { "totalTaxAmount", n => { TotalTaxAmount = n.GetDecimalValue(); } },
                { "validUntilDate", n => { ValidUntilDate = n.GetDateValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteDateValue("acceptedDate", AcceptedDate);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.PostalAddressType>("billingPostalAddress", BillingPostalAddress);
            writer.WriteGuidValue("billToCustomerId", BillToCustomerId);
            writer.WriteStringValue("billToCustomerNumber", BillToCustomerNumber);
            writer.WriteStringValue("billToName", BillToName);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Currency>("currency", Currency);
            writer.WriteStringValue("currencyCode", CurrencyCode);
            writer.WriteGuidValue("currencyId", CurrencyId);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Customer>("customer", Customer);
            writer.WriteGuidValue("customerId", CustomerId);
            writer.WriteStringValue("customerName", CustomerName);
            writer.WriteStringValue("customerNumber", CustomerNumber);
            writer.WriteDecimalValue("discountAmount", DiscountAmount);
            writer.WriteDateValue("documentDate", DocumentDate);
            writer.WriteDateValue("dueDate", DueDate);
            writer.WriteStringValue("email", Email);
            writer.WriteStringValue("externalDocumentNumber", ExternalDocumentNumber);
            writer.WriteGuidValue("id", Id);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteStringValue("number", Number);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.PaymentTerm>("paymentTerm", PaymentTerm);
            writer.WriteGuidValue("paymentTermsId", PaymentTermsId);
            writer.WriteStringValue("phoneNumber", PhoneNumber);
            writer.WriteStringValue("salesperson", Salesperson);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesQuoteLine>("salesQuoteLines", SalesQuoteLines);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.PostalAddressType>("sellingPostalAddress", SellingPostalAddress);
            writer.WriteDateTimeOffsetValue("sentDate", SentDate);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.ShipmentMethod>("shipmentMethod", ShipmentMethod);
            writer.WriteGuidValue("shipmentMethodId", ShipmentMethodId);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.PostalAddressType>("shippingPostalAddress", ShippingPostalAddress);
            writer.WriteStringValue("shipToContact", ShipToContact);
            writer.WriteStringValue("shipToName", ShipToName);
            writer.WriteStringValue("status", Status);
            writer.WriteDecimalValue("totalAmountExcludingTax", TotalAmountExcludingTax);
            writer.WriteDecimalValue("totalAmountIncludingTax", TotalAmountIncludingTax);
            writer.WriteDecimalValue("totalTaxAmount", TotalTaxAmount);
            writer.WriteDateValue("validUntilDate", ValidUntilDate);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
