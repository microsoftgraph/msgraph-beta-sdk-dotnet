// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CloudPcCloudApp : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The actionFailedErrorCode property</summary>
        public global::Microsoft.Graph.Beta.Models.CloudPcCloudAppActionFailedErrorCode? ActionFailedErrorCode
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcCloudAppActionFailedErrorCode?>("actionFailedErrorCode"); }
            set { BackingStore?.Set("actionFailedErrorCode", value); }
        }
        /// <summary>The actionFailedErrorMessage property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ActionFailedErrorMessage
        {
            get { return BackingStore?.Get<string?>("actionFailedErrorMessage"); }
            set { BackingStore?.Set("actionFailedErrorMessage", value); }
        }
#nullable restore
#else
        public string ActionFailedErrorMessage
        {
            get { return BackingStore?.Get<string>("actionFailedErrorMessage"); }
            set { BackingStore?.Set("actionFailedErrorMessage", value); }
        }
#endif
        /// <summary>The addedDateTime property</summary>
        public DateTimeOffset? AddedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("addedDateTime"); }
            set { BackingStore?.Set("addedDateTime", value); }
        }
        /// <summary>The appDetail property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcCloudAppDetail? AppDetail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcCloudAppDetail?>("appDetail"); }
            set { BackingStore?.Set("appDetail", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcCloudAppDetail AppDetail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcCloudAppDetail>("appDetail"); }
            set { BackingStore?.Set("appDetail", value); }
        }
#endif
        /// <summary>The appStatus property</summary>
        public global::Microsoft.Graph.Beta.Models.CloudPcCloudAppStatus? AppStatus
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcCloudAppStatus?>("appStatus"); }
            set { BackingStore?.Set("appStatus", value); }
        }
        /// <summary>The availableToUser property</summary>
        public bool? AvailableToUser
        {
            get { return BackingStore?.Get<bool?>("availableToUser"); }
            set { BackingStore?.Set("availableToUser", value); }
        }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description
        {
            get { return BackingStore?.Get<string?>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#nullable restore
#else
        public string Description
        {
            get { return BackingStore?.Get<string>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#endif
        /// <summary>The discoveredAppName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DiscoveredAppName
        {
            get { return BackingStore?.Get<string?>("discoveredAppName"); }
            set { BackingStore?.Set("discoveredAppName", value); }
        }
#nullable restore
#else
        public string DiscoveredAppName
        {
            get { return BackingStore?.Get<string>("discoveredAppName"); }
            set { BackingStore?.Set("discoveredAppName", value); }
        }
#endif
        /// <summary>The displayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>The lastPublishedDateTime property</summary>
        public DateTimeOffset? LastPublishedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastPublishedDateTime"); }
            set { BackingStore?.Set("lastPublishedDateTime", value); }
        }
        /// <summary>The provisioningPolicyId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProvisioningPolicyId
        {
            get { return BackingStore?.Get<string?>("provisioningPolicyId"); }
            set { BackingStore?.Set("provisioningPolicyId", value); }
        }
#nullable restore
#else
        public string ProvisioningPolicyId
        {
            get { return BackingStore?.Get<string>("provisioningPolicyId"); }
            set { BackingStore?.Set("provisioningPolicyId", value); }
        }
#endif
        /// <summary>The scopeIds property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ScopeIds
        {
            get { return BackingStore?.Get<List<string>?>("scopeIds"); }
            set { BackingStore?.Set("scopeIds", value); }
        }
#nullable restore
#else
        public List<string> ScopeIds
        {
            get { return BackingStore?.Get<List<string>>("scopeIds"); }
            set { BackingStore?.Set("scopeIds", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.CloudPcCloudApp"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.CloudPcCloudApp CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.CloudPcCloudApp();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "actionFailedErrorCode", n => { ActionFailedErrorCode = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcCloudAppActionFailedErrorCode>(); } },
                { "actionFailedErrorMessage", n => { ActionFailedErrorMessage = n.GetStringValue(); } },
                { "addedDateTime", n => { AddedDateTime = n.GetDateTimeOffsetValue(); } },
                { "appDetail", n => { AppDetail = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcCloudAppDetail>(global::Microsoft.Graph.Beta.Models.CloudPcCloudAppDetail.CreateFromDiscriminatorValue); } },
                { "appStatus", n => { AppStatus = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcCloudAppStatus>(); } },
                { "availableToUser", n => { AvailableToUser = n.GetBoolValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "discoveredAppName", n => { DiscoveredAppName = n.GetStringValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "lastPublishedDateTime", n => { LastPublishedDateTime = n.GetDateTimeOffsetValue(); } },
                { "provisioningPolicyId", n => { ProvisioningPolicyId = n.GetStringValue(); } },
                { "scopeIds", n => { ScopeIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcCloudAppActionFailedErrorCode>("actionFailedErrorCode", ActionFailedErrorCode);
            writer.WriteStringValue("actionFailedErrorMessage", ActionFailedErrorMessage);
            writer.WriteDateTimeOffsetValue("addedDateTime", AddedDateTime);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcCloudAppDetail>("appDetail", AppDetail);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcCloudAppStatus>("appStatus", AppStatus);
            writer.WriteBoolValue("availableToUser", AvailableToUser);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("discoveredAppName", DiscoveredAppName);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteDateTimeOffsetValue("lastPublishedDateTime", LastPublishedDateTime);
            writer.WriteStringValue("provisioningPolicyId", ProvisioningPolicyId);
            writer.WriteCollectionOfPrimitiveValues<string>("scopeIds", ScopeIds);
        }
    }
}
#pragma warning restore CS0618
