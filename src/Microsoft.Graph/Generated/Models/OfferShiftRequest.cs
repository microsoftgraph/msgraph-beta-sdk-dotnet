// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class OfferShiftRequest : global::Microsoft.Graph.Beta.Models.ScheduleChangeRequest, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z</summary>
        public DateTimeOffset? RecipientActionDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("recipientActionDateTime"); }
            set { BackingStore?.Set("recipientActionDateTime", value); }
        }
        /// <summary>Custom message sent by recipient of the offer shift request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecipientActionMessage
        {
            get { return BackingStore?.Get<string?>("recipientActionMessage"); }
            set { BackingStore?.Set("recipientActionMessage", value); }
        }
#nullable restore
#else
        public string RecipientActionMessage
        {
            get { return BackingStore?.Get<string>("recipientActionMessage"); }
            set { BackingStore?.Set("recipientActionMessage", value); }
        }
#endif
        /// <summary>User id of the recipient of the offer shift request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecipientUserId
        {
            get { return BackingStore?.Get<string?>("recipientUserId"); }
            set { BackingStore?.Set("recipientUserId", value); }
        }
#nullable restore
#else
        public string RecipientUserId
        {
            get { return BackingStore?.Get<string>("recipientUserId"); }
            set { BackingStore?.Set("recipientUserId", value); }
        }
#endif
        /// <summary>User id of the sender of the offer shift request.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SenderShiftId
        {
            get { return BackingStore?.Get<string?>("senderShiftId"); }
            set { BackingStore?.Set("senderShiftId", value); }
        }
#nullable restore
#else
        public string SenderShiftId
        {
            get { return BackingStore?.Get<string>("senderShiftId"); }
            set { BackingStore?.Set("senderShiftId", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.OfferShiftRequest"/> and sets the default values.
        /// </summary>
        public OfferShiftRequest() : base()
        {
            OdataType = "#microsoft.graph.offerShiftRequest";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.OfferShiftRequest"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.OfferShiftRequest CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.swapShiftsChangeRequest" => new global::Microsoft.Graph.Beta.Models.SwapShiftsChangeRequest(),
                _ => new global::Microsoft.Graph.Beta.Models.OfferShiftRequest(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "recipientActionDateTime", n => { RecipientActionDateTime = n.GetDateTimeOffsetValue(); } },
                { "recipientActionMessage", n => { RecipientActionMessage = n.GetStringValue(); } },
                { "recipientUserId", n => { RecipientUserId = n.GetStringValue(); } },
                { "senderShiftId", n => { SenderShiftId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("recipientActionMessage", RecipientActionMessage);
            writer.WriteStringValue("recipientUserId", RecipientUserId);
            writer.WriteStringValue("senderShiftId", SenderShiftId);
        }
    }
}
#pragma warning restore CS0618
