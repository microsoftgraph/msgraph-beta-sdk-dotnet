// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SharePointMigrationEvent : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The correlationId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CorrelationId
        {
            get { return BackingStore?.Get<string?>("correlationId"); }
            set { BackingStore?.Set("correlationId", value); }
        }
#nullable restore
#else
        public string CorrelationId
        {
            get { return BackingStore?.Get<string>("correlationId"); }
            set { BackingStore?.Set("correlationId", value); }
        }
#endif
        /// <summary>The eventDateTime property</summary>
        public DateTimeOffset? EventDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("eventDateTime"); }
            set { BackingStore?.Set("eventDateTime", value); }
        }
        /// <summary>The jobId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? JobId
        {
            get { return BackingStore?.Get<string?>("jobId"); }
            set { BackingStore?.Set("jobId", value); }
        }
#nullable restore
#else
        public string JobId
        {
            get { return BackingStore?.Get<string>("jobId"); }
            set { BackingStore?.Set("jobId", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.SharePointMigrationEvent"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.SharePointMigrationEvent CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.sharePointMigrationFinishManifestFileUploadEvent" => new global::Microsoft.Graph.Beta.Models.SharePointMigrationFinishManifestFileUploadEvent(),
                "#microsoft.graph.sharePointMigrationJobCancelledEvent" => new global::Microsoft.Graph.Beta.Models.SharePointMigrationJobCancelledEvent(),
                "#microsoft.graph.sharePointMigrationJobDeletedEvent" => new global::Microsoft.Graph.Beta.Models.SharePointMigrationJobDeletedEvent(),
                "#microsoft.graph.sharePointMigrationJobErrorEvent" => new global::Microsoft.Graph.Beta.Models.SharePointMigrationJobErrorEvent(),
                "#microsoft.graph.sharePointMigrationJobPostponedEvent" => new global::Microsoft.Graph.Beta.Models.SharePointMigrationJobPostponedEvent(),
                "#microsoft.graph.sharePointMigrationJobProgressEvent" => new global::Microsoft.Graph.Beta.Models.SharePointMigrationJobProgressEvent(),
                "#microsoft.graph.sharePointMigrationJobQueuedEvent" => new global::Microsoft.Graph.Beta.Models.SharePointMigrationJobQueuedEvent(),
                "#microsoft.graph.sharePointMigrationJobStartEvent" => new global::Microsoft.Graph.Beta.Models.SharePointMigrationJobStartEvent(),
                _ => new global::Microsoft.Graph.Beta.Models.SharePointMigrationEvent(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "correlationId", n => { CorrelationId = n.GetStringValue(); } },
                { "eventDateTime", n => { EventDateTime = n.GetDateTimeOffsetValue(); } },
                { "jobId", n => { JobId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("correlationId", CorrelationId);
            writer.WriteDateTimeOffsetValue("eventDateTime", EventDateTime);
            writer.WriteStringValue("jobId", JobId);
        }
    }
}
#pragma warning restore CS0618
