// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SensitiveType : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The classificationMethod property</summary>
        public global::Microsoft.Graph.Beta.Models.ClassificationMethod? ClassificationMethod
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ClassificationMethod?>("classificationMethod"); }
            set { BackingStore?.Set("classificationMethod", value); }
        }
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description
        {
            get { return BackingStore?.Get<string?>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#nullable restore
#else
        public string Description
        {
            get { return BackingStore?.Get<string>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name
        {
            get { return BackingStore?.Get<string?>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#nullable restore
#else
        public string Name
        {
            get { return BackingStore?.Get<string>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#endif
        /// <summary>The publisherName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PublisherName
        {
            get { return BackingStore?.Get<string?>("publisherName"); }
            set { BackingStore?.Set("publisherName", value); }
        }
#nullable restore
#else
        public string PublisherName
        {
            get { return BackingStore?.Get<string>("publisherName"); }
            set { BackingStore?.Set("publisherName", value); }
        }
#endif
        /// <summary>The rulePackageId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RulePackageId
        {
            get { return BackingStore?.Get<string?>("rulePackageId"); }
            set { BackingStore?.Set("rulePackageId", value); }
        }
#nullable restore
#else
        public string RulePackageId
        {
            get { return BackingStore?.Get<string>("rulePackageId"); }
            set { BackingStore?.Set("rulePackageId", value); }
        }
#endif
        /// <summary>The rulePackageType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RulePackageType
        {
            get { return BackingStore?.Get<string?>("rulePackageType"); }
            set { BackingStore?.Set("rulePackageType", value); }
        }
#nullable restore
#else
        public string RulePackageType
        {
            get { return BackingStore?.Get<string>("rulePackageType"); }
            set { BackingStore?.Set("rulePackageType", value); }
        }
#endif
        /// <summary>The scope property</summary>
        public global::Microsoft.Graph.Beta.Models.SensitiveTypeScope? Scope
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SensitiveTypeScope?>("scope"); }
            set { BackingStore?.Set("scope", value); }
        }
        /// <summary>The sensitiveTypeSource property</summary>
        public global::Microsoft.Graph.Beta.Models.SensitiveTypeSource? SensitiveTypeSource
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SensitiveTypeSource?>("sensitiveTypeSource"); }
            set { BackingStore?.Set("sensitiveTypeSource", value); }
        }
        /// <summary>The state property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? State
        {
            get { return BackingStore?.Get<string?>("state"); }
            set { BackingStore?.Set("state", value); }
        }
#nullable restore
#else
        public string State
        {
            get { return BackingStore?.Get<string>("state"); }
            set { BackingStore?.Set("state", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.SensitiveType"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.SensitiveType CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.SensitiveType();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "classificationMethod", n => { ClassificationMethod = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.ClassificationMethod>(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "publisherName", n => { PublisherName = n.GetStringValue(); } },
                { "rulePackageId", n => { RulePackageId = n.GetStringValue(); } },
                { "rulePackageType", n => { RulePackageType = n.GetStringValue(); } },
                { "scope", n => { Scope = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.SensitiveTypeScope>(); } },
                { "sensitiveTypeSource", n => { SensitiveTypeSource = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.SensitiveTypeSource>(); } },
                { "state", n => { State = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.ClassificationMethod>("classificationMethod", ClassificationMethod);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("publisherName", PublisherName);
            writer.WriteStringValue("rulePackageId", RulePackageId);
            writer.WriteStringValue("rulePackageType", RulePackageType);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.SensitiveTypeScope>("scope", Scope);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.SensitiveTypeSource>("sensitiveTypeSource", SensitiveTypeSource);
            writer.WriteStringValue("state", State);
        }
    }
}
#pragma warning restore CS0618
