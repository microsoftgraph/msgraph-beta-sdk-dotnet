// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models
{
    #pragma warning disable CS1591
    public class Profile : Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The account property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.UserAccountInformation>? Account
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.UserAccountInformation>?>("account"); }
            set { BackingStore?.Set("account", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.UserAccountInformation> Account
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.UserAccountInformation>>("account"); }
            set { BackingStore?.Set("account", value); }
        }
#endif
        /// <summary>Represents details of addresses associated with the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ItemAddress>? Addresses
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ItemAddress>?>("addresses"); }
            set { BackingStore?.Set("addresses", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ItemAddress> Addresses
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ItemAddress>>("addresses"); }
            set { BackingStore?.Set("addresses", value); }
        }
#endif
        /// <summary>Represents the details of meaningful dates associated with a person.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.PersonAnnualEvent>? Anniversaries
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonAnnualEvent>?>("anniversaries"); }
            set { BackingStore?.Set("anniversaries", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.PersonAnnualEvent> Anniversaries
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonAnnualEvent>>("anniversaries"); }
            set { BackingStore?.Set("anniversaries", value); }
        }
#endif
        /// <summary>Represents the details of awards or honors associated with a person.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.PersonAward>? Awards
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonAward>?>("awards"); }
            set { BackingStore?.Set("awards", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.PersonAward> Awards
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonAward>>("awards"); }
            set { BackingStore?.Set("awards", value); }
        }
#endif
        /// <summary>Represents the details of certifications associated with a person.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.PersonCertification>? Certifications
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonCertification>?>("certifications"); }
            set { BackingStore?.Set("certifications", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.PersonCertification> Certifications
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonCertification>>("certifications"); }
            set { BackingStore?.Set("certifications", value); }
        }
#endif
        /// <summary>Represents data that a user has supplied related to undergraduate, graduate, postgraduate or other educational activities.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.EducationalActivity>? EducationalActivities
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.EducationalActivity>?>("educationalActivities"); }
            set { BackingStore?.Set("educationalActivities", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.EducationalActivity> EducationalActivities
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.EducationalActivity>>("educationalActivities"); }
            set { BackingStore?.Set("educationalActivities", value); }
        }
#endif
        /// <summary>Represents detailed information about email addresses associated with the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ItemEmail>? Emails
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ItemEmail>?>("emails"); }
            set { BackingStore?.Set("emails", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ItemEmail> Emails
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ItemEmail>>("emails"); }
            set { BackingStore?.Set("emails", value); }
        }
#endif
        /// <summary>Provides detailed information about interests the user has associated with themselves in various services.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.PersonInterest>? Interests
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonInterest>?>("interests"); }
            set { BackingStore?.Set("interests", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.PersonInterest> Interests
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonInterest>>("interests"); }
            set { BackingStore?.Set("interests", value); }
        }
#endif
        /// <summary>Represents detailed information about languages that a user has added to their profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.LanguageProficiency>? Languages
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.LanguageProficiency>?>("languages"); }
            set { BackingStore?.Set("languages", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.LanguageProficiency> Languages
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.LanguageProficiency>>("languages"); }
            set { BackingStore?.Set("languages", value); }
        }
#endif
        /// <summary>Represents the names a user has added to their profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.PersonName>? Names
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonName>?>("names"); }
            set { BackingStore?.Set("names", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.PersonName> Names
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonName>>("names"); }
            set { BackingStore?.Set("names", value); }
        }
#endif
        /// <summary>Represents notes that a user has added to their profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.PersonAnnotation>? Notes
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonAnnotation>?>("notes"); }
            set { BackingStore?.Set("notes", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.PersonAnnotation> Notes
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonAnnotation>>("notes"); }
            set { BackingStore?.Set("notes", value); }
        }
#endif
        /// <summary>Represents patents that a user has added to their profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ItemPatent>? Patents
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ItemPatent>?>("patents"); }
            set { BackingStore?.Set("patents", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ItemPatent> Patents
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ItemPatent>>("patents"); }
            set { BackingStore?.Set("patents", value); }
        }
#endif
        /// <summary>Represents detailed information about phone numbers associated with a user in various services.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ItemPhone>? Phones
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ItemPhone>?>("phones"); }
            set { BackingStore?.Set("phones", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ItemPhone> Phones
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ItemPhone>>("phones"); }
            set { BackingStore?.Set("phones", value); }
        }
#endif
        /// <summary>Represents detailed information about work positions associated with a user&apos;s profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.WorkPosition>? Positions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WorkPosition>?>("positions"); }
            set { BackingStore?.Set("positions", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.WorkPosition> Positions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WorkPosition>>("positions"); }
            set { BackingStore?.Set("positions", value); }
        }
#endif
        /// <summary>Represents detailed information about projects associated with a user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ProjectParticipation>? Projects
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ProjectParticipation>?>("projects"); }
            set { BackingStore?.Set("projects", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ProjectParticipation> Projects
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ProjectParticipation>>("projects"); }
            set { BackingStore?.Set("projects", value); }
        }
#endif
        /// <summary>Represents details of any publications a user has added to their profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ItemPublication>? Publications
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ItemPublication>?>("publications"); }
            set { BackingStore?.Set("publications", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ItemPublication> Publications
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ItemPublication>>("publications"); }
            set { BackingStore?.Set("publications", value); }
        }
#endif
        /// <summary>Represents detailed information about skills associated with a user in various services.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.SkillProficiency>? Skills
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.SkillProficiency>?>("skills"); }
            set { BackingStore?.Set("skills", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.SkillProficiency> Skills
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.SkillProficiency>>("skills"); }
            set { BackingStore?.Set("skills", value); }
        }
#endif
        /// <summary>Represents web accounts the user has indicated they use or has added to their user profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.WebAccount>? WebAccounts
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WebAccount>?>("webAccounts"); }
            set { BackingStore?.Set("webAccounts", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.WebAccount> WebAccounts
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WebAccount>>("webAccounts"); }
            set { BackingStore?.Set("webAccounts", value); }
        }
#endif
        /// <summary>Represents detailed information about websites associated with a user in various services.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.PersonWebsite>? Websites
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonWebsite>?>("websites"); }
            set { BackingStore?.Set("websites", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.PersonWebsite> Websites
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PersonWebsite>>("websites"); }
            set { BackingStore?.Set("websites", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.Profile"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.Profile CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Microsoft.Graph.Beta.Models.Profile();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "account", n => { Account = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.UserAccountInformation>(Microsoft.Graph.Beta.Models.UserAccountInformation.CreateFromDiscriminatorValue)?.ToList(); } },
                { "addresses", n => { Addresses = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ItemAddress>(Microsoft.Graph.Beta.Models.ItemAddress.CreateFromDiscriminatorValue)?.ToList(); } },
                { "anniversaries", n => { Anniversaries = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonAnnualEvent>(Microsoft.Graph.Beta.Models.PersonAnnualEvent.CreateFromDiscriminatorValue)?.ToList(); } },
                { "awards", n => { Awards = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonAward>(Microsoft.Graph.Beta.Models.PersonAward.CreateFromDiscriminatorValue)?.ToList(); } },
                { "certifications", n => { Certifications = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonCertification>(Microsoft.Graph.Beta.Models.PersonCertification.CreateFromDiscriminatorValue)?.ToList(); } },
                { "educationalActivities", n => { EducationalActivities = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.EducationalActivity>(Microsoft.Graph.Beta.Models.EducationalActivity.CreateFromDiscriminatorValue)?.ToList(); } },
                { "emails", n => { Emails = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ItemEmail>(Microsoft.Graph.Beta.Models.ItemEmail.CreateFromDiscriminatorValue)?.ToList(); } },
                { "interests", n => { Interests = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonInterest>(Microsoft.Graph.Beta.Models.PersonInterest.CreateFromDiscriminatorValue)?.ToList(); } },
                { "languages", n => { Languages = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.LanguageProficiency>(Microsoft.Graph.Beta.Models.LanguageProficiency.CreateFromDiscriminatorValue)?.ToList(); } },
                { "names", n => { Names = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonName>(Microsoft.Graph.Beta.Models.PersonName.CreateFromDiscriminatorValue)?.ToList(); } },
                { "notes", n => { Notes = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonAnnotation>(Microsoft.Graph.Beta.Models.PersonAnnotation.CreateFromDiscriminatorValue)?.ToList(); } },
                { "patents", n => { Patents = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ItemPatent>(Microsoft.Graph.Beta.Models.ItemPatent.CreateFromDiscriminatorValue)?.ToList(); } },
                { "phones", n => { Phones = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ItemPhone>(Microsoft.Graph.Beta.Models.ItemPhone.CreateFromDiscriminatorValue)?.ToList(); } },
                { "positions", n => { Positions = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WorkPosition>(Microsoft.Graph.Beta.Models.WorkPosition.CreateFromDiscriminatorValue)?.ToList(); } },
                { "projects", n => { Projects = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ProjectParticipation>(Microsoft.Graph.Beta.Models.ProjectParticipation.CreateFromDiscriminatorValue)?.ToList(); } },
                { "publications", n => { Publications = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ItemPublication>(Microsoft.Graph.Beta.Models.ItemPublication.CreateFromDiscriminatorValue)?.ToList(); } },
                { "skills", n => { Skills = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.SkillProficiency>(Microsoft.Graph.Beta.Models.SkillProficiency.CreateFromDiscriminatorValue)?.ToList(); } },
                { "webAccounts", n => { WebAccounts = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WebAccount>(Microsoft.Graph.Beta.Models.WebAccount.CreateFromDiscriminatorValue)?.ToList(); } },
                { "websites", n => { Websites = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonWebsite>(Microsoft.Graph.Beta.Models.PersonWebsite.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.UserAccountInformation>("account", Account);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ItemAddress>("addresses", Addresses);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonAnnualEvent>("anniversaries", Anniversaries);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonAward>("awards", Awards);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonCertification>("certifications", Certifications);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.EducationalActivity>("educationalActivities", EducationalActivities);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ItemEmail>("emails", Emails);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonInterest>("interests", Interests);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.LanguageProficiency>("languages", Languages);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonName>("names", Names);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonAnnotation>("notes", Notes);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ItemPatent>("patents", Patents);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ItemPhone>("phones", Phones);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WorkPosition>("positions", Positions);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ProjectParticipation>("projects", Projects);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ItemPublication>("publications", Publications);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.SkillProficiency>("skills", Skills);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WebAccount>("webAccounts", WebAccounts);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PersonWebsite>("websites", Websites);
        }
    }
}
