// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CloudPC : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The Microsoft Entra device ID of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AadDeviceId
        {
            get { return BackingStore?.Get<string?>("aadDeviceId"); }
            set { BackingStore?.Set("aadDeviceId", value); }
        }
#nullable restore
#else
        public string AadDeviceId
        {
            get { return BackingStore?.Get<string>("aadDeviceId"); }
            set { BackingStore?.Set("aadDeviceId", value); }
        }
#endif
        /// <summary>The allotment name divides tenant licenses into smaller batches or groups that help restrict the number of licenses available for use in a specific assignment. When the provisioningType is dedicated, the allotment name is null. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AllotmentDisplayName
        {
            get { return BackingStore?.Get<string?>("allotmentDisplayName"); }
            set { BackingStore?.Set("allotmentDisplayName", value); }
        }
#nullable restore
#else
        public string AllotmentDisplayName
        {
            get { return BackingStore?.Get<string>("allotmentDisplayName"); }
            set { BackingStore?.Set("allotmentDisplayName", value); }
        }
#endif
        /// <summary>The connection setting of the Cloud PC. Possible values: enableSingleSignOn. Read Only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcConnectionSetting? ConnectionSetting
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcConnectionSetting?>("connectionSetting"); }
            set { BackingStore?.Set("connectionSetting", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcConnectionSetting ConnectionSetting
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcConnectionSetting>("connectionSetting"); }
            set { BackingStore?.Set("connectionSetting", value); }
        }
#endif
        /// <summary>The connection settings of the Cloud PC. Possible values: enableSingleSignOn. Read-only. This property is deprecated and stopped retuning data on August 31, 2024. Going forward, use the connectionSetting property.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcConnectionSettings? ConnectionSettings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcConnectionSettings?>("connectionSettings"); }
            set { BackingStore?.Set("connectionSettings", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcConnectionSettings ConnectionSettings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcConnectionSettings>("connectionSettings"); }
            set { BackingStore?.Set("connectionSettings", value); }
        }
#endif
        /// <summary>The connectivity health check result of a Cloud PC, including the updated timestamp and whether the Cloud PC can be connected.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcConnectivityResult? ConnectivityResult
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcConnectivityResult?>("connectivityResult"); }
            set { BackingStore?.Set("connectivityResult", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcConnectivityResult ConnectivityResult
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcConnectivityResult>("connectivityResult"); }
            set { BackingStore?.Set("connectivityResult", value); }
        }
#endif
        /// <summary>The name of the geographical region where the Cloud PC is currently provisioned. For example, westus3, eastus2, and southeastasia. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceRegionName
        {
            get { return BackingStore?.Get<string?>("deviceRegionName"); }
            set { BackingStore?.Set("deviceRegionName", value); }
        }
#nullable restore
#else
        public string DeviceRegionName
        {
            get { return BackingStore?.Get<string>("deviceRegionName"); }
            set { BackingStore?.Set("deviceRegionName", value); }
        }
#endif
        /// <summary>The disaster recovery status of the Cloud PC, including the primary region, secondary region, and capability type. The default value is null that indicates that the disaster recovery setting is disabled. To receive a response with the disasterRecoveryCapability property, $select and $filter it by disasterRecoveryCapability/{subProperty} in the request URL. For more information, see Example 3: List Cloud PCs filtered by disaster recovery capability type. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcDisasterRecoveryCapability? DisasterRecoveryCapability
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcDisasterRecoveryCapability?>("disasterRecoveryCapability"); }
            set { BackingStore?.Set("disasterRecoveryCapability", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcDisasterRecoveryCapability DisasterRecoveryCapability
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcDisasterRecoveryCapability>("disasterRecoveryCapability"); }
            set { BackingStore?.Set("disasterRecoveryCapability", value); }
        }
#endif
        /// <summary>The disk encryption applied to the Cloud PC. Possible values: notAvailable, notEncrypted, encryptedUsingPlatformManagedKey, encryptedUsingCustomerManagedKey, and unknownFutureValue.</summary>
        public global::Microsoft.Graph.Beta.Models.CloudPcDiskEncryptionState? DiskEncryptionState
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcDiskEncryptionState?>("diskEncryptionState"); }
            set { BackingStore?.Set("diskEncryptionState", value); }
        }
        /// <summary>The display name of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>The current availability of a frontline assigned Cloud PC. Possible values: notApplicable, available,notAvailable and unknownFutureValue. Default value is notApplicable. Read Only.</summary>
        public global::Microsoft.Graph.Beta.Models.FrontlineCloudPcAvailability? FrontlineCloudPcAvailability
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.FrontlineCloudPcAvailability?>("frontlineCloudPcAvailability"); }
            set { BackingStore?.Set("frontlineCloudPcAvailability", value); }
        }
        /// <summary>The date and time when the grace period ends and reprovisioning or deprovisioning happens. Required only if the status is inGracePeriod. The timestamp is shown in ISO 8601 format and Coordinated Universal Time (UTC). For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? GracePeriodEndDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("gracePeriodEndDateTime"); }
            set { BackingStore?.Set("gracePeriodEndDateTime", value); }
        }
        /// <summary>The Microsoft Entra group details (for example, ID and display name) for the Entra ID group associated with the user&apos;s Reserve Cloud PC assignment. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcEntraGroupDetail? GroupDetail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcEntraGroupDetail?>("groupDetail"); }
            set { BackingStore?.Set("groupDetail", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcEntraGroupDetail GroupDetail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcEntraGroupDetail>("groupDetail"); }
            set { BackingStore?.Set("groupDetail", value); }
        }
#endif
        /// <summary>Name of the OS image that&apos;s on the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageDisplayName
        {
            get { return BackingStore?.Get<string?>("imageDisplayName"); }
            set { BackingStore?.Set("imageDisplayName", value); }
        }
#nullable restore
#else
        public string ImageDisplayName
        {
            get { return BackingStore?.Get<string>("imageDisplayName"); }
            set { BackingStore?.Set("imageDisplayName", value); }
        }
#endif
        /// <summary>The last login result of the Cloud PC. For example, { &apos;time&apos;: &apos;2014-01-01T00:00:00Z&apos;}.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcLoginResult? LastLoginResult
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcLoginResult?>("lastLoginResult"); }
            set { BackingStore?.Set("lastLoginResult", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcLoginResult LastLoginResult
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcLoginResult>("lastLoginResult"); }
            set { BackingStore?.Set("lastLoginResult", value); }
        }
#endif
        /// <summary>The last modified date and time of the Cloud PC. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? LastModifiedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastModifiedDateTime"); }
            set { BackingStore?.Set("lastModifiedDateTime", value); }
        }
        /// <summary>The last remote action result of the enterprise Cloud PCs. The supported remote actions are: Reboot, Rename, Reprovision, Restore, Troubleshoot.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcRemoteActionResult? LastRemoteActionResult
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcRemoteActionResult?>("lastRemoteActionResult"); }
            set { BackingStore?.Set("lastRemoteActionResult", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcRemoteActionResult LastRemoteActionResult
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcRemoteActionResult>("lastRemoteActionResult"); }
            set { BackingStore?.Set("lastRemoteActionResult", value); }
        }
#endif
        /// <summary>The Intune device ID of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ManagedDeviceId
        {
            get { return BackingStore?.Get<string?>("managedDeviceId"); }
            set { BackingStore?.Set("managedDeviceId", value); }
        }
#nullable restore
#else
        public string ManagedDeviceId
        {
            get { return BackingStore?.Get<string>("managedDeviceId"); }
            set { BackingStore?.Set("managedDeviceId", value); }
        }
#endif
        /// <summary>The Intune device name of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ManagedDeviceName
        {
            get { return BackingStore?.Get<string?>("managedDeviceName"); }
            set { BackingStore?.Set("managedDeviceName", value); }
        }
#nullable restore
#else
        public string ManagedDeviceName
        {
            get { return BackingStore?.Get<string>("managedDeviceName"); }
            set { BackingStore?.Set("managedDeviceName", value); }
        }
#endif
        /// <summary>The Azure network connection that is applied during the provisioning of Cloud PCs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OnPremisesConnectionName
        {
            get { return BackingStore?.Get<string?>("onPremisesConnectionName"); }
            set { BackingStore?.Set("onPremisesConnectionName", value); }
        }
#nullable restore
#else
        public string OnPremisesConnectionName
        {
            get { return BackingStore?.Get<string>("onPremisesConnectionName"); }
            set { BackingStore?.Set("onPremisesConnectionName", value); }
        }
#endif
        /// <summary>The version of the operating system (OS) to provision on Cloud PCs. Possible values are: windows10, windows11, unknownFutureValue.</summary>
        public global::Microsoft.Graph.Beta.Models.CloudPcOperatingSystem? OsVersion
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcOperatingSystem?>("osVersion"); }
            set { BackingStore?.Set("osVersion", value); }
        }
        /// <summary>The results of every partner agent&apos;s installation status on Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.CloudPcPartnerAgentInstallResult>? PartnerAgentInstallResults
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CloudPcPartnerAgentInstallResult>?>("partnerAgentInstallResults"); }
            set { BackingStore?.Set("partnerAgentInstallResults", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.CloudPcPartnerAgentInstallResult> PartnerAgentInstallResults
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CloudPcPartnerAgentInstallResult>>("partnerAgentInstallResults"); }
            set { BackingStore?.Set("partnerAgentInstallResults", value); }
        }
#endif
        /// <summary>The power state of a Cloud PC. The possible values are: running, poweredOff, unknown. This property only supports shift work Cloud PCs.</summary>
        public global::Microsoft.Graph.Beta.Models.CloudPcPowerState? PowerState
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcPowerState?>("powerState"); }
            set { BackingStore?.Set("powerState", value); }
        }
        /// <summary>The product type of the Cloud PC. The possible values are: enterprise, frontline, devBox, powerAutomate, business, unknownFutureValue. For the available service plans and pricing for enterprise, frontline, and business, see Windows 365 for business. For pricing information for devBox, see Microsoft Dev Box pricing. For the available plans and pricing for powerAutomate, see Power Automate pricing. The default value is enterprise. Supports $filter and $select. For more information, see Example 4: List Cloud PCs filtered by product type. Read-only.</summary>
        public global::Microsoft.Graph.Beta.Models.CloudPcProductType? ProductType
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcProductType?>("productType"); }
            set { BackingStore?.Set("productType", value); }
        }
        /// <summary>The latest provisioned date and time, automatically generated and assigned during the initial provisioning or any subsequent reprovisioning of the Cloud PC. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? ProvisionedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("provisionedDateTime"); }
            set { BackingStore?.Set("provisionedDateTime", value); }
        }
        /// <summary>The provisioning policy ID of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProvisioningPolicyId
        {
            get { return BackingStore?.Get<string?>("provisioningPolicyId"); }
            set { BackingStore?.Set("provisioningPolicyId", value); }
        }
#nullable restore
#else
        public string ProvisioningPolicyId
        {
            get { return BackingStore?.Get<string>("provisioningPolicyId"); }
            set { BackingStore?.Set("provisioningPolicyId", value); }
        }
#endif
        /// <summary>The provisioning policy that is applied during the provisioning of Cloud PCs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProvisioningPolicyName
        {
            get { return BackingStore?.Get<string?>("provisioningPolicyName"); }
            set { BackingStore?.Set("provisioningPolicyName", value); }
        }
#nullable restore
#else
        public string ProvisioningPolicyName
        {
            get { return BackingStore?.Get<string>("provisioningPolicyName"); }
            set { BackingStore?.Set("provisioningPolicyName", value); }
        }
#endif
        /// <summary>The type of licenses to be used when provisioning Cloud PCs using this policy. Possible values are: dedicated, shared, unknownFutureValue, sharedByUser, sharedByEntraGroup, reserve. Use the Prefer: include-unknown-enum-members request header to get the following values from this evolvable enum: sharedByUser, sharedByEntraGroup, reserve. The default value is dedicated. The shared member is deprecated and will stop returning on April 30, 2027; going forward, use the sharedByUser member.</summary>
        public global::Microsoft.Graph.Beta.Models.CloudPcProvisioningType? ProvisioningType
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcProvisioningType?>("provisioningType"); }
            set { BackingStore?.Set("provisioningType", value); }
        }
        /// <summary>The scopeIds property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ScopeIds
        {
            get { return BackingStore?.Get<List<string>?>("scopeIds"); }
            set { BackingStore?.Set("scopeIds", value); }
        }
#nullable restore
#else
        public List<string> ScopeIds
        {
            get { return BackingStore?.Get<List<string>>("scopeIds"); }
            set { BackingStore?.Set("scopeIds", value); }
        }
#endif
        /// <summary>The service plan ID of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServicePlanId
        {
            get { return BackingStore?.Get<string?>("servicePlanId"); }
            set { BackingStore?.Set("servicePlanId", value); }
        }
#nullable restore
#else
        public string ServicePlanId
        {
            get { return BackingStore?.Get<string>("servicePlanId"); }
            set { BackingStore?.Set("servicePlanId", value); }
        }
#endif
        /// <summary>The service plan name of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServicePlanName
        {
            get { return BackingStore?.Get<string?>("servicePlanName"); }
            set { BackingStore?.Set("servicePlanName", value); }
        }
#nullable restore
#else
        public string ServicePlanName
        {
            get { return BackingStore?.Get<string>("servicePlanName"); }
            set { BackingStore?.Set("servicePlanName", value); }
        }
#endif
        /// <summary>The service plan type of the Cloud PC.</summary>
        public global::Microsoft.Graph.Beta.Models.CloudPcServicePlanType? ServicePlanType
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcServicePlanType?>("servicePlanType"); }
            set { BackingStore?.Set("servicePlanType", value); }
        }
        /// <summary>Indicates the Cloud PC device details associated with the frontline shared service plan, including the user&apos;s UPN and the session start date and time.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcFrontlineSharedDeviceDetail? SharedDeviceDetail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcFrontlineSharedDeviceDetail?>("sharedDeviceDetail"); }
            set { BackingStore?.Set("sharedDeviceDetail", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcFrontlineSharedDeviceDetail SharedDeviceDetail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcFrontlineSharedDeviceDetail>("sharedDeviceDetail"); }
            set { BackingStore?.Set("sharedDeviceDetail", value); }
        }
#endif
        /// <summary>The status property</summary>
        public global::Microsoft.Graph.Beta.Models.CloudPcStatus? Status
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcStatus?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
        /// <summary>Indicates the detailed status associated with Cloud PC, including error/warning code, error/warning message, additionalInformation. For example, { &apos;code&apos;: &apos;internalServerError&apos;, &apos;message&apos;: &apos;There was an error during the Cloud PC upgrade. Please contact support.&apos;, &apos;additionalInformation&apos;: null }.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcStatusDetail? StatusDetail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcStatusDetail?>("statusDetail"); }
            set { BackingStore?.Set("statusDetail", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcStatusDetail StatusDetail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcStatusDetail>("statusDetail"); }
            set { BackingStore?.Set("statusDetail", value); }
        }
#endif
        /// <summary>The details of the Cloud PC status. For example, { &apos;code&apos;: &apos;internalServerError&apos;, &apos;message&apos;: &apos;There was an error during the Cloud PC upgrade. Please contact support.&apos;, &apos;additionalInformation&apos;: null }. This property is deprecated and will no longer be supported effective August 31, 2024. Use statusDetail instead.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcStatusDetails? StatusDetails
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcStatusDetails?>("statusDetails"); }
            set { BackingStore?.Set("statusDetails", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcStatusDetails StatusDetails
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcStatusDetails>("statusDetails"); }
            set { BackingStore?.Set("statusDetails", value); }
        }
#endif
        /// <summary>The account type of the user on provisioned Cloud PCs. Possible values are: standardUser, administrator, unknownFutureValue.</summary>
        public global::Microsoft.Graph.Beta.Models.CloudPcUserAccountType? UserAccountType
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcUserAccountType?>("userAccountType"); }
            set { BackingStore?.Set("userAccountType", value); }
        }
        /// <summary>The user details (for example, ID and display name) for the user associated with a Reserve Cloud PC assignment. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcEntraUserDetail? UserDetail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcEntraUserDetail?>("userDetail"); }
            set { BackingStore?.Set("userDetail", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcEntraUserDetail UserDetail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcEntraUserDetail>("userDetail"); }
            set { BackingStore?.Set("userDetail", value); }
        }
#endif
        /// <summary>Specifies the type of cloud object the end user can access. The possible values are: cloudPc, cloudApp, unknownFutureValue. When set to cloudPc, it indicates that the end user can access the entire desktop. When set to cloudApp, it indicates that the end user can only access cloud apps published under the associated provisioning policy. Since the cloud app experience also creates Cloud PC devices that appear in the Cloud PC device list, this property helps differentiate them. The default value is cloudPc. This property is defined in the provisioning policy.</summary>
        public global::Microsoft.Graph.Beta.Models.CloudPcUserExperienceType? UserExperienceType
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcUserExperienceType?>("userExperienceType"); }
            set { BackingStore?.Set("userExperienceType", value); }
        }
        /// <summary>The user principal name (UPN) of the user assigned to the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserPrincipalName
        {
            get { return BackingStore?.Get<string?>("userPrincipalName"); }
            set { BackingStore?.Set("userPrincipalName", value); }
        }
#nullable restore
#else
        public string UserPrincipalName
        {
            get { return BackingStore?.Get<string>("userPrincipalName"); }
            set { BackingStore?.Set("userPrincipalName", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.CloudPC"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.CloudPC CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.CloudPC();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "aadDeviceId", n => { AadDeviceId = n.GetStringValue(); } },
                { "allotmentDisplayName", n => { AllotmentDisplayName = n.GetStringValue(); } },
                { "connectionSetting", n => { ConnectionSetting = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcConnectionSetting>(global::Microsoft.Graph.Beta.Models.CloudPcConnectionSetting.CreateFromDiscriminatorValue); } },
                { "connectionSettings", n => { ConnectionSettings = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcConnectionSettings>(global::Microsoft.Graph.Beta.Models.CloudPcConnectionSettings.CreateFromDiscriminatorValue); } },
                { "connectivityResult", n => { ConnectivityResult = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcConnectivityResult>(global::Microsoft.Graph.Beta.Models.CloudPcConnectivityResult.CreateFromDiscriminatorValue); } },
                { "deviceRegionName", n => { DeviceRegionName = n.GetStringValue(); } },
                { "disasterRecoveryCapability", n => { DisasterRecoveryCapability = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcDisasterRecoveryCapability>(global::Microsoft.Graph.Beta.Models.CloudPcDisasterRecoveryCapability.CreateFromDiscriminatorValue); } },
                { "diskEncryptionState", n => { DiskEncryptionState = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcDiskEncryptionState>(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "frontlineCloudPcAvailability", n => { FrontlineCloudPcAvailability = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.FrontlineCloudPcAvailability>(); } },
                { "gracePeriodEndDateTime", n => { GracePeriodEndDateTime = n.GetDateTimeOffsetValue(); } },
                { "groupDetail", n => { GroupDetail = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcEntraGroupDetail>(global::Microsoft.Graph.Beta.Models.CloudPcEntraGroupDetail.CreateFromDiscriminatorValue); } },
                { "imageDisplayName", n => { ImageDisplayName = n.GetStringValue(); } },
                { "lastLoginResult", n => { LastLoginResult = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcLoginResult>(global::Microsoft.Graph.Beta.Models.CloudPcLoginResult.CreateFromDiscriminatorValue); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "lastRemoteActionResult", n => { LastRemoteActionResult = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcRemoteActionResult>(global::Microsoft.Graph.Beta.Models.CloudPcRemoteActionResult.CreateFromDiscriminatorValue); } },
                { "managedDeviceId", n => { ManagedDeviceId = n.GetStringValue(); } },
                { "managedDeviceName", n => { ManagedDeviceName = n.GetStringValue(); } },
                { "onPremisesConnectionName", n => { OnPremisesConnectionName = n.GetStringValue(); } },
                { "osVersion", n => { OsVersion = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcOperatingSystem>(); } },
                { "partnerAgentInstallResults", n => { PartnerAgentInstallResults = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CloudPcPartnerAgentInstallResult>(global::Microsoft.Graph.Beta.Models.CloudPcPartnerAgentInstallResult.CreateFromDiscriminatorValue)?.AsList(); } },
                { "powerState", n => { PowerState = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcPowerState>(); } },
                { "productType", n => { ProductType = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcProductType>(); } },
                { "provisionedDateTime", n => { ProvisionedDateTime = n.GetDateTimeOffsetValue(); } },
                { "provisioningPolicyId", n => { ProvisioningPolicyId = n.GetStringValue(); } },
                { "provisioningPolicyName", n => { ProvisioningPolicyName = n.GetStringValue(); } },
                { "provisioningType", n => { ProvisioningType = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcProvisioningType>(); } },
                { "scopeIds", n => { ScopeIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "servicePlanId", n => { ServicePlanId = n.GetStringValue(); } },
                { "servicePlanName", n => { ServicePlanName = n.GetStringValue(); } },
                { "servicePlanType", n => { ServicePlanType = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcServicePlanType>(); } },
                { "sharedDeviceDetail", n => { SharedDeviceDetail = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcFrontlineSharedDeviceDetail>(global::Microsoft.Graph.Beta.Models.CloudPcFrontlineSharedDeviceDetail.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcStatus>(); } },
                { "statusDetail", n => { StatusDetail = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcStatusDetail>(global::Microsoft.Graph.Beta.Models.CloudPcStatusDetail.CreateFromDiscriminatorValue); } },
                { "statusDetails", n => { StatusDetails = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcStatusDetails>(global::Microsoft.Graph.Beta.Models.CloudPcStatusDetails.CreateFromDiscriminatorValue); } },
                { "userAccountType", n => { UserAccountType = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcUserAccountType>(); } },
                { "userDetail", n => { UserDetail = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcEntraUserDetail>(global::Microsoft.Graph.Beta.Models.CloudPcEntraUserDetail.CreateFromDiscriminatorValue); } },
                { "userExperienceType", n => { UserExperienceType = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcUserExperienceType>(); } },
                { "userPrincipalName", n => { UserPrincipalName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("aadDeviceId", AadDeviceId);
            writer.WriteStringValue("allotmentDisplayName", AllotmentDisplayName);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcConnectionSetting>("connectionSetting", ConnectionSetting);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcConnectionSettings>("connectionSettings", ConnectionSettings);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcConnectivityResult>("connectivityResult", ConnectivityResult);
            writer.WriteStringValue("deviceRegionName", DeviceRegionName);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcDisasterRecoveryCapability>("disasterRecoveryCapability", DisasterRecoveryCapability);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcDiskEncryptionState>("diskEncryptionState", DiskEncryptionState);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.FrontlineCloudPcAvailability>("frontlineCloudPcAvailability", FrontlineCloudPcAvailability);
            writer.WriteDateTimeOffsetValue("gracePeriodEndDateTime", GracePeriodEndDateTime);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcEntraGroupDetail>("groupDetail", GroupDetail);
            writer.WriteStringValue("imageDisplayName", ImageDisplayName);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcLoginResult>("lastLoginResult", LastLoginResult);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcRemoteActionResult>("lastRemoteActionResult", LastRemoteActionResult);
            writer.WriteStringValue("managedDeviceId", ManagedDeviceId);
            writer.WriteStringValue("managedDeviceName", ManagedDeviceName);
            writer.WriteStringValue("onPremisesConnectionName", OnPremisesConnectionName);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcOperatingSystem>("osVersion", OsVersion);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CloudPcPartnerAgentInstallResult>("partnerAgentInstallResults", PartnerAgentInstallResults);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcPowerState>("powerState", PowerState);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcProductType>("productType", ProductType);
            writer.WriteDateTimeOffsetValue("provisionedDateTime", ProvisionedDateTime);
            writer.WriteStringValue("provisioningPolicyId", ProvisioningPolicyId);
            writer.WriteStringValue("provisioningPolicyName", ProvisioningPolicyName);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcProvisioningType>("provisioningType", ProvisioningType);
            writer.WriteCollectionOfPrimitiveValues<string>("scopeIds", ScopeIds);
            writer.WriteStringValue("servicePlanId", ServicePlanId);
            writer.WriteStringValue("servicePlanName", ServicePlanName);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcServicePlanType>("servicePlanType", ServicePlanType);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcFrontlineSharedDeviceDetail>("sharedDeviceDetail", SharedDeviceDetail);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcStatus>("status", Status);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcStatusDetail>("statusDetail", StatusDetail);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcStatusDetails>("statusDetails", StatusDetails);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcUserAccountType>("userAccountType", UserAccountType);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcEntraUserDetail>("userDetail", UserDetail);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcUserExperienceType>("userExperienceType", UserExperienceType);
            writer.WriteStringValue("userPrincipalName", UserPrincipalName);
        }
    }
}
#pragma warning restore CS0618
