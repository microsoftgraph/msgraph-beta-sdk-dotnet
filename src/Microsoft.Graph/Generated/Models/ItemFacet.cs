// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models
{
    #pragma warning disable CS1591
    public class ItemFacet : Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The audiences that are able to see the values contained within the associated entity. Possible values are: me, family, contacts, groupMembers, organization, federatedOrganizations, everyone, unknownFutureValue.</summary>
        public Microsoft.Graph.Beta.Models.AllowedAudiences? AllowedAudiences
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.AllowedAudiences?>("allowedAudiences"); }
            set { BackingStore?.Set("allowedAudiences", value); }
        }
        /// <summary>The createdBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.IdentitySet? CreatedBy
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.IdentitySet?>("createdBy"); }
            set { BackingStore?.Set("createdBy", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.IdentitySet CreatedBy
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.IdentitySet>("createdBy"); }
            set { BackingStore?.Set("createdBy", value); }
        }
#endif
        /// <summary>Provides the dateTimeOffset for when the entity was created.</summary>
        public DateTimeOffset? CreatedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("createdDateTime"); }
            set { BackingStore?.Set("createdDateTime", value); }
        }
        /// <summary>Contains inference detail if the entity is inferred by the creating or modifying application.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.InferenceData? Inference
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.InferenceData?>("inference"); }
            set { BackingStore?.Set("inference", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.InferenceData Inference
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.InferenceData>("inference"); }
            set { BackingStore?.Set("inference", value); }
        }
#endif
        /// <summary>The isSearchable property</summary>
        public bool? IsSearchable
        {
            get { return BackingStore?.Get<bool?>("isSearchable"); }
            set { BackingStore?.Set("isSearchable", value); }
        }
        /// <summary>The lastModifiedBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.IdentitySet? LastModifiedBy
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.IdentitySet?>("lastModifiedBy"); }
            set { BackingStore?.Set("lastModifiedBy", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.IdentitySet LastModifiedBy
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.IdentitySet>("lastModifiedBy"); }
            set { BackingStore?.Set("lastModifiedBy", value); }
        }
#endif
        /// <summary>Provides the dateTimeOffset for when the entity was created.</summary>
        public DateTimeOffset? LastModifiedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastModifiedDateTime"); }
            set { BackingStore?.Set("lastModifiedDateTime", value); }
        }
        /// <summary>Where the values within an entity originated if synced from another service.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.PersonDataSources? Source
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.PersonDataSources?>("source"); }
            set { BackingStore?.Set("source", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.PersonDataSources Source
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.PersonDataSources>("source"); }
            set { BackingStore?.Set("source", value); }
        }
#endif
        /// <summary>Where the values within an entity originated if synced from another source.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ProfileSourceAnnotation>? Sources
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ProfileSourceAnnotation>?>("sources"); }
            set { BackingStore?.Set("sources", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ProfileSourceAnnotation> Sources
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ProfileSourceAnnotation>>("sources"); }
            set { BackingStore?.Set("sources", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.ItemFacet"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.ItemFacet CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.educationalActivity" => new Microsoft.Graph.Beta.Models.EducationalActivity(),
                "#microsoft.graph.itemAddress" => new Microsoft.Graph.Beta.Models.ItemAddress(),
                "#microsoft.graph.itemEmail" => new Microsoft.Graph.Beta.Models.ItemEmail(),
                "#microsoft.graph.itemPatent" => new Microsoft.Graph.Beta.Models.ItemPatent(),
                "#microsoft.graph.itemPhone" => new Microsoft.Graph.Beta.Models.ItemPhone(),
                "#microsoft.graph.itemPublication" => new Microsoft.Graph.Beta.Models.ItemPublication(),
                "#microsoft.graph.languageProficiency" => new Microsoft.Graph.Beta.Models.LanguageProficiency(),
                "#microsoft.graph.personAnnotation" => new Microsoft.Graph.Beta.Models.PersonAnnotation(),
                "#microsoft.graph.personAnnualEvent" => new Microsoft.Graph.Beta.Models.PersonAnnualEvent(),
                "#microsoft.graph.personAward" => new Microsoft.Graph.Beta.Models.PersonAward(),
                "#microsoft.graph.personCertification" => new Microsoft.Graph.Beta.Models.PersonCertification(),
                "#microsoft.graph.personInterest" => new Microsoft.Graph.Beta.Models.PersonInterest(),
                "#microsoft.graph.personName" => new Microsoft.Graph.Beta.Models.PersonName(),
                "#microsoft.graph.personResponsibility" => new Microsoft.Graph.Beta.Models.PersonResponsibility(),
                "#microsoft.graph.personWebsite" => new Microsoft.Graph.Beta.Models.PersonWebsite(),
                "#microsoft.graph.projectParticipation" => new Microsoft.Graph.Beta.Models.ProjectParticipation(),
                "#microsoft.graph.skillProficiency" => new Microsoft.Graph.Beta.Models.SkillProficiency(),
                "#microsoft.graph.userAccountInformation" => new Microsoft.Graph.Beta.Models.UserAccountInformation(),
                "#microsoft.graph.webAccount" => new Microsoft.Graph.Beta.Models.WebAccount(),
                "#microsoft.graph.workPosition" => new Microsoft.Graph.Beta.Models.WorkPosition(),
                _ => new Microsoft.Graph.Beta.Models.ItemFacet(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "allowedAudiences", n => { AllowedAudiences = n.GetEnumValue<Microsoft.Graph.Beta.Models.AllowedAudiences>(); } },
                { "createdBy", n => { CreatedBy = n.GetObjectValue<Microsoft.Graph.Beta.Models.IdentitySet>(Microsoft.Graph.Beta.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "inference", n => { Inference = n.GetObjectValue<Microsoft.Graph.Beta.Models.InferenceData>(Microsoft.Graph.Beta.Models.InferenceData.CreateFromDiscriminatorValue); } },
                { "isSearchable", n => { IsSearchable = n.GetBoolValue(); } },
                { "lastModifiedBy", n => { LastModifiedBy = n.GetObjectValue<Microsoft.Graph.Beta.Models.IdentitySet>(Microsoft.Graph.Beta.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "source", n => { Source = n.GetObjectValue<Microsoft.Graph.Beta.Models.PersonDataSources>(Microsoft.Graph.Beta.Models.PersonDataSources.CreateFromDiscriminatorValue); } },
                { "sources", n => { Sources = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ProfileSourceAnnotation>(Microsoft.Graph.Beta.Models.ProfileSourceAnnotation.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<Microsoft.Graph.Beta.Models.AllowedAudiences>("allowedAudiences", AllowedAudiences);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.IdentitySet>("createdBy", CreatedBy);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.InferenceData>("inference", Inference);
            writer.WriteBoolValue("isSearchable", IsSearchable);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.IdentitySet>("lastModifiedBy", LastModifiedBy);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.PersonDataSources>("source", Source);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ProfileSourceAnnotation>("sources", Sources);
        }
    }
}
