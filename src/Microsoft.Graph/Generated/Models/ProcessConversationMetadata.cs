// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProcessConversationMetadata : global::Microsoft.Graph.Beta.Models.ProcessContentMetadataBase, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>List of resources (for example, file URLs, web URLs) accessed during the generation of this message (relevant for bot interactions).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AccessedResources
        {
            get { return BackingStore?.Get<List<string>?>("accessedResources"); }
            set { BackingStore?.Set("accessedResources", value); }
        }
#nullable restore
#else
        public List<string> AccessedResources
        {
            get { return BackingStore?.Get<List<string>>("accessedResources"); }
            set { BackingStore?.Set("accessedResources", value); }
        }
#endif
        /// <summary>Identifier of the parent message in a threaded conversation, if applicable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ParentMessageId
        {
            get { return BackingStore?.Get<string?>("parentMessageId"); }
            set { BackingStore?.Set("parentMessageId", value); }
        }
#nullable restore
#else
        public string ParentMessageId
        {
            get { return BackingStore?.Get<string>("parentMessageId"); }
            set { BackingStore?.Set("parentMessageId", value); }
        }
#endif
        /// <summary>List of plugins used during the generation of this message (relevant for AI/bot interactions).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.AiInteractionPlugin>? Plugins
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AiInteractionPlugin>?>("plugins"); }
            set { BackingStore?.Set("plugins", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.AiInteractionPlugin> Plugins
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AiInteractionPlugin>>("plugins"); }
            set { BackingStore?.Set("plugins", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.ProcessConversationMetadata"/> and sets the default values.
        /// </summary>
        public ProcessConversationMetadata() : base()
        {
            OdataType = "#microsoft.graph.processConversationMetadata";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.ProcessConversationMetadata"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.ProcessConversationMetadata CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.ProcessConversationMetadata();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "accessedResources", n => { AccessedResources = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "parentMessageId", n => { ParentMessageId = n.GetStringValue(); } },
                { "plugins", n => { Plugins = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AiInteractionPlugin>(global::Microsoft.Graph.Beta.Models.AiInteractionPlugin.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfPrimitiveValues<string>("accessedResources", AccessedResources);
            writer.WriteStringValue("parentMessageId", ParentMessageId);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AiInteractionPlugin>("plugins", Plugins);
        }
    }
}
#pragma warning restore CS0618
