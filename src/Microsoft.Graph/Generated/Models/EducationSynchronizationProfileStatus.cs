// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class EducationSynchronizationProfileStatus : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Number of errors during synchronization.</summary>
        public long? ErrorCount
        {
            get { return BackingStore?.Get<long?>("errorCount"); }
            set { BackingStore?.Set("errorCount", value); }
        }
        /// <summary>Date and time when most recent changes were observed in the profile.</summary>
        public DateTimeOffset? LastActivityDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastActivityDateTime"); }
            set { BackingStore?.Set("lastActivityDateTime", value); }
        }
        /// <summary>Date and time of the most recent successful synchronization.</summary>
        public DateTimeOffset? LastSynchronizationDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastSynchronizationDateTime"); }
            set { BackingStore?.Set("lastSynchronizationDateTime", value); }
        }
        /// <summary>The status of a sync. The possible values are: paused, inProgress, success, error, validationError, quarantined, unknownFutureValue, extracting, validating. Note that you must use the Prefer: include-unknown-enum-members request header to get the following values in this evolvable enum: extracting, validating.</summary>
        public global::Microsoft.Graph.Beta.Models.EducationSynchronizationStatus? Status
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EducationSynchronizationStatus?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
        /// <summary>Status message for the synchronization stage of the current profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatusMessage
        {
            get { return BackingStore?.Get<string?>("statusMessage"); }
            set { BackingStore?.Set("statusMessage", value); }
        }
#nullable restore
#else
        public string StatusMessage
        {
            get { return BackingStore?.Get<string>("statusMessage"); }
            set { BackingStore?.Set("statusMessage", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.EducationSynchronizationProfileStatus"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.EducationSynchronizationProfileStatus CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.EducationSynchronizationProfileStatus();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "errorCount", n => { ErrorCount = n.GetLongValue(); } },
                { "lastActivityDateTime", n => { LastActivityDateTime = n.GetDateTimeOffsetValue(); } },
                { "lastSynchronizationDateTime", n => { LastSynchronizationDateTime = n.GetDateTimeOffsetValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.EducationSynchronizationStatus>(); } },
                { "statusMessage", n => { StatusMessage = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteLongValue("errorCount", ErrorCount);
            writer.WriteDateTimeOffsetValue("lastActivityDateTime", LastActivityDateTime);
            writer.WriteDateTimeOffsetValue("lastSynchronizationDateTime", LastSynchronizationDateTime);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.EducationSynchronizationStatus>("status", Status);
            writer.WriteStringValue("statusMessage", StatusMessage);
        }
    }
}
#pragma warning restore CS0618
