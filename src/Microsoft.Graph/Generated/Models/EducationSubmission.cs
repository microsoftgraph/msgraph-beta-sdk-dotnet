// <auto-generated/>
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.17.0")]
    #pragma warning disable CS1591
    public partial class EducationSubmission : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The excusedBy property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.IdentitySet? ExcusedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet?>("excusedBy"); }
            set { BackingStore?.Set("excusedBy", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.IdentitySet ExcusedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet>("excusedBy"); }
            set { BackingStore?.Set("excusedBy", value); }
        }
#endif
        /// <summary>The excusedDateTime property</summary>
        public DateTimeOffset? ExcusedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("excusedDateTime"); }
            set { BackingStore?.Set("excusedDateTime", value); }
        }
        /// <summary>The outcomes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.EducationOutcome>? Outcomes
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.EducationOutcome>?>("outcomes"); }
            set { BackingStore?.Set("outcomes", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.EducationOutcome> Outcomes
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.EducationOutcome>>("outcomes"); }
            set { BackingStore?.Set("outcomes", value); }
        }
#endif
        /// <summary>User who moved the status of this submission to reassigned.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.IdentitySet? ReassignedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet?>("reassignedBy"); }
            set { BackingStore?.Set("reassignedBy", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.IdentitySet ReassignedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet>("reassignedBy"); }
            set { BackingStore?.Set("reassignedBy", value); }
        }
#endif
        /// <summary>Moment in time when the submission was reassigned. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? ReassignedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("reassignedDateTime"); }
            set { BackingStore?.Set("reassignedDateTime", value); }
        }
        /// <summary>Who this submission is assigned to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.EducationSubmissionRecipient? Recipient
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EducationSubmissionRecipient?>("recipient"); }
            set { BackingStore?.Set("recipient", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.EducationSubmissionRecipient Recipient
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EducationSubmissionRecipient>("recipient"); }
            set { BackingStore?.Set("recipient", value); }
        }
#endif
        /// <summary>The resources property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.EducationSubmissionResource>? Resources
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.EducationSubmissionResource>?>("resources"); }
            set { BackingStore?.Set("resources", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.EducationSubmissionResource> Resources
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.EducationSubmissionResource>>("resources"); }
            set { BackingStore?.Set("resources", value); }
        }
#endif
        /// <summary>Folder where all file resources for this submission need to be stored.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResourcesFolderUrl
        {
            get { return BackingStore?.Get<string?>("resourcesFolderUrl"); }
            set { BackingStore?.Set("resourcesFolderUrl", value); }
        }
#nullable restore
#else
        public string ResourcesFolderUrl
        {
            get { return BackingStore?.Get<string>("resourcesFolderUrl"); }
            set { BackingStore?.Set("resourcesFolderUrl", value); }
        }
#endif
        /// <summary>User who moved the status of this submission to returned.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.IdentitySet? ReturnedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet?>("returnedBy"); }
            set { BackingStore?.Set("returnedBy", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.IdentitySet ReturnedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet>("returnedBy"); }
            set { BackingStore?.Set("returnedBy", value); }
        }
#endif
        /// <summary>Moment in time when the submission was returned. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? ReturnedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("returnedDateTime"); }
            set { BackingStore?.Set("returnedDateTime", value); }
        }
        /// <summary>Read-only. Possible values are: working, submitted, returned, unknownFutureValue, reassigned, and excused. Note that you must use the Prefer: include-unknown-enum-members request header to get the following values in this evolvable enum: reassigned, and excused.</summary>
        public global::Microsoft.Graph.Beta.Models.EducationSubmissionStatus? Status
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EducationSubmissionStatus?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
        /// <summary>User who moved the resource into the submitted state.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.IdentitySet? SubmittedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet?>("submittedBy"); }
            set { BackingStore?.Set("submittedBy", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.IdentitySet SubmittedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet>("submittedBy"); }
            set { BackingStore?.Set("submittedBy", value); }
        }
#endif
        /// <summary>Moment in time when the submission was moved into the submitted state. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? SubmittedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("submittedDateTime"); }
            set { BackingStore?.Set("submittedDateTime", value); }
        }
        /// <summary>The submittedResources property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.EducationSubmissionResource>? SubmittedResources
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.EducationSubmissionResource>?>("submittedResources"); }
            set { BackingStore?.Set("submittedResources", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.EducationSubmissionResource> SubmittedResources
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.EducationSubmissionResource>>("submittedResources"); }
            set { BackingStore?.Set("submittedResources", value); }
        }
#endif
        /// <summary>User who moved the resource from submitted into the working state.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.IdentitySet? UnsubmittedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet?>("unsubmittedBy"); }
            set { BackingStore?.Set("unsubmittedBy", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.IdentitySet UnsubmittedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet>("unsubmittedBy"); }
            set { BackingStore?.Set("unsubmittedBy", value); }
        }
#endif
        /// <summary>Moment in time when the submission was moved from submitted into the working state. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? UnsubmittedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("unsubmittedDateTime"); }
            set { BackingStore?.Set("unsubmittedDateTime", value); }
        }
        /// <summary>The deep link URL for the given submission.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebUrl
        {
            get { return BackingStore?.Get<string?>("webUrl"); }
            set { BackingStore?.Set("webUrl", value); }
        }
#nullable restore
#else
        public string WebUrl
        {
            get { return BackingStore?.Get<string>("webUrl"); }
            set { BackingStore?.Set("webUrl", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.EducationSubmission"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.EducationSubmission CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.EducationSubmission();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "excusedBy", n => { ExcusedBy = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.IdentitySet>(global::Microsoft.Graph.Beta.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "excusedDateTime", n => { ExcusedDateTime = n.GetDateTimeOffsetValue(); } },
                { "outcomes", n => { Outcomes = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.EducationOutcome>(global::Microsoft.Graph.Beta.Models.EducationOutcome.CreateFromDiscriminatorValue)?.AsList(); } },
                { "reassignedBy", n => { ReassignedBy = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.IdentitySet>(global::Microsoft.Graph.Beta.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "reassignedDateTime", n => { ReassignedDateTime = n.GetDateTimeOffsetValue(); } },
                { "recipient", n => { Recipient = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.EducationSubmissionRecipient>(global::Microsoft.Graph.Beta.Models.EducationSubmissionRecipient.CreateFromDiscriminatorValue); } },
                { "resources", n => { Resources = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.EducationSubmissionResource>(global::Microsoft.Graph.Beta.Models.EducationSubmissionResource.CreateFromDiscriminatorValue)?.AsList(); } },
                { "resourcesFolderUrl", n => { ResourcesFolderUrl = n.GetStringValue(); } },
                { "returnedBy", n => { ReturnedBy = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.IdentitySet>(global::Microsoft.Graph.Beta.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "returnedDateTime", n => { ReturnedDateTime = n.GetDateTimeOffsetValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.EducationSubmissionStatus>(); } },
                { "submittedBy", n => { SubmittedBy = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.IdentitySet>(global::Microsoft.Graph.Beta.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "submittedDateTime", n => { SubmittedDateTime = n.GetDateTimeOffsetValue(); } },
                { "submittedResources", n => { SubmittedResources = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.EducationSubmissionResource>(global::Microsoft.Graph.Beta.Models.EducationSubmissionResource.CreateFromDiscriminatorValue)?.AsList(); } },
                { "unsubmittedBy", n => { UnsubmittedBy = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.IdentitySet>(global::Microsoft.Graph.Beta.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "unsubmittedDateTime", n => { UnsubmittedDateTime = n.GetDateTimeOffsetValue(); } },
                { "webUrl", n => { WebUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.EducationOutcome>("outcomes", Outcomes);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.EducationSubmissionRecipient>("recipient", Recipient);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.EducationSubmissionResource>("resources", Resources);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.EducationSubmissionResource>("submittedResources", SubmittedResources);
        }
    }
}
