// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models {
    public class CloudPcDisasterRecoveryMicrosoftHostedNetworkSetting : CloudPcDisasterRecoveryNetworkSetting, IParsable {
        /// <summary>The regionGroup property</summary>
        public CloudPcRegionGroup? RegionGroup {
            get { return BackingStore?.Get<CloudPcRegionGroup?>("regionGroup"); }
            set { BackingStore?.Set("regionGroup", value); }
        }
        /// <summary>The regionName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RegionName {
            get { return BackingStore?.Get<string?>("regionName"); }
            set { BackingStore?.Set("regionName", value); }
        }
#nullable restore
#else
        public string RegionName {
            get { return BackingStore?.Get<string>("regionName"); }
            set { BackingStore?.Set("regionName", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new cloudPcDisasterRecoveryMicrosoftHostedNetworkSetting and sets the default values.
        /// </summary>
        public CloudPcDisasterRecoveryMicrosoftHostedNetworkSetting() : base() {
            OdataType = "#microsoft.graph.cloudPcDisasterRecoveryMicrosoftHostedNetworkSetting";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new CloudPcDisasterRecoveryMicrosoftHostedNetworkSetting CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new CloudPcDisasterRecoveryMicrosoftHostedNetworkSetting();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers()) {
                {"regionGroup", n => { RegionGroup = n.GetEnumValue<CloudPcRegionGroup>(); } },
                {"regionName", n => { RegionName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<CloudPcRegionGroup>("regionGroup", RegionGroup);
            writer.WriteStringValue("regionName", RegionName);
        }
    }
}
