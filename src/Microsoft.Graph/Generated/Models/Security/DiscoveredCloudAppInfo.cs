// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models.Security
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class DiscoveredCloudAppInfo : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The csaStarLevel property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.AppInfoCsaStarLevel? CsaStarLevel
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.AppInfoCsaStarLevel?>("csaStarLevel"); }
            set { BackingStore?.Set("csaStarLevel", value); }
        }
        /// <summary>The dataAtRestEncryptionMethod property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.AppInfoDataAtRestEncryptionMethod? DataAtRestEncryptionMethod
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.AppInfoDataAtRestEncryptionMethod?>("dataAtRestEncryptionMethod"); }
            set { BackingStore?.Set("dataAtRestEncryptionMethod", value); }
        }
        /// <summary>Indicates the countries or regions in which your data center resides.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DataCenter
        {
            get { return BackingStore?.Get<string?>("dataCenter"); }
            set { BackingStore?.Set("dataCenter", value); }
        }
#nullable restore
#else
        public string DataCenter
        {
            get { return BackingStore?.Get<string>("dataCenter"); }
            set { BackingStore?.Set("dataCenter", value); }
        }
#endif
        /// <summary>The dataRetentionPolicy property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.AppInfoDataRetentionPolicy? DataRetentionPolicy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.AppInfoDataRetentionPolicy?>("dataRetentionPolicy"); }
            set { BackingStore?.Set("dataRetentionPolicy", value); }
        }
        /// <summary>Indicates the data types that an end user can upload to the app. The possible values are: documents, mediaFiles, codingFiles, creditCards, databaseFiles, none, unknown, unknownFutureValue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Security.AppInfoUploadedDataTypes?>? DataTypes
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Security.AppInfoUploadedDataTypes?>?>("dataTypes"); }
            set { BackingStore?.Set("dataTypes", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Security.AppInfoUploadedDataTypes?> DataTypes
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Security.AppInfoUploadedDataTypes?>>("dataTypes"); }
            set { BackingStore?.Set("dataTypes", value); }
        }
#endif
        /// <summary>Indicates the date when the app domain was registered.</summary>
        public DateTimeOffset? DomainRegistrationDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("domainRegistrationDateTime"); }
            set { BackingStore?.Set("domainRegistrationDateTime", value); }
        }
        /// <summary>The encryptionProtocol property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.AppInfoEncryptionProtocol? EncryptionProtocol
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.AppInfoEncryptionProtocol?>("encryptionProtocol"); }
            set { BackingStore?.Set("encryptionProtocol", value); }
        }
        /// <summary>The fedRampLevel property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.AppInfoFedRampLevel? FedRampLevel
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.AppInfoFedRampLevel?>("fedRampLevel"); }
            set { BackingStore?.Set("fedRampLevel", value); }
        }
        /// <summary>Indicates the year that the specific app vendor was established.</summary>
        public int? Founded
        {
            get { return BackingStore?.Get<int?>("founded"); }
            set { BackingStore?.Set("founded", value); }
        }
        /// <summary>Indicates the GDPR readiness of the app in relation to policies app provides to safeguard personal user data.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GdprReadinessStatement
        {
            get { return BackingStore?.Get<string?>("gdprReadinessStatement"); }
            set { BackingStore?.Set("gdprReadinessStatement", value); }
        }
#nullable restore
#else
        public string GdprReadinessStatement
        {
            get { return BackingStore?.Get<string>("gdprReadinessStatement"); }
            set { BackingStore?.Set("gdprReadinessStatement", value); }
        }
#endif
        /// <summary>Indicates the location of the headquarters of the app.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Headquarters
        {
            get { return BackingStore?.Get<string?>("headquarters"); }
            set { BackingStore?.Set("headquarters", value); }
        }
#nullable restore
#else
        public string Headquarters
        {
            get { return BackingStore?.Get<string>("headquarters"); }
            set { BackingStore?.Set("headquarters", value); }
        }
#endif
        /// <summary>The holding property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.AppInfoHolding? Holding
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.AppInfoHolding?>("holding"); }
            set { BackingStore?.Set("holding", value); }
        }
        /// <summary>Indicates the company name that provides hosting services for the app.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HostingCompany
        {
            get { return BackingStore?.Get<string?>("hostingCompany"); }
            set { BackingStore?.Set("hostingCompany", value); }
        }
#nullable restore
#else
        public string HostingCompany
        {
            get { return BackingStore?.Get<string>("hostingCompany"); }
            set { BackingStore?.Set("hostingCompany", value); }
        }
#endif
        /// <summary>The isAdminAuditTrail property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsAdminAuditTrail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isAdminAuditTrail"); }
            set { BackingStore?.Set("isAdminAuditTrail", value); }
        }
        /// <summary>The isCobitCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsCobitCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isCobitCompliant"); }
            set { BackingStore?.Set("isCobitCompliant", value); }
        }
        /// <summary>The isCoppaCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsCoppaCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isCoppaCompliant"); }
            set { BackingStore?.Set("isCoppaCompliant", value); }
        }
        /// <summary>The isDataAuditTrail property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsDataAuditTrail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isDataAuditTrail"); }
            set { BackingStore?.Set("isDataAuditTrail", value); }
        }
        /// <summary>The isDataClassification property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsDataClassification
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isDataClassification"); }
            set { BackingStore?.Set("isDataClassification", value); }
        }
        /// <summary>The isDataOwnership property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsDataOwnership
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isDataOwnership"); }
            set { BackingStore?.Set("isDataOwnership", value); }
        }
        /// <summary>The isDisasterRecoveryPlan property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsDisasterRecoveryPlan
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isDisasterRecoveryPlan"); }
            set { BackingStore?.Set("isDisasterRecoveryPlan", value); }
        }
        /// <summary>The isDmca property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsDmca
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isDmca"); }
            set { BackingStore?.Set("isDmca", value); }
        }
        /// <summary>The isFerpaCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsFerpaCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isFerpaCompliant"); }
            set { BackingStore?.Set("isFerpaCompliant", value); }
        }
        /// <summary>The isFfiecCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsFfiecCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isFfiecCompliant"); }
            set { BackingStore?.Set("isFfiecCompliant", value); }
        }
        /// <summary>The isFileSharing property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsFileSharing
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isFileSharing"); }
            set { BackingStore?.Set("isFileSharing", value); }
        }
        /// <summary>The isFinraCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsFinraCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isFinraCompliant"); }
            set { BackingStore?.Set("isFinraCompliant", value); }
        }
        /// <summary>The isFismaCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsFismaCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isFismaCompliant"); }
            set { BackingStore?.Set("isFismaCompliant", value); }
        }
        /// <summary>The isGaapCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGaapCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGaapCompliant"); }
            set { BackingStore?.Set("isGaapCompliant", value); }
        }
        /// <summary>The isGdprDataProtectionImpactAssessment property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprDataProtectionImpactAssessment
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprDataProtectionImpactAssessment"); }
            set { BackingStore?.Set("isGdprDataProtectionImpactAssessment", value); }
        }
        /// <summary>The isGdprDataProtectionOfficer property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprDataProtectionOfficer
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprDataProtectionOfficer"); }
            set { BackingStore?.Set("isGdprDataProtectionOfficer", value); }
        }
        /// <summary>The isGdprDataProtectionSecureCrossBorderDataTransfer property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprDataProtectionSecureCrossBorderDataTransfer
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprDataProtectionSecureCrossBorderDataTransfer"); }
            set { BackingStore?.Set("isGdprDataProtectionSecureCrossBorderDataTransfer", value); }
        }
        /// <summary>The isGdprImpactAssessment property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprImpactAssessment
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprImpactAssessment"); }
            set { BackingStore?.Set("isGdprImpactAssessment", value); }
        }
        /// <summary>The isGdprLawfulBasisForProcessing property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprLawfulBasisForProcessing
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprLawfulBasisForProcessing"); }
            set { BackingStore?.Set("isGdprLawfulBasisForProcessing", value); }
        }
        /// <summary>The isGdprReportDataBreaches property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprReportDataBreaches
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprReportDataBreaches"); }
            set { BackingStore?.Set("isGdprReportDataBreaches", value); }
        }
        /// <summary>The isGdprRightsRelatedToAutomatedDecisionMaking property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprRightsRelatedToAutomatedDecisionMaking
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprRightsRelatedToAutomatedDecisionMaking"); }
            set { BackingStore?.Set("isGdprRightsRelatedToAutomatedDecisionMaking", value); }
        }
        /// <summary>The isGdprRightToAccess property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprRightToAccess
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprRightToAccess"); }
            set { BackingStore?.Set("isGdprRightToAccess", value); }
        }
        /// <summary>The isGdprRightToBeInformed property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprRightToBeInformed
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprRightToBeInformed"); }
            set { BackingStore?.Set("isGdprRightToBeInformed", value); }
        }
        /// <summary>The isGdprRightToDataPortablility property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprRightToDataPortablility
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprRightToDataPortablility"); }
            set { BackingStore?.Set("isGdprRightToDataPortablility", value); }
        }
        /// <summary>The isGdprRightToErasure property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprRightToErasure
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprRightToErasure"); }
            set { BackingStore?.Set("isGdprRightToErasure", value); }
        }
        /// <summary>The isGdprRightToObject property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprRightToObject
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprRightToObject"); }
            set { BackingStore?.Set("isGdprRightToObject", value); }
        }
        /// <summary>The isGdprRightToRectification property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprRightToRectification
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprRightToRectification"); }
            set { BackingStore?.Set("isGdprRightToRectification", value); }
        }
        /// <summary>The isGdprRightToRestrictionOfProcessing property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprRightToRestrictionOfProcessing
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprRightToRestrictionOfProcessing"); }
            set { BackingStore?.Set("isGdprRightToRestrictionOfProcessing", value); }
        }
        /// <summary>The isGdprSecureCrossBorderDataControl property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGdprSecureCrossBorderDataControl
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGdprSecureCrossBorderDataControl"); }
            set { BackingStore?.Set("isGdprSecureCrossBorderDataControl", value); }
        }
        /// <summary>The isGlbaCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsGlbaCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isGlbaCompliant"); }
            set { BackingStore?.Set("isGlbaCompliant", value); }
        }
        /// <summary>The isHipaaCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsHipaaCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isHipaaCompliant"); }
            set { BackingStore?.Set("isHipaaCompliant", value); }
        }
        /// <summary>The isHitrustCsfCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsHitrustCsfCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isHitrustCsfCompliant"); }
            set { BackingStore?.Set("isHitrustCsfCompliant", value); }
        }
        /// <summary>The isHttpSecurityHeadersContentSecurityPolicy property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsHttpSecurityHeadersContentSecurityPolicy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isHttpSecurityHeadersContentSecurityPolicy"); }
            set { BackingStore?.Set("isHttpSecurityHeadersContentSecurityPolicy", value); }
        }
        /// <summary>The isHttpSecurityHeadersStrictTransportSecurity property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsHttpSecurityHeadersStrictTransportSecurity
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isHttpSecurityHeadersStrictTransportSecurity"); }
            set { BackingStore?.Set("isHttpSecurityHeadersStrictTransportSecurity", value); }
        }
        /// <summary>The isHttpSecurityHeadersXContentTypeOptions property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsHttpSecurityHeadersXContentTypeOptions
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isHttpSecurityHeadersXContentTypeOptions"); }
            set { BackingStore?.Set("isHttpSecurityHeadersXContentTypeOptions", value); }
        }
        /// <summary>The isHttpSecurityHeadersXFrameOptions property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsHttpSecurityHeadersXFrameOptions
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isHttpSecurityHeadersXFrameOptions"); }
            set { BackingStore?.Set("isHttpSecurityHeadersXFrameOptions", value); }
        }
        /// <summary>The isHttpSecurityHeadersXXssProtection property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsHttpSecurityHeadersXXssProtection
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isHttpSecurityHeadersXXssProtection"); }
            set { BackingStore?.Set("isHttpSecurityHeadersXXssProtection", value); }
        }
        /// <summary>The isIpAddressRestriction property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsIpAddressRestriction
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isIpAddressRestriction"); }
            set { BackingStore?.Set("isIpAddressRestriction", value); }
        }
        /// <summary>The isIsae3402Compliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsIsae3402Compliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isIsae3402Compliant"); }
            set { BackingStore?.Set("isIsae3402Compliant", value); }
        }
        /// <summary>The isIso27001Compliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsIso27001Compliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isIso27001Compliant"); }
            set { BackingStore?.Set("isIso27001Compliant", value); }
        }
        /// <summary>The isIso27017Compliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsIso27017Compliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isIso27017Compliant"); }
            set { BackingStore?.Set("isIso27017Compliant", value); }
        }
        /// <summary>The isIso27018Compliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsIso27018Compliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isIso27018Compliant"); }
            set { BackingStore?.Set("isIso27018Compliant", value); }
        }
        /// <summary>The isItarCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsItarCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isItarCompliant"); }
            set { BackingStore?.Set("isItarCompliant", value); }
        }
        /// <summary>The isMultiFactorAuthentication property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsMultiFactorAuthentication
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isMultiFactorAuthentication"); }
            set { BackingStore?.Set("isMultiFactorAuthentication", value); }
        }
        /// <summary>The isPasswordPolicy property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsPasswordPolicy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isPasswordPolicy"); }
            set { BackingStore?.Set("isPasswordPolicy", value); }
        }
        /// <summary>The isPasswordPolicyChangePasswordPeriod property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsPasswordPolicyChangePasswordPeriod
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isPasswordPolicyChangePasswordPeriod"); }
            set { BackingStore?.Set("isPasswordPolicyChangePasswordPeriod", value); }
        }
        /// <summary>The isPasswordPolicyCharacterCombination property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsPasswordPolicyCharacterCombination
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isPasswordPolicyCharacterCombination"); }
            set { BackingStore?.Set("isPasswordPolicyCharacterCombination", value); }
        }
        /// <summary>The isPasswordPolicyPasswordHistoryAndReuse property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsPasswordPolicyPasswordHistoryAndReuse
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isPasswordPolicyPasswordHistoryAndReuse"); }
            set { BackingStore?.Set("isPasswordPolicyPasswordHistoryAndReuse", value); }
        }
        /// <summary>The isPasswordPolicyPasswordLengthLimit property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsPasswordPolicyPasswordLengthLimit
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isPasswordPolicyPasswordLengthLimit"); }
            set { BackingStore?.Set("isPasswordPolicyPasswordLengthLimit", value); }
        }
        /// <summary>The isPasswordPolicyPersonalInformationUse property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsPasswordPolicyPersonalInformationUse
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isPasswordPolicyPersonalInformationUse"); }
            set { BackingStore?.Set("isPasswordPolicyPersonalInformationUse", value); }
        }
        /// <summary>The isPenetrationTesting property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsPenetrationTesting
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isPenetrationTesting"); }
            set { BackingStore?.Set("isPenetrationTesting", value); }
        }
        /// <summary>The isPrivacyShieldCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsPrivacyShieldCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isPrivacyShieldCompliant"); }
            set { BackingStore?.Set("isPrivacyShieldCompliant", value); }
        }
        /// <summary>The isRememberPassword property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsRememberPassword
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isRememberPassword"); }
            set { BackingStore?.Set("isRememberPassword", value); }
        }
        /// <summary>The isRequiresUserAuthentication property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsRequiresUserAuthentication
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isRequiresUserAuthentication"); }
            set { BackingStore?.Set("isRequiresUserAuthentication", value); }
        }
        /// <summary>The isSoc1Compliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsSoc1Compliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isSoc1Compliant"); }
            set { BackingStore?.Set("isSoc1Compliant", value); }
        }
        /// <summary>The isSoc2Compliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsSoc2Compliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isSoc2Compliant"); }
            set { BackingStore?.Set("isSoc2Compliant", value); }
        }
        /// <summary>The isSoc3Compliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsSoc3Compliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isSoc3Compliant"); }
            set { BackingStore?.Set("isSoc3Compliant", value); }
        }
        /// <summary>The isSoxCompliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsSoxCompliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isSoxCompliant"); }
            set { BackingStore?.Set("isSoxCompliant", value); }
        }
        /// <summary>The isSp80053Compliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsSp80053Compliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isSp80053Compliant"); }
            set { BackingStore?.Set("isSp80053Compliant", value); }
        }
        /// <summary>The isSsae16Compliant property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsSsae16Compliant
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isSsae16Compliant"); }
            set { BackingStore?.Set("isSsae16Compliant", value); }
        }
        /// <summary>The isSupportsSaml property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsSupportsSaml
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isSupportsSaml"); }
            set { BackingStore?.Set("isSupportsSaml", value); }
        }
        /// <summary>The isTrustedCertificate property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsTrustedCertificate
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isTrustedCertificate"); }
            set { BackingStore?.Set("isTrustedCertificate", value); }
        }
        /// <summary>The isUserAuditTrail property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsUserAuditTrail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isUserAuditTrail"); }
            set { BackingStore?.Set("isUserAuditTrail", value); }
        }
        /// <summary>The isUserCanUploadData property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsUserCanUploadData
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isUserCanUploadData"); }
            set { BackingStore?.Set("isUserCanUploadData", value); }
        }
        /// <summary>The isUserRolesSupport property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsUserRolesSupport
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isUserRolesSupport"); }
            set { BackingStore?.Set("isUserRolesSupport", value); }
        }
        /// <summary>The isValidCertificateName property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState? IsValidCertificateName
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState?>("isValidCertificateName"); }
            set { BackingStore?.Set("isValidCertificateName", value); }
        }
        /// <summary>Indicates the last date of the data breach for the company.</summary>
        public DateTimeOffset? LatestBreachDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("latestBreachDateTime"); }
            set { BackingStore?.Set("latestBreachDateTime", value); }
        }
        /// <summary>Indicates the URL that users can use to sign into the app.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? LogonUrls
        {
            get { return BackingStore?.Get<List<string>?>("logonUrls"); }
            set { BackingStore?.Set("logonUrls", value); }
        }
#nullable restore
#else
        public List<string> LogonUrls
        {
            get { return BackingStore?.Get<List<string>>("logonUrls"); }
            set { BackingStore?.Set("logonUrls", value); }
        }
#endif
        /// <summary>The pciDssVersion property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.AppInfoPciDssVersion? PciDssVersion
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.AppInfoPciDssVersion?>("pciDssVersion"); }
            set { BackingStore?.Set("pciDssVersion", value); }
        }
        /// <summary>Indicates the app vendor.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Vendor
        {
            get { return BackingStore?.Get<string?>("vendor"); }
            set { BackingStore?.Set("vendor", value); }
        }
#nullable restore
#else
        public string Vendor
        {
            get { return BackingStore?.Get<string>("vendor"); }
            set { BackingStore?.Set("vendor", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Security.DiscoveredCloudAppInfo"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.Security.DiscoveredCloudAppInfo CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.Security.DiscoveredCloudAppInfo();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "csaStarLevel", n => { CsaStarLevel = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoCsaStarLevel>(); } },
                { "dataAtRestEncryptionMethod", n => { DataAtRestEncryptionMethod = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoDataAtRestEncryptionMethod>(); } },
                { "dataCenter", n => { DataCenter = n.GetStringValue(); } },
                { "dataRetentionPolicy", n => { DataRetentionPolicy = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoDataRetentionPolicy>(); } },
                { "dataTypes", n => { DataTypes = n.GetCollectionOfEnumValues<global::Microsoft.Graph.Beta.Models.Security.AppInfoUploadedDataTypes>()?.AsList(); } },
                { "domainRegistrationDateTime", n => { DomainRegistrationDateTime = n.GetDateTimeOffsetValue(); } },
                { "encryptionProtocol", n => { EncryptionProtocol = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoEncryptionProtocol>(); } },
                { "fedRampLevel", n => { FedRampLevel = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoFedRampLevel>(); } },
                { "founded", n => { Founded = n.GetIntValue(); } },
                { "gdprReadinessStatement", n => { GdprReadinessStatement = n.GetStringValue(); } },
                { "headquarters", n => { Headquarters = n.GetStringValue(); } },
                { "holding", n => { Holding = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoHolding>(); } },
                { "hostingCompany", n => { HostingCompany = n.GetStringValue(); } },
                { "isAdminAuditTrail", n => { IsAdminAuditTrail = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isCobitCompliant", n => { IsCobitCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isCoppaCompliant", n => { IsCoppaCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isDataAuditTrail", n => { IsDataAuditTrail = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isDataClassification", n => { IsDataClassification = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isDataOwnership", n => { IsDataOwnership = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isDisasterRecoveryPlan", n => { IsDisasterRecoveryPlan = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isDmca", n => { IsDmca = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isFerpaCompliant", n => { IsFerpaCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isFfiecCompliant", n => { IsFfiecCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isFileSharing", n => { IsFileSharing = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isFinraCompliant", n => { IsFinraCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isFismaCompliant", n => { IsFismaCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGaapCompliant", n => { IsGaapCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprDataProtectionImpactAssessment", n => { IsGdprDataProtectionImpactAssessment = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprDataProtectionOfficer", n => { IsGdprDataProtectionOfficer = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprDataProtectionSecureCrossBorderDataTransfer", n => { IsGdprDataProtectionSecureCrossBorderDataTransfer = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprImpactAssessment", n => { IsGdprImpactAssessment = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprLawfulBasisForProcessing", n => { IsGdprLawfulBasisForProcessing = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprReportDataBreaches", n => { IsGdprReportDataBreaches = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprRightToAccess", n => { IsGdprRightToAccess = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprRightToBeInformed", n => { IsGdprRightToBeInformed = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprRightToDataPortablility", n => { IsGdprRightToDataPortablility = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprRightToErasure", n => { IsGdprRightToErasure = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprRightToObject", n => { IsGdprRightToObject = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprRightToRectification", n => { IsGdprRightToRectification = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprRightToRestrictionOfProcessing", n => { IsGdprRightToRestrictionOfProcessing = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprRightsRelatedToAutomatedDecisionMaking", n => { IsGdprRightsRelatedToAutomatedDecisionMaking = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGdprSecureCrossBorderDataControl", n => { IsGdprSecureCrossBorderDataControl = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isGlbaCompliant", n => { IsGlbaCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isHipaaCompliant", n => { IsHipaaCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isHitrustCsfCompliant", n => { IsHitrustCsfCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isHttpSecurityHeadersContentSecurityPolicy", n => { IsHttpSecurityHeadersContentSecurityPolicy = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isHttpSecurityHeadersStrictTransportSecurity", n => { IsHttpSecurityHeadersStrictTransportSecurity = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isHttpSecurityHeadersXContentTypeOptions", n => { IsHttpSecurityHeadersXContentTypeOptions = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isHttpSecurityHeadersXFrameOptions", n => { IsHttpSecurityHeadersXFrameOptions = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isHttpSecurityHeadersXXssProtection", n => { IsHttpSecurityHeadersXXssProtection = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isIpAddressRestriction", n => { IsIpAddressRestriction = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isIsae3402Compliant", n => { IsIsae3402Compliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isIso27001Compliant", n => { IsIso27001Compliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isIso27017Compliant", n => { IsIso27017Compliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isIso27018Compliant", n => { IsIso27018Compliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isItarCompliant", n => { IsItarCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isMultiFactorAuthentication", n => { IsMultiFactorAuthentication = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isPasswordPolicy", n => { IsPasswordPolicy = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isPasswordPolicyChangePasswordPeriod", n => { IsPasswordPolicyChangePasswordPeriod = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isPasswordPolicyCharacterCombination", n => { IsPasswordPolicyCharacterCombination = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isPasswordPolicyPasswordHistoryAndReuse", n => { IsPasswordPolicyPasswordHistoryAndReuse = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isPasswordPolicyPasswordLengthLimit", n => { IsPasswordPolicyPasswordLengthLimit = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isPasswordPolicyPersonalInformationUse", n => { IsPasswordPolicyPersonalInformationUse = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isPenetrationTesting", n => { IsPenetrationTesting = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isPrivacyShieldCompliant", n => { IsPrivacyShieldCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isRememberPassword", n => { IsRememberPassword = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isRequiresUserAuthentication", n => { IsRequiresUserAuthentication = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isSoc1Compliant", n => { IsSoc1Compliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isSoc2Compliant", n => { IsSoc2Compliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isSoc3Compliant", n => { IsSoc3Compliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isSoxCompliant", n => { IsSoxCompliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isSp80053Compliant", n => { IsSp80053Compliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isSsae16Compliant", n => { IsSsae16Compliant = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isSupportsSaml", n => { IsSupportsSaml = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isTrustedCertificate", n => { IsTrustedCertificate = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isUserAuditTrail", n => { IsUserAuditTrail = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isUserCanUploadData", n => { IsUserCanUploadData = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isUserRolesSupport", n => { IsUserRolesSupport = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "isValidCertificateName", n => { IsValidCertificateName = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>(); } },
                { "latestBreachDateTime", n => { LatestBreachDateTime = n.GetDateTimeOffsetValue(); } },
                { "logonUrls", n => { LogonUrls = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "pciDssVersion", n => { PciDssVersion = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoPciDssVersion>(); } },
                { "vendor", n => { Vendor = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoCsaStarLevel>("csaStarLevel", CsaStarLevel);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoDataAtRestEncryptionMethod>("dataAtRestEncryptionMethod", DataAtRestEncryptionMethod);
            writer.WriteStringValue("dataCenter", DataCenter);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoDataRetentionPolicy>("dataRetentionPolicy", DataRetentionPolicy);
            writer.WriteCollectionOfEnumValues<global::Microsoft.Graph.Beta.Models.Security.AppInfoUploadedDataTypes>("dataTypes", DataTypes);
            writer.WriteDateTimeOffsetValue("domainRegistrationDateTime", DomainRegistrationDateTime);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoEncryptionProtocol>("encryptionProtocol", EncryptionProtocol);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoFedRampLevel>("fedRampLevel", FedRampLevel);
            writer.WriteIntValue("founded", Founded);
            writer.WriteStringValue("gdprReadinessStatement", GdprReadinessStatement);
            writer.WriteStringValue("headquarters", Headquarters);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoHolding>("holding", Holding);
            writer.WriteStringValue("hostingCompany", HostingCompany);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isAdminAuditTrail", IsAdminAuditTrail);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isCobitCompliant", IsCobitCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isCoppaCompliant", IsCoppaCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isDataAuditTrail", IsDataAuditTrail);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isDataClassification", IsDataClassification);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isDataOwnership", IsDataOwnership);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isDisasterRecoveryPlan", IsDisasterRecoveryPlan);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isDmca", IsDmca);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isFerpaCompliant", IsFerpaCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isFfiecCompliant", IsFfiecCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isFileSharing", IsFileSharing);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isFinraCompliant", IsFinraCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isFismaCompliant", IsFismaCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGaapCompliant", IsGaapCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprDataProtectionImpactAssessment", IsGdprDataProtectionImpactAssessment);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprDataProtectionOfficer", IsGdprDataProtectionOfficer);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprDataProtectionSecureCrossBorderDataTransfer", IsGdprDataProtectionSecureCrossBorderDataTransfer);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprImpactAssessment", IsGdprImpactAssessment);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprLawfulBasisForProcessing", IsGdprLawfulBasisForProcessing);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprReportDataBreaches", IsGdprReportDataBreaches);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprRightsRelatedToAutomatedDecisionMaking", IsGdprRightsRelatedToAutomatedDecisionMaking);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprRightToAccess", IsGdprRightToAccess);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprRightToBeInformed", IsGdprRightToBeInformed);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprRightToDataPortablility", IsGdprRightToDataPortablility);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprRightToErasure", IsGdprRightToErasure);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprRightToObject", IsGdprRightToObject);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprRightToRectification", IsGdprRightToRectification);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprRightToRestrictionOfProcessing", IsGdprRightToRestrictionOfProcessing);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGdprSecureCrossBorderDataControl", IsGdprSecureCrossBorderDataControl);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isGlbaCompliant", IsGlbaCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isHipaaCompliant", IsHipaaCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isHitrustCsfCompliant", IsHitrustCsfCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isHttpSecurityHeadersContentSecurityPolicy", IsHttpSecurityHeadersContentSecurityPolicy);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isHttpSecurityHeadersStrictTransportSecurity", IsHttpSecurityHeadersStrictTransportSecurity);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isHttpSecurityHeadersXContentTypeOptions", IsHttpSecurityHeadersXContentTypeOptions);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isHttpSecurityHeadersXFrameOptions", IsHttpSecurityHeadersXFrameOptions);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isHttpSecurityHeadersXXssProtection", IsHttpSecurityHeadersXXssProtection);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isIpAddressRestriction", IsIpAddressRestriction);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isIsae3402Compliant", IsIsae3402Compliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isIso27001Compliant", IsIso27001Compliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isIso27017Compliant", IsIso27017Compliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isIso27018Compliant", IsIso27018Compliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isItarCompliant", IsItarCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isMultiFactorAuthentication", IsMultiFactorAuthentication);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isPasswordPolicy", IsPasswordPolicy);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isPasswordPolicyChangePasswordPeriod", IsPasswordPolicyChangePasswordPeriod);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isPasswordPolicyCharacterCombination", IsPasswordPolicyCharacterCombination);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isPasswordPolicyPasswordHistoryAndReuse", IsPasswordPolicyPasswordHistoryAndReuse);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isPasswordPolicyPasswordLengthLimit", IsPasswordPolicyPasswordLengthLimit);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isPasswordPolicyPersonalInformationUse", IsPasswordPolicyPersonalInformationUse);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isPenetrationTesting", IsPenetrationTesting);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isPrivacyShieldCompliant", IsPrivacyShieldCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isRememberPassword", IsRememberPassword);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isRequiresUserAuthentication", IsRequiresUserAuthentication);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isSoc1Compliant", IsSoc1Compliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isSoc2Compliant", IsSoc2Compliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isSoc3Compliant", IsSoc3Compliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isSoxCompliant", IsSoxCompliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isSp80053Compliant", IsSp80053Compliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isSsae16Compliant", IsSsae16Compliant);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isSupportsSaml", IsSupportsSaml);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isTrustedCertificate", IsTrustedCertificate);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isUserAuditTrail", IsUserAuditTrail);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isUserCanUploadData", IsUserCanUploadData);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isUserRolesSupport", IsUserRolesSupport);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.CloudAppInfoState>("isValidCertificateName", IsValidCertificateName);
            writer.WriteDateTimeOffsetValue("latestBreachDateTime", LatestBreachDateTime);
            writer.WriteCollectionOfPrimitiveValues<string>("logonUrls", LogonUrls);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.AppInfoPciDssVersion>("pciDssVersion", PciDssVersion);
            writer.WriteStringValue("vendor", Vendor);
        }
    }
}
#pragma warning restore CS0618
