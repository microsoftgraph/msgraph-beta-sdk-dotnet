// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models.Security
{
    #pragma warning disable CS1591
    public class AnalyzedEmail : Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>A collection of values that contain the IDs of any alerts associated with the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AlertIds
        {
            get { return BackingStore?.Get<List<string>?>("alertIds"); }
            set { BackingStore?.Set("alertIds", value); }
        }
#nullable restore
#else
        public List<string> AlertIds
        {
            get { return BackingStore?.Get<List<string>>("alertIds"); }
            set { BackingStore?.Set("alertIds", value); }
        }
#endif
        /// <summary>A collection of the attachments in the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAttachment>? Attachments
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAttachment>?>("attachments"); }
            set { BackingStore?.Set("attachments", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAttachment> Attachments
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAttachment>>("attachments"); }
            set { BackingStore?.Set("attachments", value); }
        }
#endif
        /// <summary>The number of attachments in the email.</summary>
        public int? AttachmentsCount
        {
            get { return BackingStore?.Get<int?>("attachmentsCount"); }
            set { BackingStore?.Set("attachmentsCount", value); }
        }
        /// <summary>The authentication details associated with the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAuthenticationDetail? AuthenticationDetails
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAuthenticationDetail?>("authenticationDetails"); }
            set { BackingStore?.Set("authenticationDetails", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAuthenticationDetail AuthenticationDetails
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAuthenticationDetail>("authenticationDetails"); }
            set { BackingStore?.Set("authenticationDetails", value); }
        }
#endif
        /// <summary>The bulk complaint level of the email. A higher level is more likely to be spam.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BulkComplaintLevel
        {
            get { return BackingStore?.Get<string?>("bulkComplaintLevel"); }
            set { BackingStore?.Set("bulkComplaintLevel", value); }
        }
#nullable restore
#else
        public string BulkComplaintLevel
        {
            get { return BackingStore?.Get<string>("bulkComplaintLevel"); }
            set { BackingStore?.Set("bulkComplaintLevel", value); }
        }
#endif
        /// <summary>Provides context of the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Contexts
        {
            get { return BackingStore?.Get<List<string>?>("contexts"); }
            set { BackingStore?.Set("contexts", value); }
        }
#nullable restore
#else
        public List<string> Contexts
        {
            get { return BackingStore?.Get<List<string>>("contexts"); }
            set { BackingStore?.Set("contexts", value); }
        }
#endif
        /// <summary>The methods of detection used.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DetectionMethods
        {
            get { return BackingStore?.Get<List<string>?>("detectionMethods"); }
            set { BackingStore?.Set("detectionMethods", value); }
        }
#nullable restore
#else
        public List<string> DetectionMethods
        {
            get { return BackingStore?.Get<List<string>>("detectionMethods"); }
            set { BackingStore?.Set("detectionMethods", value); }
        }
#endif
        /// <summary>The direction of the emails. The possible values are: unknown, inbound, outbound, intraOrg, unknownFutureValue.</summary>
        public Microsoft.Graph.Beta.Models.Security.AntispamDirectionality? Directionality
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Security.AntispamDirectionality?>("directionality"); }
            set { BackingStore?.Set("directionality", value); }
        }
        /// <summary>The distribution list details to which the email was sent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DistributionList
        {
            get { return BackingStore?.Get<string?>("distributionList"); }
            set { BackingStore?.Set("distributionList", value); }
        }
#nullable restore
#else
        public string DistributionList
        {
            get { return BackingStore?.Get<string>("distributionList"); }
            set { BackingStore?.Set("distributionList", value); }
        }
#endif
        /// <summary>The identifier for the group of similar emails clustered based on heuristic analysis of their content.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmailClusterId
        {
            get { return BackingStore?.Get<string?>("emailClusterId"); }
            set { BackingStore?.Set("emailClusterId", value); }
        }
#nullable restore
#else
        public string EmailClusterId
        {
            get { return BackingStore?.Get<string>("emailClusterId"); }
            set { BackingStore?.Set("emailClusterId", value); }
        }
#endif
        /// <summary>The name of the Exchange transport rules (ETRs) associated with the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailExchangeTransportRuleInfo>? ExchangeTransportRules
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailExchangeTransportRuleInfo>?>("exchangeTransportRules"); }
            set { BackingStore?.Set("exchangeTransportRules", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailExchangeTransportRuleInfo> ExchangeTransportRules
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailExchangeTransportRuleInfo>>("exchangeTransportRules"); }
            set { BackingStore?.Set("exchangeTransportRules", value); }
        }
#endif
        /// <summary>A public-facing identifier for the email that is sent. The message ID is in the format specified by RFC2822.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InternetMessageId
        {
            get { return BackingStore?.Get<string?>("internetMessageId"); }
            set { BackingStore?.Set("internetMessageId", value); }
        }
#nullable restore
#else
        public string InternetMessageId
        {
            get { return BackingStore?.Get<string>("internetMessageId"); }
            set { BackingStore?.Set("internetMessageId", value); }
        }
#endif
        /// <summary>The detected language of the email content.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Language
        {
            get { return BackingStore?.Get<string?>("language"); }
            set { BackingStore?.Set("language", value); }
        }
#nullable restore
#else
        public string Language
        {
            get { return BackingStore?.Get<string>("language"); }
            set { BackingStore?.Set("language", value); }
        }
#endif
        /// <summary>The latest delivery details of the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail? LatestDelivery
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail?>("latestDelivery"); }
            set { BackingStore?.Set("latestDelivery", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail LatestDelivery
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail>("latestDelivery"); }
            set { BackingStore?.Set("latestDelivery", value); }
        }
#endif
        /// <summary>Date-time when the email record was logged.</summary>
        public DateTimeOffset? LoggedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("loggedDateTime"); }
            set { BackingStore?.Set("loggedDateTime", value); }
        }
        /// <summary>An internal identifier for the email generated by Microsoft 365.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NetworkMessageId
        {
            get { return BackingStore?.Get<string?>("networkMessageId"); }
            set { BackingStore?.Set("networkMessageId", value); }
        }
#nullable restore
#else
        public string NetworkMessageId
        {
            get { return BackingStore?.Get<string>("networkMessageId"); }
            set { BackingStore?.Set("networkMessageId", value); }
        }
#endif
        /// <summary>The original delivery details of the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail? OriginalDelivery
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail?>("originalDelivery"); }
            set { BackingStore?.Set("originalDelivery", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail OriginalDelivery
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail>("originalDelivery"); }
            set { BackingStore?.Set("originalDelivery", value); }
        }
#endif
        /// <summary>An aggregated list of all overrides with source on email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? OverrideSources
        {
            get { return BackingStore?.Get<List<string>?>("overrideSources"); }
            set { BackingStore?.Set("overrideSources", value); }
        }
#nullable restore
#else
        public List<string> OverrideSources
        {
            get { return BackingStore?.Get<List<string>>("overrideSources"); }
            set { BackingStore?.Set("overrideSources", value); }
        }
#endif
        /// <summary>The phish confidence level associated with the email</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PhishConfidenceLevel
        {
            get { return BackingStore?.Get<string?>("phishConfidenceLevel"); }
            set { BackingStore?.Set("phishConfidenceLevel", value); }
        }
#nullable restore
#else
        public string PhishConfidenceLevel
        {
            get { return BackingStore?.Get<string>("phishConfidenceLevel"); }
            set { BackingStore?.Set("phishConfidenceLevel", value); }
        }
#endif
        /// <summary>The action policy that took effect.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Policy
        {
            get { return BackingStore?.Get<string?>("policy"); }
            set { BackingStore?.Set("policy", value); }
        }
#nullable restore
#else
        public string Policy
        {
            get { return BackingStore?.Get<string>("policy"); }
            set { BackingStore?.Set("policy", value); }
        }
#endif
        /// <summary>The action taken on the email based on the configured policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PolicyAction
        {
            get { return BackingStore?.Get<string?>("policyAction"); }
            set { BackingStore?.Set("policyAction", value); }
        }
#nullable restore
#else
        public string PolicyAction
        {
            get { return BackingStore?.Get<string>("policyAction"); }
            set { BackingStore?.Set("policyAction", value); }
        }
#endif
        /// <summary>Contains the email address of the recipient.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? RecipientEmailAddress
        {
            get { return BackingStore?.Get<string?>("recipientEmailAddress"); }
            set { BackingStore?.Set("recipientEmailAddress", value); }
        }
#nullable restore
#else
        public string RecipientEmailAddress
        {
            get { return BackingStore?.Get<string>("recipientEmailAddress"); }
            set { BackingStore?.Set("recipientEmailAddress", value); }
        }
#endif
        /// <summary>A field that indicates where and how bounced emails are processed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReturnPath
        {
            get { return BackingStore?.Get<string?>("returnPath"); }
            set { BackingStore?.Set("returnPath", value); }
        }
#nullable restore
#else
        public string ReturnPath
        {
            get { return BackingStore?.Get<string>("returnPath"); }
            set { BackingStore?.Set("returnPath", value); }
        }
#endif
        /// <summary>Sender details of the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.Security.AnalyzedEmailSenderDetail? SenderDetail
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailSenderDetail?>("senderDetail"); }
            set { BackingStore?.Set("senderDetail", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.Security.AnalyzedEmailSenderDetail SenderDetail
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailSenderDetail>("senderDetail"); }
            set { BackingStore?.Set("senderDetail", value); }
        }
#endif
        /// <summary>Size of the email in bytes.</summary>
        public int? SizeInBytes
        {
            get { return BackingStore?.Get<int?>("sizeInBytes"); }
            set { BackingStore?.Set("sizeInBytes", value); }
        }
        /// <summary>Spam confidence of the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SpamConfidenceLevel
        {
            get { return BackingStore?.Get<string?>("spamConfidenceLevel"); }
            set { BackingStore?.Set("spamConfidenceLevel", value); }
        }
#nullable restore
#else
        public string SpamConfidenceLevel
        {
            get { return BackingStore?.Get<string>("spamConfidenceLevel"); }
            set { BackingStore?.Set("spamConfidenceLevel", value); }
        }
#endif
        /// <summary>Subject of the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subject
        {
            get { return BackingStore?.Get<string?>("subject"); }
            set { BackingStore?.Set("subject", value); }
        }
#nullable restore
#else
        public string Subject
        {
            get { return BackingStore?.Get<string>("subject"); }
            set { BackingStore?.Set("subject", value); }
        }
#endif
        /// <summary>Indicates the threat types. The possible values are: unknown, spam, malware, phish, none, unknownFutureValue.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.Security.ThreatType?>? ThreatTypes
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Security.ThreatType?>?>("threatTypes"); }
            set { BackingStore?.Set("threatTypes", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.Security.ThreatType?> ThreatTypes
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Security.ThreatType?>>("threatTypes"); }
            set { BackingStore?.Set("threatTypes", value); }
        }
#endif
        /// <summary>A collection of the URLs in the email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailUrl>? Urls
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailUrl>?>("urls"); }
            set { BackingStore?.Set("urls", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailUrl> Urls
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailUrl>>("urls"); }
            set { BackingStore?.Set("urls", value); }
        }
#endif
        /// <summary>The number of URLs in the email.</summary>
        public int? UrlsCount
        {
            get { return BackingStore?.Get<int?>("urlsCount"); }
            set { BackingStore?.Set("urlsCount", value); }
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.Security.AnalyzedEmail"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.Security.AnalyzedEmail CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Microsoft.Graph.Beta.Models.Security.AnalyzedEmail();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "alertIds", n => { AlertIds = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "attachments", n => { Attachments = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAttachment>(Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAttachment.CreateFromDiscriminatorValue)?.ToList(); } },
                { "attachmentsCount", n => { AttachmentsCount = n.GetIntValue(); } },
                { "authenticationDetails", n => { AuthenticationDetails = n.GetObjectValue<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAuthenticationDetail>(Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAuthenticationDetail.CreateFromDiscriminatorValue); } },
                { "bulkComplaintLevel", n => { BulkComplaintLevel = n.GetStringValue(); } },
                { "contexts", n => { Contexts = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "detectionMethods", n => { DetectionMethods = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "directionality", n => { Directionality = n.GetEnumValue<Microsoft.Graph.Beta.Models.Security.AntispamDirectionality>(); } },
                { "distributionList", n => { DistributionList = n.GetStringValue(); } },
                { "emailClusterId", n => { EmailClusterId = n.GetStringValue(); } },
                { "exchangeTransportRules", n => { ExchangeTransportRules = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailExchangeTransportRuleInfo>(Microsoft.Graph.Beta.Models.Security.AnalyzedEmailExchangeTransportRuleInfo.CreateFromDiscriminatorValue)?.ToList(); } },
                { "internetMessageId", n => { InternetMessageId = n.GetStringValue(); } },
                { "language", n => { Language = n.GetStringValue(); } },
                { "latestDelivery", n => { LatestDelivery = n.GetObjectValue<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail>(Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail.CreateFromDiscriminatorValue); } },
                { "loggedDateTime", n => { LoggedDateTime = n.GetDateTimeOffsetValue(); } },
                { "networkMessageId", n => { NetworkMessageId = n.GetStringValue(); } },
                { "originalDelivery", n => { OriginalDelivery = n.GetObjectValue<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail>(Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail.CreateFromDiscriminatorValue); } },
                { "overrideSources", n => { OverrideSources = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "phishConfidenceLevel", n => { PhishConfidenceLevel = n.GetStringValue(); } },
                { "policy", n => { Policy = n.GetStringValue(); } },
                { "policyAction", n => { PolicyAction = n.GetStringValue(); } },
                { "recipientEmailAddress", n => { RecipientEmailAddress = n.GetStringValue(); } },
                { "returnPath", n => { ReturnPath = n.GetStringValue(); } },
                { "senderDetail", n => { SenderDetail = n.GetObjectValue<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailSenderDetail>(Microsoft.Graph.Beta.Models.Security.AnalyzedEmailSenderDetail.CreateFromDiscriminatorValue); } },
                { "sizeInBytes", n => { SizeInBytes = n.GetIntValue(); } },
                { "spamConfidenceLevel", n => { SpamConfidenceLevel = n.GetStringValue(); } },
                { "subject", n => { Subject = n.GetStringValue(); } },
                { "threatTypes", n => { ThreatTypes = n.GetCollectionOfEnumValues<Microsoft.Graph.Beta.Models.Security.ThreatType>()?.ToList(); } },
                { "urls", n => { Urls = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailUrl>(Microsoft.Graph.Beta.Models.Security.AnalyzedEmailUrl.CreateFromDiscriminatorValue)?.ToList(); } },
                { "urlsCount", n => { UrlsCount = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfPrimitiveValues<string>("alertIds", AlertIds);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAttachment>("attachments", Attachments);
            writer.WriteIntValue("attachmentsCount", AttachmentsCount);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailAuthenticationDetail>("authenticationDetails", AuthenticationDetails);
            writer.WriteStringValue("bulkComplaintLevel", BulkComplaintLevel);
            writer.WriteCollectionOfPrimitiveValues<string>("contexts", Contexts);
            writer.WriteCollectionOfPrimitiveValues<string>("detectionMethods", DetectionMethods);
            writer.WriteEnumValue<Microsoft.Graph.Beta.Models.Security.AntispamDirectionality>("directionality", Directionality);
            writer.WriteStringValue("distributionList", DistributionList);
            writer.WriteStringValue("emailClusterId", EmailClusterId);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailExchangeTransportRuleInfo>("exchangeTransportRules", ExchangeTransportRules);
            writer.WriteStringValue("internetMessageId", InternetMessageId);
            writer.WriteStringValue("language", Language);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail>("latestDelivery", LatestDelivery);
            writer.WriteDateTimeOffsetValue("loggedDateTime", LoggedDateTime);
            writer.WriteStringValue("networkMessageId", NetworkMessageId);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailDeliveryDetail>("originalDelivery", OriginalDelivery);
            writer.WriteCollectionOfPrimitiveValues<string>("overrideSources", OverrideSources);
            writer.WriteStringValue("phishConfidenceLevel", PhishConfidenceLevel);
            writer.WriteStringValue("policy", Policy);
            writer.WriteStringValue("policyAction", PolicyAction);
            writer.WriteStringValue("recipientEmailAddress", RecipientEmailAddress);
            writer.WriteStringValue("returnPath", ReturnPath);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailSenderDetail>("senderDetail", SenderDetail);
            writer.WriteIntValue("sizeInBytes", SizeInBytes);
            writer.WriteStringValue("spamConfidenceLevel", SpamConfidenceLevel);
            writer.WriteStringValue("subject", Subject);
            writer.WriteCollectionOfEnumValues<Microsoft.Graph.Beta.Models.Security.ThreatType>("threatTypes", ThreatTypes);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Security.AnalyzedEmailUrl>("urls", Urls);
            writer.WriteIntValue("urlsCount", UrlsCount);
        }
    }
}
