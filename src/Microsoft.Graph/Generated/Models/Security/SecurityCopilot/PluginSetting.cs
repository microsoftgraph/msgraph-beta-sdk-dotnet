// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models.Security.SecurityCopilot
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class PluginSetting : IAdditionalDataHolder, IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The acceptableValues property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? AcceptableValues
        {
            get { return BackingStore?.Get<List<string>?>("acceptableValues"); }
            set { BackingStore?.Set("acceptableValues", value); }
        }
#nullable restore
#else
        public List<string> AcceptableValues
        {
            get { return BackingStore?.Get<List<string>>("acceptableValues"); }
            set { BackingStore?.Set("acceptableValues", value); }
        }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>The defaultValue property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultValue
        {
            get { return BackingStore?.Get<string?>("defaultValue"); }
            set { BackingStore?.Set("defaultValue", value); }
        }
#nullable restore
#else
        public string DefaultValue
        {
            get { return BackingStore?.Get<string>("defaultValue"); }
            set { BackingStore?.Set("defaultValue", value); }
        }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description
        {
            get { return BackingStore?.Get<string?>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#nullable restore
#else
        public string Description
        {
            get { return BackingStore?.Get<string>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#endif
        /// <summary>The displayType property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.PluginSettingDisplayType? DisplayType
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.PluginSettingDisplayType?>("displayType"); }
            set { BackingStore?.Set("displayType", value); }
        }
        /// <summary>The hintText property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HintText
        {
            get { return BackingStore?.Get<string?>("hintText"); }
            set { BackingStore?.Set("hintText", value); }
        }
#nullable restore
#else
        public string HintText
        {
            get { return BackingStore?.Get<string>("hintText"); }
            set { BackingStore?.Set("hintText", value); }
        }
#endif
        /// <summary>The isRequired property</summary>
        public bool? IsRequired
        {
            get { return BackingStore?.Get<bool?>("isRequired"); }
            set { BackingStore?.Set("isRequired", value); }
        }
        /// <summary>The label property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Label
        {
            get { return BackingStore?.Get<string?>("label"); }
            set { BackingStore?.Set("label", value); }
        }
#nullable restore
#else
        public string Label
        {
            get { return BackingStore?.Get<string>("label"); }
            set { BackingStore?.Set("label", value); }
        }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name
        {
            get { return BackingStore?.Get<string?>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#nullable restore
#else
        public string Name
        {
            get { return BackingStore?.Get<string>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType
        {
            get { return BackingStore?.Get<string?>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#nullable restore
#else
        public string OdataType
        {
            get { return BackingStore?.Get<string>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#endif
        /// <summary>The settingValue property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.PluginSettingType? SettingValue
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.PluginSettingType?>("settingValue"); }
            set { BackingStore?.Set("settingValue", value); }
        }
        /// <summary>The value property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Value
        {
            get { return BackingStore?.Get<string?>("value"); }
            set { BackingStore?.Set("value", value); }
        }
#nullable restore
#else
        public string Value
        {
            get { return BackingStore?.Get<string>("value"); }
            set { BackingStore?.Set("value", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.PluginSetting"/> and sets the default values.
        /// </summary>
        public PluginSetting()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.PluginSetting"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.PluginSetting CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.PluginSetting();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "acceptableValues", n => { AcceptableValues = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "defaultValue", n => { DefaultValue = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "displayType", n => { DisplayType = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.PluginSettingDisplayType>(); } },
                { "hintText", n => { HintText = n.GetStringValue(); } },
                { "isRequired", n => { IsRequired = n.GetBoolValue(); } },
                { "label", n => { Label = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "settingValue", n => { SettingValue = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.PluginSettingType>(); } },
                { "value", n => { Value = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("acceptableValues", AcceptableValues);
            writer.WriteStringValue("defaultValue", DefaultValue);
            writer.WriteStringValue("description", Description);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.PluginSettingDisplayType>("displayType", DisplayType);
            writer.WriteStringValue("hintText", HintText);
            writer.WriteBoolValue("isRequired", IsRequired);
            writer.WriteStringValue("label", Label);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.PluginSettingType>("settingValue", SettingValue);
            writer.WriteStringValue("value", Value);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
