// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models.Security.SecurityCopilot
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Evaluation : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The completedDateTime property</summary>
        public DateTimeOffset? CompletedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("completedDateTime"); }
            set { BackingStore?.Set("completedDateTime", value); }
        }
        /// <summary>The createdDateTime property</summary>
        public DateTimeOffset? CreatedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("createdDateTime"); }
            set { BackingStore?.Set("createdDateTime", value); }
        }
        /// <summary>The executionCount property</summary>
        public long? ExecutionCount
        {
            get { return BackingStore?.Get<long?>("executionCount"); }
            set { BackingStore?.Set("executionCount", value); }
        }
        /// <summary>The isCancelled property</summary>
        public bool? IsCancelled
        {
            get { return BackingStore?.Get<bool?>("isCancelled"); }
            set { BackingStore?.Set("isCancelled", value); }
        }
        /// <summary>The lastModifiedDateTime property</summary>
        public DateTimeOffset? LastModifiedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastModifiedDateTime"); }
            set { BackingStore?.Set("lastModifiedDateTime", value); }
        }
        /// <summary>The result property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.EvaluationResult? Result
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.EvaluationResult?>("result"); }
            set { BackingStore?.Set("result", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.EvaluationResult Result
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.EvaluationResult>("result"); }
            set { BackingStore?.Set("result", value); }
        }
#endif
        /// <summary>The runStartDateTime property</summary>
        public DateTimeOffset? RunStartDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("runStartDateTime"); }
            set { BackingStore?.Set("runStartDateTime", value); }
        }
        /// <summary>The state property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.EvaluationState? State
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.EvaluationState?>("state"); }
            set { BackingStore?.Set("state", value); }
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.Evaluation"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.Evaluation CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.Evaluation();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "completedDateTime", n => { CompletedDateTime = n.GetDateTimeOffsetValue(); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "executionCount", n => { ExecutionCount = n.GetLongValue(); } },
                { "isCancelled", n => { IsCancelled = n.GetBoolValue(); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "result", n => { Result = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.EvaluationResult>(global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.EvaluationResult.CreateFromDiscriminatorValue); } },
                { "runStartDateTime", n => { RunStartDateTime = n.GetDateTimeOffsetValue(); } },
                { "state", n => { State = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.EvaluationState>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteDateTimeOffsetValue("completedDateTime", CompletedDateTime);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteLongValue("executionCount", ExecutionCount);
            writer.WriteBoolValue("isCancelled", IsCancelled);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.EvaluationResult>("result", Result);
            writer.WriteDateTimeOffsetValue("runStartDateTime", RunStartDateTime);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.SecurityCopilot.EvaluationState>("state", State);
        }
    }
}
#pragma warning restore CS0618
