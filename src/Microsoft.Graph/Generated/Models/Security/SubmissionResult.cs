// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models.Security
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class SubmissionResult : IAdditionalDataHolder, IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>The submission result category. The possible values are: notJunk, spam, phishing, malware, allowedByPolicy, blockedByPolicy, spoof, unknown, noResultAvailable, unknownFutureValue, beingAnalyzed, notSubmittedToMicrosoft, phishingSimulation, allowedDueToOrganizationOverride, blockedDueToOrganizationOverride, allowedDueToUserOverride, blockedDueToUserOverride, itemNotfound, threatsFound, noThreatsFound, domainImpersonation, userImpersonation, brandImpersonation, authenticationFailure, spoofedBlocked, spoofedAllowed, bulk, and reasonLostInTransit. You must use the Prefer: include-unknown-enum-members request header to get the following values in this evolvable enum: beingAnalyzed, notSubmittedToMicrosoft, phishingSimulation, allowedDueToOrganizationOverride, blockedDueToOrganizationOverride, allowedDueToUserOverride, blockedDueToUserOverride, itemNotfound, threatsFound, noThreatsFound, domainImpersonation, userImpersonation, brandImpersonation, authenticationFailure, spoofedBlocked, spoofedAllowed, bulk, and reasonLostInTransit.</summary>
        public global::Microsoft.Graph.Beta.Models.Security.SubmissionResultCategory? Category
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SubmissionResultCategory?>("category"); }
            set { BackingStore?.Set("category", value); }
        }
        /// <summary>Specifies the extra details provided by Microsoft to substantiate their analysis result.</summary>
        public global::Microsoft.Graph.Beta.Models.Security.SubmissionResultDetail? Detail
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SubmissionResultDetail?>("detail"); }
            set { BackingStore?.Set("detail", value); }
        }
        /// <summary>Specifies the files detected by Microsoft in the submitted emails.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Security.SubmissionDetectedFile>? DetectedFiles
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Security.SubmissionDetectedFile>?>("detectedFiles"); }
            set { BackingStore?.Set("detectedFiles", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Security.SubmissionDetectedFile> DetectedFiles
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Security.SubmissionDetectedFile>>("detectedFiles"); }
            set { BackingStore?.Set("detectedFiles", value); }
        }
#endif
        /// <summary>Specifies the URLs detected by Microsoft in the submitted email.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DetectedUrls
        {
            get { return BackingStore?.Get<List<string>?>("detectedUrls"); }
            set { BackingStore?.Set("detectedUrls", value); }
        }
#nullable restore
#else
        public List<string> DetectedUrls
        {
            get { return BackingStore?.Get<List<string>>("detectedUrls"); }
            set { BackingStore?.Set("detectedUrls", value); }
        }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType
        {
            get { return BackingStore?.Get<string?>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#nullable restore
#else
        public string OdataType
        {
            get { return BackingStore?.Get<string>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#endif
        /// <summary>Specifies the setting for user mailbox denoted by a comma-separated string.</summary>
        public global::Microsoft.Graph.Beta.Models.Security.UserMailboxSetting? UserMailboxSetting
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.UserMailboxSetting?>("userMailboxSetting"); }
            set { BackingStore?.Set("userMailboxSetting", value); }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.Security.SubmissionResult"/> and sets the default values.
        /// </summary>
        public SubmissionResult()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Security.SubmissionResult"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Microsoft.Graph.Beta.Models.Security.SubmissionResult CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.Security.SubmissionResult();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "category", n => { Category = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionResultCategory>(); } },
                { "detail", n => { Detail = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionResultDetail>(); } },
                { "detectedFiles", n => { DetectedFiles = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Security.SubmissionDetectedFile>(global::Microsoft.Graph.Beta.Models.Security.SubmissionDetectedFile.CreateFromDiscriminatorValue)?.AsList(); } },
                { "detectedUrls", n => { DetectedUrls = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "userMailboxSetting", n => { UserMailboxSetting = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.UserMailboxSetting>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionResultCategory>("category", Category);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionResultDetail>("detail", Detail);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Security.SubmissionDetectedFile>("detectedFiles", DetectedFiles);
            writer.WriteCollectionOfPrimitiveValues<string>("detectedUrls", DetectedUrls);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.UserMailboxSetting>("userMailboxSetting", UserMailboxSetting);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
