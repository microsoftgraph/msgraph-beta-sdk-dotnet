// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models.Security
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class DetectionRule : global::Microsoft.Graph.Beta.Models.Security.ProtectionRule, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Complex type representing the actions taken when a detection is made by this rule.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Security.DetectionAction? DetectionAction
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.DetectionAction?>("detectionAction"); }
            set { BackingStore?.Set("detectionAction", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Security.DetectionAction DetectionAction
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.DetectionAction>("detectionAction"); }
            set { BackingStore?.Set("detectionAction", value); }
        }
#endif
        /// <summary>The ID of the detector that triggered the alert. Also see the &apos;detectorId&apos; field in microsoft.graph.security.alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DetectorId
        {
            get { return BackingStore?.Get<string?>("detectorId"); }
            set { BackingStore?.Set("detectorId", value); }
        }
#nullable restore
#else
        public string DetectorId
        {
            get { return BackingStore?.Get<string>("detectorId"); }
            set { BackingStore?.Set("detectorId", value); }
        }
#endif
        /// <summary>Complex type holding details about the last run of this rule.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Security.RunDetails? LastRunDetails
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.RunDetails?>("lastRunDetails"); }
            set { BackingStore?.Set("lastRunDetails", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Security.RunDetails LastRunDetails
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.RunDetails>("lastRunDetails"); }
            set { BackingStore?.Set("lastRunDetails", value); }
        }
#endif
        /// <summary>Complex type holding data about the advanced hunting query of this rule.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Security.QueryCondition? QueryCondition
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.QueryCondition?>("queryCondition"); }
            set { BackingStore?.Set("queryCondition", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Security.QueryCondition QueryCondition
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.QueryCondition>("queryCondition"); }
            set { BackingStore?.Set("queryCondition", value); }
        }
#endif
        /// <summary>Complex type holding data about the triggering schedule of this rule.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Security.RuleSchedule? Schedule
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.RuleSchedule?>("schedule"); }
            set { BackingStore?.Set("schedule", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Security.RuleSchedule Schedule
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.RuleSchedule>("schedule"); }
            set { BackingStore?.Set("schedule", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.Security.DetectionRule"/> and sets the default values.
        /// </summary>
        public DetectionRule() : base()
        {
            OdataType = "#microsoft.graph.security.detectionRule";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Security.DetectionRule"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.Security.DetectionRule CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.Security.DetectionRule();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "detectionAction", n => { DetectionAction = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Security.DetectionAction>(global::Microsoft.Graph.Beta.Models.Security.DetectionAction.CreateFromDiscriminatorValue); } },
                { "detectorId", n => { DetectorId = n.GetStringValue(); } },
                { "lastRunDetails", n => { LastRunDetails = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Security.RunDetails>(global::Microsoft.Graph.Beta.Models.Security.RunDetails.CreateFromDiscriminatorValue); } },
                { "queryCondition", n => { QueryCondition = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Security.QueryCondition>(global::Microsoft.Graph.Beta.Models.Security.QueryCondition.CreateFromDiscriminatorValue); } },
                { "schedule", n => { Schedule = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Security.RuleSchedule>(global::Microsoft.Graph.Beta.Models.Security.RuleSchedule.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Security.DetectionAction>("detectionAction", DetectionAction);
            writer.WriteStringValue("detectorId", DetectorId);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Security.RunDetails>("lastRunDetails", LastRunDetails);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Security.QueryCondition>("queryCondition", QueryCondition);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Security.RuleSchedule>("schedule", Schedule);
        }
    }
}
#pragma warning restore CS0618
