// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models.Security
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class IncidentTask : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The actionStatus property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.IncidentTaskActionStatus? ActionStatus
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskActionStatus?>("actionStatus"); }
            set { BackingStore?.Set("actionStatus", value); }
        }
        /// <summary>The actionType property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.IncidentTaskActionType? ActionType
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskActionType?>("actionType"); }
            set { BackingStore?.Set("actionType", value); }
        }
        /// <summary>Name of the entity that created the task. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedByDisplayName
        {
            get { return BackingStore?.Get<string?>("createdByDisplayName"); }
            set { BackingStore?.Set("createdByDisplayName", value); }
        }
#nullable restore
#else
        public string CreatedByDisplayName
        {
            get { return BackingStore?.Get<string>("createdByDisplayName"); }
            set { BackingStore?.Set("createdByDisplayName", value); }
        }
#endif
        /// <summary>Creation time of the task. Read-only.</summary>
        public DateTimeOffset? CreatedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("createdDateTime"); }
            set { BackingStore?.Set("createdDateTime", value); }
        }
        /// <summary>Description of the remediation action.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description
        {
            get { return BackingStore?.Get<string?>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#nullable restore
#else
        public string Description
        {
            get { return BackingStore?.Get<string>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#endif
        /// <summary>Title of the task.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>Required. The incident that contains this task. Must contain a valid incident ID.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Security.Incident? Incident
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.Incident?>("incident"); }
            set { BackingStore?.Set("incident", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Security.Incident Incident
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.Incident>("incident"); }
            set { BackingStore?.Set("incident", value); }
        }
#endif
        /// <summary>Name of the entity that last updated the task. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? LastModifiedByDisplayName
        {
            get { return BackingStore?.Get<string?>("lastModifiedByDisplayName"); }
            set { BackingStore?.Set("lastModifiedByDisplayName", value); }
        }
#nullable restore
#else
        public string LastModifiedByDisplayName
        {
            get { return BackingStore?.Get<string>("lastModifiedByDisplayName"); }
            set { BackingStore?.Set("lastModifiedByDisplayName", value); }
        }
#endif
        /// <summary>Last update time of the task. Read-only.</summary>
        public DateTimeOffset? LastModifiedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastModifiedDateTime"); }
            set { BackingStore?.Set("lastModifiedDateTime", value); }
        }
        /// <summary>The reponse action.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Security.IncidentTaskResponseAction? ResponseAction
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskResponseAction?>("responseAction"); }
            set { BackingStore?.Set("responseAction", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Security.IncidentTaskResponseAction ResponseAction
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskResponseAction>("responseAction"); }
            set { BackingStore?.Set("responseAction", value); }
        }
#endif
        /// <summary>The source property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.IncidentTaskSource? Source
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskSource?>("source"); }
            set { BackingStore?.Set("source", value); }
        }
        /// <summary>The status property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.IncidentTaskStatus? Status
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskStatus?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Security.IncidentTask"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.Security.IncidentTask CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.Security.IncidentTask();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "actionStatus", n => { ActionStatus = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskActionStatus>(); } },
                { "actionType", n => { ActionType = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskActionType>(); } },
                { "createdByDisplayName", n => { CreatedByDisplayName = n.GetStringValue(); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "incident", n => { Incident = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Security.Incident>(global::Microsoft.Graph.Beta.Models.Security.Incident.CreateFromDiscriminatorValue); } },
                { "lastModifiedByDisplayName", n => { LastModifiedByDisplayName = n.GetStringValue(); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "responseAction", n => { ResponseAction = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskResponseAction>(global::Microsoft.Graph.Beta.Models.Security.IncidentTaskResponseAction.CreateFromDiscriminatorValue); } },
                { "source", n => { Source = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskSource>(); } },
                { "status", n => { Status = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskStatus>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskActionStatus>("actionStatus", ActionStatus);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskActionType>("actionType", ActionType);
            writer.WriteStringValue("createdByDisplayName", CreatedByDisplayName);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Security.Incident>("incident", Incident);
            writer.WriteStringValue("lastModifiedByDisplayName", LastModifiedByDisplayName);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskResponseAction>("responseAction", ResponseAction);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskSource>("source", Source);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.IncidentTaskStatus>("status", Status);
        }
    }
}
#pragma warning restore CS0618
