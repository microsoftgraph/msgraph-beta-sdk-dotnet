// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models.Security
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class ThreatSubmission : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Specifies the admin review property that constitutes of who reviewed the user submission, when and what was it identified as.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Security.SubmissionAdminReview? AdminReview
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SubmissionAdminReview?>("adminReview"); }
            set { BackingStore?.Set("adminReview", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Security.SubmissionAdminReview AdminReview
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SubmissionAdminReview>("adminReview"); }
            set { BackingStore?.Set("adminReview", value); }
        }
#endif
        /// <summary>The category property</summary>
        public global::Microsoft.Graph.Beta.Models.Security.SubmissionCategory? Category
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SubmissionCategory?>("category"); }
            set { BackingStore?.Set("category", value); }
        }
        /// <summary>Specifies the source of the submission. The possible values are: microsoft, other, and unkownFutureValue.</summary>
        public global::Microsoft.Graph.Beta.Models.Security.SubmissionClientSource? ClientSource
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SubmissionClientSource?>("clientSource"); }
            set { BackingStore?.Set("clientSource", value); }
        }
        /// <summary>Specifies the type of content being submitted. The possible values are: email, url, file, app, and unkownFutureValue.</summary>
        public global::Microsoft.Graph.Beta.Models.Security.SubmissionContentType? ContentType
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SubmissionContentType?>("contentType"); }
            set { BackingStore?.Set("contentType", value); }
        }
        /// <summary>Specifies who submitted the email as a threat. Supports $filter = createdBy/email eq &apos;value&apos;.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Security.SubmissionUserIdentity? CreatedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SubmissionUserIdentity?>("createdBy"); }
            set { BackingStore?.Set("createdBy", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Security.SubmissionUserIdentity CreatedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SubmissionUserIdentity>("createdBy"); }
            set { BackingStore?.Set("createdBy", value); }
        }
#endif
        /// <summary>Specifies when the threat submission was created. Supports $filter = createdDateTime ge 2022-01-01T00:00:00Z and createdDateTime lt 2022-01-02T00:00:00Z.</summary>
        public DateTimeOffset? CreatedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("createdDateTime"); }
            set { BackingStore?.Set("createdDateTime", value); }
        }
        /// <summary>Specifies the result of the analysis performed by Microsoft.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Security.SubmissionResult? Result
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SubmissionResult?>("result"); }
            set { BackingStore?.Set("result", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Security.SubmissionResult Result
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SubmissionResult>("result"); }
            set { BackingStore?.Set("result", value); }
        }
#endif
        /// <summary>Specifies the role of the submitter. Supports $filter = source eq &apos;value&apos;. The possible values are: administrator,  user, and unkownFutureValue.</summary>
        public global::Microsoft.Graph.Beta.Models.Security.SubmissionSource? Source
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.SubmissionSource?>("source"); }
            set { BackingStore?.Set("source", value); }
        }
        /// <summary>Indicates whether the threat submission has been analyzed by Microsoft. Supports $filter = status eq &apos;value&apos;. The possible values are: notStarted, running, succeeded, failed, skipped, and unkownFutureValue.</summary>
        public global::Microsoft.Graph.Beta.Models.Security.LongRunningOperationStatus? Status
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Security.LongRunningOperationStatus?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
        /// <summary>Indicates the tenant id of the submitter. Not required when created using a POST operation. It&apos;s extracted from the token of the post API call.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TenantId
        {
            get { return BackingStore?.Get<string?>("tenantId"); }
            set { BackingStore?.Set("tenantId", value); }
        }
#nullable restore
#else
        public string TenantId
        {
            get { return BackingStore?.Get<string>("tenantId"); }
            set { BackingStore?.Set("tenantId", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Security.ThreatSubmission"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.Security.ThreatSubmission CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.security.emailContentThreatSubmission" => new global::Microsoft.Graph.Beta.Models.Security.EmailContentThreatSubmission(),
                "#microsoft.graph.security.emailThreatSubmission" => new global::Microsoft.Graph.Beta.Models.Security.EmailThreatSubmission(),
                "#microsoft.graph.security.emailUrlThreatSubmission" => new global::Microsoft.Graph.Beta.Models.Security.EmailUrlThreatSubmission(),
                "#microsoft.graph.security.fileContentThreatSubmission" => new global::Microsoft.Graph.Beta.Models.Security.FileContentThreatSubmission(),
                "#microsoft.graph.security.fileThreatSubmission" => new global::Microsoft.Graph.Beta.Models.Security.FileThreatSubmission(),
                "#microsoft.graph.security.fileUrlThreatSubmission" => new global::Microsoft.Graph.Beta.Models.Security.FileUrlThreatSubmission(),
                "#microsoft.graph.security.urlThreatSubmission" => new global::Microsoft.Graph.Beta.Models.Security.UrlThreatSubmission(),
                _ => new global::Microsoft.Graph.Beta.Models.Security.ThreatSubmission(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "adminReview", n => { AdminReview = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionAdminReview>(global::Microsoft.Graph.Beta.Models.Security.SubmissionAdminReview.CreateFromDiscriminatorValue); } },
                { "category", n => { Category = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionCategory>(); } },
                { "clientSource", n => { ClientSource = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionClientSource>(); } },
                { "contentType", n => { ContentType = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionContentType>(); } },
                { "createdBy", n => { CreatedBy = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionUserIdentity>(global::Microsoft.Graph.Beta.Models.Security.SubmissionUserIdentity.CreateFromDiscriminatorValue); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "result", n => { Result = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionResult>(global::Microsoft.Graph.Beta.Models.Security.SubmissionResult.CreateFromDiscriminatorValue); } },
                { "source", n => { Source = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionSource>(); } },
                { "status", n => { Status = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Security.LongRunningOperationStatus>(); } },
                { "tenantId", n => { TenantId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionAdminReview>("adminReview", AdminReview);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionCategory>("category", Category);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionClientSource>("clientSource", ClientSource);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionContentType>("contentType", ContentType);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionUserIdentity>("createdBy", CreatedBy);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionResult>("result", Result);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.SubmissionSource>("source", Source);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Security.LongRunningOperationStatus>("status", Status);
            writer.WriteStringValue("tenantId", TenantId);
        }
    }
}
#pragma warning restore CS0618
