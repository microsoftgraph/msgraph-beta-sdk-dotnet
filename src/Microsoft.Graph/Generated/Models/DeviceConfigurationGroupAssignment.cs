// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    /// <summary>
    /// Device configuration group assignment.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    public partial class DeviceConfigurationGroupAssignment : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    {
        /// <summary>The navigation link to the Device Configuration being targeted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.DeviceConfiguration? DeviceConfiguration
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.DeviceConfiguration?>("deviceConfiguration"); }
            set { BackingStore?.Set("deviceConfiguration", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.DeviceConfiguration DeviceConfiguration
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.DeviceConfiguration>("deviceConfiguration"); }
            set { BackingStore?.Set("deviceConfiguration", value); }
        }
#endif
        /// <summary>Indicates if this group is should be excluded. Defaults that the group should be included</summary>
        public bool? ExcludeGroup
        {
            get { return BackingStore?.Get<bool?>("excludeGroup"); }
            set { BackingStore?.Set("excludeGroup", value); }
        }
        /// <summary>The Id of the AAD group we are targeting the device configuration to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TargetGroupId
        {
            get { return BackingStore?.Get<string?>("targetGroupId"); }
            set { BackingStore?.Set("targetGroupId", value); }
        }
#nullable restore
#else
        public string TargetGroupId
        {
            get { return BackingStore?.Get<string>("targetGroupId"); }
            set { BackingStore?.Set("targetGroupId", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.DeviceConfigurationGroupAssignment"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.DeviceConfigurationGroupAssignment CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.DeviceConfigurationGroupAssignment();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "deviceConfiguration", n => { DeviceConfiguration = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.DeviceConfiguration>(global::Microsoft.Graph.Beta.Models.DeviceConfiguration.CreateFromDiscriminatorValue); } },
                { "excludeGroup", n => { ExcludeGroup = n.GetBoolValue(); } },
                { "targetGroupId", n => { TargetGroupId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.DeviceConfiguration>("deviceConfiguration", DeviceConfiguration);
            writer.WriteBoolValue("excludeGroup", ExcludeGroup);
            writer.WriteStringValue("targetGroupId", TargetGroupId);
        }
    }
}
#pragma warning restore CS0618
