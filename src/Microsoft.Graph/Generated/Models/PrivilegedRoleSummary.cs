// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class PrivilegedRoleSummary : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The elevatedCount property</summary>
        public int? ElevatedCount
        {
            get { return BackingStore?.Get<int?>("elevatedCount"); }
            set { BackingStore?.Set("elevatedCount", value); }
        }
        /// <summary>The managedCount property</summary>
        public int? ManagedCount
        {
            get { return BackingStore?.Get<int?>("managedCount"); }
            set { BackingStore?.Set("managedCount", value); }
        }
        /// <summary>The mfaEnabled property</summary>
        public bool? MfaEnabled
        {
            get { return BackingStore?.Get<bool?>("mfaEnabled"); }
            set { BackingStore?.Set("mfaEnabled", value); }
        }
        /// <summary>The status property</summary>
        public global::Microsoft.Graph.Beta.Models.RoleSummaryStatus? Status
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.RoleSummaryStatus?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
        /// <summary>The usersCount property</summary>
        public int? UsersCount
        {
            get { return BackingStore?.Get<int?>("usersCount"); }
            set { BackingStore?.Set("usersCount", value); }
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.PrivilegedRoleSummary"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.PrivilegedRoleSummary CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.PrivilegedRoleSummary();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "elevatedCount", n => { ElevatedCount = n.GetIntValue(); } },
                { "managedCount", n => { ManagedCount = n.GetIntValue(); } },
                { "mfaEnabled", n => { MfaEnabled = n.GetBoolValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.RoleSummaryStatus>(); } },
                { "usersCount", n => { UsersCount = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteIntValue("elevatedCount", ElevatedCount);
            writer.WriteIntValue("managedCount", ManagedCount);
            writer.WriteBoolValue("mfaEnabled", MfaEnabled);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.RoleSummaryStatus>("status", Status);
            writer.WriteIntValue("usersCount", UsersCount);
        }
    }
}
#pragma warning restore CS0618
