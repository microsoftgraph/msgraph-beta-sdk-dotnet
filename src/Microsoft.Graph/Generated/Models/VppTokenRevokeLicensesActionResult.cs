// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    /// <summary>
    /// The status of the revoke licenses action performed on the Apple Volume Purchase Program token.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class VppTokenRevokeLicensesActionResult : global::Microsoft.Graph.Beta.Models.VppTokenActionResult, IParsable
    {
        /// <summary>Possible types of reasons for an Apple Volume Purchase Program token action failure.</summary>
        public global::Microsoft.Graph.Beta.Models.VppTokenActionFailureReason? ActionFailureReason
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.VppTokenActionFailureReason?>("actionFailureReason"); }
            set { BackingStore?.Set("actionFailureReason", value); }
        }
        /// <summary>A count of the number of licenses that failed to revoke.</summary>
        public int? FailedLicensesCount
        {
            get { return BackingStore?.Get<int?>("failedLicensesCount"); }
            set { BackingStore?.Set("failedLicensesCount", value); }
        }
        /// <summary>A count of the number of licenses that were attempted to revoke.</summary>
        public int? TotalLicensesCount
        {
            get { return BackingStore?.Get<int?>("totalLicensesCount"); }
            set { BackingStore?.Set("totalLicensesCount", value); }
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.VppTokenRevokeLicensesActionResult"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.VppTokenRevokeLicensesActionResult CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.VppTokenRevokeLicensesActionResult();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "actionFailureReason", n => { ActionFailureReason = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.VppTokenActionFailureReason>(); } },
                { "failedLicensesCount", n => { FailedLicensesCount = n.GetIntValue(); } },
                { "totalLicensesCount", n => { TotalLicensesCount = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.VppTokenActionFailureReason>("actionFailureReason", ActionFailureReason);
            writer.WriteIntValue("failedLicensesCount", FailedLicensesCount);
            writer.WriteIntValue("totalLicensesCount", TotalLicensesCount);
        }
    }
}
#pragma warning restore CS0618
