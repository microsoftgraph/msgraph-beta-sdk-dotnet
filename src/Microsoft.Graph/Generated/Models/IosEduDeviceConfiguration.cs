// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    /// <summary>
    /// iOS Education device configuration
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    public partial class IosEduDeviceConfiguration : global::Microsoft.Graph.Beta.Models.DeviceConfiguration, IParsable
    {
        /// <summary>The Trusted Root and PFX certificates for Device</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings? DeviceCertificateSettings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings?>("deviceCertificateSettings"); }
            set { BackingStore?.Set("deviceCertificateSettings", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings DeviceCertificateSettings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings>("deviceCertificateSettings"); }
            set { BackingStore?.Set("deviceCertificateSettings", value); }
        }
#endif
        /// <summary>The Trusted Root and PFX certificates for Student</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings? StudentCertificateSettings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings?>("studentCertificateSettings"); }
            set { BackingStore?.Set("studentCertificateSettings", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings StudentCertificateSettings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings>("studentCertificateSettings"); }
            set { BackingStore?.Set("studentCertificateSettings", value); }
        }
#endif
        /// <summary>Trusted Root and PFX certificates for iOS EDU.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings? TeacherCertificateSettings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings?>("teacherCertificateSettings"); }
            set { BackingStore?.Set("teacherCertificateSettings", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings TeacherCertificateSettings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings>("teacherCertificateSettings"); }
            set { BackingStore?.Set("teacherCertificateSettings", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.IosEduDeviceConfiguration"/> and sets the default values.
        /// </summary>
        public IosEduDeviceConfiguration() : base()
        {
            OdataType = "#microsoft.graph.iosEduDeviceConfiguration";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.IosEduDeviceConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.IosEduDeviceConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.IosEduDeviceConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "deviceCertificateSettings", n => { DeviceCertificateSettings = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings>(global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings.CreateFromDiscriminatorValue); } },
                { "studentCertificateSettings", n => { StudentCertificateSettings = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings>(global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings.CreateFromDiscriminatorValue); } },
                { "teacherCertificateSettings", n => { TeacherCertificateSettings = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings>(global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings>("deviceCertificateSettings", DeviceCertificateSettings);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings>("studentCertificateSettings", StudentCertificateSettings);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.IosEduCertificateSettings>("teacherCertificateSettings", TeacherCertificateSettings);
        }
    }
}
#pragma warning restore CS0618
