// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models.WindowsUpdates
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class OperationalInsightsConnection : global::Microsoft.Graph.Beta.Models.WindowsUpdates.ResourceConnection, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The name of the Azure resource group that contains the Log Analytics workspace.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AzureResourceGroupName
        {
            get { return BackingStore?.Get<string?>("azureResourceGroupName"); }
            set { BackingStore?.Set("azureResourceGroupName", value); }
        }
#nullable restore
#else
        public string AzureResourceGroupName
        {
            get { return BackingStore?.Get<string>("azureResourceGroupName"); }
            set { BackingStore?.Set("azureResourceGroupName", value); }
        }
#endif
        /// <summary>The Azure subscription ID that contains the Log Analytics workspace.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AzureSubscriptionId
        {
            get { return BackingStore?.Get<string?>("azureSubscriptionId"); }
            set { BackingStore?.Set("azureSubscriptionId", value); }
        }
#nullable restore
#else
        public string AzureSubscriptionId
        {
            get { return BackingStore?.Get<string>("azureSubscriptionId"); }
            set { BackingStore?.Set("azureSubscriptionId", value); }
        }
#endif
        /// <summary>The name of the Log Analytics workspace.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WorkspaceName
        {
            get { return BackingStore?.Get<string?>("workspaceName"); }
            set { BackingStore?.Set("workspaceName", value); }
        }
#nullable restore
#else
        public string WorkspaceName
        {
            get { return BackingStore?.Get<string>("workspaceName"); }
            set { BackingStore?.Set("workspaceName", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.WindowsUpdates.OperationalInsightsConnection"/> and sets the default values.
        /// </summary>
        public OperationalInsightsConnection() : base()
        {
            OdataType = "#microsoft.graph.windowsUpdates.operationalInsightsConnection";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.WindowsUpdates.OperationalInsightsConnection"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.WindowsUpdates.OperationalInsightsConnection CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.WindowsUpdates.OperationalInsightsConnection();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "azureResourceGroupName", n => { AzureResourceGroupName = n.GetStringValue(); } },
                { "azureSubscriptionId", n => { AzureSubscriptionId = n.GetStringValue(); } },
                { "workspaceName", n => { WorkspaceName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("azureResourceGroupName", AzureResourceGroupName);
            writer.WriteStringValue("azureSubscriptionId", AzureSubscriptionId);
            writer.WriteStringValue("workspaceName", WorkspaceName);
        }
    }
}
#pragma warning restore CS0618
