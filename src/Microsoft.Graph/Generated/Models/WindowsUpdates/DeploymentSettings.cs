// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models.WindowsUpdates
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class DeploymentSettings : IAdditionalDataHolder, IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>Settings for governing whether content is applicable to a device.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.WindowsUpdates.ContentApplicabilitySettings? ContentApplicability
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.WindowsUpdates.ContentApplicabilitySettings?>("contentApplicability"); }
            set { BackingStore?.Set("contentApplicability", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.WindowsUpdates.ContentApplicabilitySettings ContentApplicability
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.WindowsUpdates.ContentApplicabilitySettings>("contentApplicability"); }
            set { BackingStore?.Set("contentApplicability", value); }
        }
#endif
        /// <summary>Settings for governing whether updates should be expedited.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.WindowsUpdates.ExpediteSettings? Expedite
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.WindowsUpdates.ExpediteSettings?>("expedite"); }
            set { BackingStore?.Set("expedite", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.WindowsUpdates.ExpediteSettings Expedite
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.WindowsUpdates.ExpediteSettings>("expedite"); }
            set { BackingStore?.Set("expedite", value); }
        }
#endif
        /// <summary>Settings for governing conditions to monitor and automated actions to take.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.WindowsUpdates.MonitoringSettings? Monitoring
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.WindowsUpdates.MonitoringSettings?>("monitoring"); }
            set { BackingStore?.Set("monitoring", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.WindowsUpdates.MonitoringSettings Monitoring
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.WindowsUpdates.MonitoringSettings>("monitoring"); }
            set { BackingStore?.Set("monitoring", value); }
        }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType
        {
            get { return BackingStore?.Get<string?>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#nullable restore
#else
        public string OdataType
        {
            get { return BackingStore?.Get<string>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#endif
        /// <summary>Settings for governing how and when the content is rolled out.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.WindowsUpdates.ScheduleSettings? Schedule
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.WindowsUpdates.ScheduleSettings?>("schedule"); }
            set { BackingStore?.Set("schedule", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.WindowsUpdates.ScheduleSettings Schedule
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.WindowsUpdates.ScheduleSettings>("schedule"); }
            set { BackingStore?.Set("schedule", value); }
        }
#endif
        /// <summary>Settings for governing end user update experience.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.WindowsUpdates.UserExperienceSettings? UserExperience
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.WindowsUpdates.UserExperienceSettings?>("userExperience"); }
            set { BackingStore?.Set("userExperience", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.WindowsUpdates.UserExperienceSettings UserExperience
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.WindowsUpdates.UserExperienceSettings>("userExperience"); }
            set { BackingStore?.Set("userExperience", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.WindowsUpdates.DeploymentSettings"/> and sets the default values.
        /// </summary>
        public DeploymentSettings()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.WindowsUpdates.DeploymentSettings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Microsoft.Graph.Beta.Models.WindowsUpdates.DeploymentSettings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.WindowsUpdates.DeploymentSettings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "contentApplicability", n => { ContentApplicability = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.WindowsUpdates.ContentApplicabilitySettings>(global::Microsoft.Graph.Beta.Models.WindowsUpdates.ContentApplicabilitySettings.CreateFromDiscriminatorValue); } },
                { "expedite", n => { Expedite = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.WindowsUpdates.ExpediteSettings>(global::Microsoft.Graph.Beta.Models.WindowsUpdates.ExpediteSettings.CreateFromDiscriminatorValue); } },
                { "monitoring", n => { Monitoring = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.WindowsUpdates.MonitoringSettings>(global::Microsoft.Graph.Beta.Models.WindowsUpdates.MonitoringSettings.CreateFromDiscriminatorValue); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "schedule", n => { Schedule = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.WindowsUpdates.ScheduleSettings>(global::Microsoft.Graph.Beta.Models.WindowsUpdates.ScheduleSettings.CreateFromDiscriminatorValue); } },
                { "userExperience", n => { UserExperience = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.WindowsUpdates.UserExperienceSettings>(global::Microsoft.Graph.Beta.Models.WindowsUpdates.UserExperienceSettings.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.WindowsUpdates.ContentApplicabilitySettings>("contentApplicability", ContentApplicability);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.WindowsUpdates.ExpediteSettings>("expedite", Expedite);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.WindowsUpdates.MonitoringSettings>("monitoring", Monitoring);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.WindowsUpdates.ScheduleSettings>("schedule", Schedule);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.WindowsUpdates.UserExperienceSettings>("userExperience", UserExperience);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
