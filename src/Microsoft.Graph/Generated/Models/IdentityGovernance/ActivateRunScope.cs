// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models.IdentityGovernance
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ActivateRunScope : global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivationScope, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The run property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.IdentityGovernance.Run? Run
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentityGovernance.Run?>("run"); }
            set { BackingStore?.Set("run", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.IdentityGovernance.Run Run
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentityGovernance.Run>("run"); }
            set { BackingStore?.Set("run", value); }
        }
#endif
        /// <summary>The taskScope property</summary>
        public global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivationTaskScopeType? TaskScope
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivationTaskScopeType?>("taskScope"); }
            set { BackingStore?.Set("taskScope", value); }
        }
        /// <summary>The userScope property</summary>
        public global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivationUserScopeType? UserScope
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivationUserScopeType?>("userScope"); }
            set { BackingStore?.Set("userScope", value); }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivateRunScope"/> and sets the default values.
        /// </summary>
        public ActivateRunScope() : base()
        {
            OdataType = "#microsoft.graph.identityGovernance.activateRunScope";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivateRunScope"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivateRunScope CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivateRunScope();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "run", n => { Run = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.IdentityGovernance.Run>(global::Microsoft.Graph.Beta.Models.IdentityGovernance.Run.CreateFromDiscriminatorValue); } },
                { "taskScope", n => { TaskScope = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivationTaskScopeType>(); } },
                { "userScope", n => { UserScope = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivationUserScopeType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.IdentityGovernance.Run>("run", Run);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivationTaskScopeType>("taskScope", TaskScope);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.IdentityGovernance.ActivationUserScopeType>("userScope", UserScope);
        }
    }
}
#pragma warning restore CS0618
