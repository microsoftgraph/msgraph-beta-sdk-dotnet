// <auto-generated/>
using Microsoft.Graph.Beta.Models.IdentityGovernance;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models
{
    #pragma warning disable CS1591
    public class CustomCalloutExtension : Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Configuration for securing the API call to the logic app. For example, using OAuth client credentials flow.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.CustomExtensionAuthenticationConfiguration? AuthenticationConfiguration
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CustomExtensionAuthenticationConfiguration?>("authenticationConfiguration"); }
            set { BackingStore?.Set("authenticationConfiguration", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.CustomExtensionAuthenticationConfiguration AuthenticationConfiguration
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CustomExtensionAuthenticationConfiguration>("authenticationConfiguration"); }
            set { BackingStore?.Set("authenticationConfiguration", value); }
        }
#endif
        /// <summary>HTTP connection settings that define how long Microsoft Entra ID can wait for a connection to a logic app, how many times you can retry a timed-out connection and the exception scenarios when retries are allowed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.CustomExtensionClientConfiguration? ClientConfiguration
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CustomExtensionClientConfiguration?>("clientConfiguration"); }
            set { BackingStore?.Set("clientConfiguration", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.CustomExtensionClientConfiguration ClientConfiguration
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CustomExtensionClientConfiguration>("clientConfiguration"); }
            set { BackingStore?.Set("clientConfiguration", value); }
        }
#endif
        /// <summary>Description for the customCalloutExtension object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description
        {
            get { return BackingStore?.Get<string?>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#nullable restore
#else
        public string Description
        {
            get { return BackingStore?.Get<string>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#endif
        /// <summary>Display name for the customCalloutExtension object.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>The type and details for configuring the endpoint to call the logic app&apos;s workflow.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.CustomExtensionEndpointConfiguration? EndpointConfiguration
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CustomExtensionEndpointConfiguration?>("endpointConfiguration"); }
            set { BackingStore?.Set("endpointConfiguration", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.CustomExtensionEndpointConfiguration EndpointConfiguration
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CustomExtensionEndpointConfiguration>("endpointConfiguration"); }
            set { BackingStore?.Set("endpointConfiguration", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.CustomCalloutExtension"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.CustomCalloutExtension CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.accessPackageAssignmentRequestWorkflowExtension" => new Microsoft.Graph.Beta.Models.AccessPackageAssignmentRequestWorkflowExtension(),
                "#microsoft.graph.accessPackageAssignmentWorkflowExtension" => new Microsoft.Graph.Beta.Models.AccessPackageAssignmentWorkflowExtension(),
                "#microsoft.graph.customAccessPackageWorkflowExtension" => new Microsoft.Graph.Beta.Models.CustomAccessPackageWorkflowExtension(),
                "#microsoft.graph.customAuthenticationExtension" => new Microsoft.Graph.Beta.Models.CustomAuthenticationExtension(),
                "#microsoft.graph.identityGovernance.customTaskExtension" => new Microsoft.Graph.Beta.Models.IdentityGovernance.CustomTaskExtension(),
                "#microsoft.graph.onAttributeCollectionStartCustomExtension" => new Microsoft.Graph.Beta.Models.OnAttributeCollectionStartCustomExtension(),
                "#microsoft.graph.onAttributeCollectionSubmitCustomExtension" => new Microsoft.Graph.Beta.Models.OnAttributeCollectionSubmitCustomExtension(),
                "#microsoft.graph.onTokenIssuanceStartCustomExtension" => new Microsoft.Graph.Beta.Models.OnTokenIssuanceStartCustomExtension(),
                _ => new Microsoft.Graph.Beta.Models.CustomCalloutExtension(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "authenticationConfiguration", n => { AuthenticationConfiguration = n.GetObjectValue<Microsoft.Graph.Beta.Models.CustomExtensionAuthenticationConfiguration>(Microsoft.Graph.Beta.Models.CustomExtensionAuthenticationConfiguration.CreateFromDiscriminatorValue); } },
                { "clientConfiguration", n => { ClientConfiguration = n.GetObjectValue<Microsoft.Graph.Beta.Models.CustomExtensionClientConfiguration>(Microsoft.Graph.Beta.Models.CustomExtensionClientConfiguration.CreateFromDiscriminatorValue); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "endpointConfiguration", n => { EndpointConfiguration = n.GetObjectValue<Microsoft.Graph.Beta.Models.CustomExtensionEndpointConfiguration>(Microsoft.Graph.Beta.Models.CustomExtensionEndpointConfiguration.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.CustomExtensionAuthenticationConfiguration>("authenticationConfiguration", AuthenticationConfiguration);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.CustomExtensionClientConfiguration>("clientConfiguration", ClientConfiguration);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.CustomExtensionEndpointConfiguration>("endpointConfiguration", EndpointConfiguration);
        }
    }
}
