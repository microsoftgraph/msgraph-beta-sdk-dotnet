// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AkamaiWebApplicationFirewallProvider : global::Microsoft.Graph.Beta.Models.WebApplicationFirewallProvider, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The accessToken property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccessToken
        {
            get { return BackingStore?.Get<string?>("accessToken"); }
            set { BackingStore?.Set("accessToken", value); }
        }
#nullable restore
#else
        public string AccessToken
        {
            get { return BackingStore?.Get<string>("accessToken"); }
            set { BackingStore?.Set("accessToken", value); }
        }
#endif
        /// <summary>The clientSecret property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClientSecret
        {
            get { return BackingStore?.Get<string?>("clientSecret"); }
            set { BackingStore?.Set("clientSecret", value); }
        }
#nullable restore
#else
        public string ClientSecret
        {
            get { return BackingStore?.Get<string>("clientSecret"); }
            set { BackingStore?.Set("clientSecret", value); }
        }
#endif
        /// <summary>The clientToken property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClientToken
        {
            get { return BackingStore?.Get<string?>("clientToken"); }
            set { BackingStore?.Set("clientToken", value); }
        }
#nullable restore
#else
        public string ClientToken
        {
            get { return BackingStore?.Get<string>("clientToken"); }
            set { BackingStore?.Set("clientToken", value); }
        }
#endif
        /// <summary>The hostPrefix property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HostPrefix
        {
            get { return BackingStore?.Get<string?>("hostPrefix"); }
            set { BackingStore?.Set("hostPrefix", value); }
        }
#nullable restore
#else
        public string HostPrefix
        {
            get { return BackingStore?.Get<string>("hostPrefix"); }
            set { BackingStore?.Set("hostPrefix", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.AkamaiWebApplicationFirewallProvider"/> and sets the default values.
        /// </summary>
        public AkamaiWebApplicationFirewallProvider() : base()
        {
            OdataType = "#microsoft.graph.akamaiWebApplicationFirewallProvider";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.AkamaiWebApplicationFirewallProvider"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.AkamaiWebApplicationFirewallProvider CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.AkamaiWebApplicationFirewallProvider();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "accessToken", n => { AccessToken = n.GetStringValue(); } },
                { "clientSecret", n => { ClientSecret = n.GetStringValue(); } },
                { "clientToken", n => { ClientToken = n.GetStringValue(); } },
                { "hostPrefix", n => { HostPrefix = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("accessToken", AccessToken);
            writer.WriteStringValue("clientSecret", ClientSecret);
            writer.WriteStringValue("clientToken", ClientToken);
            writer.WriteStringValue("hostPrefix", HostPrefix);
        }
    }
}
#pragma warning restore CS0618
