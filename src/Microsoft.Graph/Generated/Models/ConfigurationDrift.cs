// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ConfigurationDrift : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The baselineResourceDisplayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BaselineResourceDisplayName
        {
            get { return BackingStore?.Get<string?>("baselineResourceDisplayName"); }
            set { BackingStore?.Set("baselineResourceDisplayName", value); }
        }
#nullable restore
#else
        public string BaselineResourceDisplayName
        {
            get { return BackingStore?.Get<string>("baselineResourceDisplayName"); }
            set { BackingStore?.Set("baselineResourceDisplayName", value); }
        }
#endif
        /// <summary>The driftedProperties property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.DriftedProperty>? DriftedProperties
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.DriftedProperty>?>("driftedProperties"); }
            set { BackingStore?.Set("driftedProperties", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.DriftedProperty> DriftedProperties
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.DriftedProperty>>("driftedProperties"); }
            set { BackingStore?.Set("driftedProperties", value); }
        }
#endif
        /// <summary>The firstReportedDateTime property</summary>
        public DateTimeOffset? FirstReportedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("firstReportedDateTime"); }
            set { BackingStore?.Set("firstReportedDateTime", value); }
        }
        /// <summary>The monitorId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MonitorId
        {
            get { return BackingStore?.Get<string?>("monitorId"); }
            set { BackingStore?.Set("monitorId", value); }
        }
#nullable restore
#else
        public string MonitorId
        {
            get { return BackingStore?.Get<string>("monitorId"); }
            set { BackingStore?.Set("monitorId", value); }
        }
#endif
        /// <summary>The resourceInstanceIdentifier property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.OpenComplexDictionaryType? ResourceInstanceIdentifier
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.OpenComplexDictionaryType?>("resourceInstanceIdentifier"); }
            set { BackingStore?.Set("resourceInstanceIdentifier", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.OpenComplexDictionaryType ResourceInstanceIdentifier
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.OpenComplexDictionaryType>("resourceInstanceIdentifier"); }
            set { BackingStore?.Set("resourceInstanceIdentifier", value); }
        }
#endif
        /// <summary>The resourceType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResourceType
        {
            get { return BackingStore?.Get<string?>("resourceType"); }
            set { BackingStore?.Set("resourceType", value); }
        }
#nullable restore
#else
        public string ResourceType
        {
            get { return BackingStore?.Get<string>("resourceType"); }
            set { BackingStore?.Set("resourceType", value); }
        }
#endif
        /// <summary>The status property</summary>
        public global::Microsoft.Graph.Beta.Models.DriftStatus? Status
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.DriftStatus?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
        /// <summary>The tenantId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? TenantId
        {
            get { return BackingStore?.Get<string?>("tenantId"); }
            set { BackingStore?.Set("tenantId", value); }
        }
#nullable restore
#else
        public string TenantId
        {
            get { return BackingStore?.Get<string>("tenantId"); }
            set { BackingStore?.Set("tenantId", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.ConfigurationDrift"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.ConfigurationDrift CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.ConfigurationDrift();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "baselineResourceDisplayName", n => { BaselineResourceDisplayName = n.GetStringValue(); } },
                { "driftedProperties", n => { DriftedProperties = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.DriftedProperty>(global::Microsoft.Graph.Beta.Models.DriftedProperty.CreateFromDiscriminatorValue)?.AsList(); } },
                { "firstReportedDateTime", n => { FirstReportedDateTime = n.GetDateTimeOffsetValue(); } },
                { "monitorId", n => { MonitorId = n.GetStringValue(); } },
                { "resourceInstanceIdentifier", n => { ResourceInstanceIdentifier = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.OpenComplexDictionaryType>(global::Microsoft.Graph.Beta.Models.OpenComplexDictionaryType.CreateFromDiscriminatorValue); } },
                { "resourceType", n => { ResourceType = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.DriftStatus>(); } },
                { "tenantId", n => { TenantId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.OpenComplexDictionaryType>("resourceInstanceIdentifier", ResourceInstanceIdentifier);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.DriftStatus>("status", Status);
        }
    }
}
#pragma warning restore CS0618
