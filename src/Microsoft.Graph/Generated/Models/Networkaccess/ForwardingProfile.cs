// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models.Networkaccess
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ForwardingProfile : global::Microsoft.Graph.Beta.Models.Networkaccess.Profile, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Specifies the users, groups, devices, and remote networks whose traffic is associated with the given traffic forwarding profile.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Networkaccess.Association>? Associations
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Networkaccess.Association>?>("associations"); }
            set { BackingStore?.Set("associations", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Networkaccess.Association> Associations
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Networkaccess.Association>>("associations"); }
            set { BackingStore?.Set("associations", value); }
        }
#endif
        /// <summary>Profile priority.</summary>
        public int? Priority
        {
            get { return BackingStore?.Get<int?>("priority"); }
            set { BackingStore?.Set("priority", value); }
        }
        /// <summary>The servicePrincipal property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.ServicePrincipal? ServicePrincipal
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ServicePrincipal?>("servicePrincipal"); }
            set { BackingStore?.Set("servicePrincipal", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.ServicePrincipal ServicePrincipal
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ServicePrincipal>("servicePrincipal"); }
            set { BackingStore?.Set("servicePrincipal", value); }
        }
#endif
        /// <summary>The trafficForwardingType property</summary>
        public global::Microsoft.Graph.Beta.Models.Networkaccess.TrafficForwardingType? TrafficForwardingType
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Networkaccess.TrafficForwardingType?>("trafficForwardingType"); }
            set { BackingStore?.Set("trafficForwardingType", value); }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.Networkaccess.ForwardingProfile"/> and sets the default values.
        /// </summary>
        public ForwardingProfile() : base()
        {
            OdataType = "#microsoft.graph.networkaccess.forwardingProfile";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Networkaccess.ForwardingProfile"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.Networkaccess.ForwardingProfile CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.Networkaccess.ForwardingProfile();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "associations", n => { Associations = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Networkaccess.Association>(global::Microsoft.Graph.Beta.Models.Networkaccess.Association.CreateFromDiscriminatorValue)?.AsList(); } },
                { "priority", n => { Priority = n.GetIntValue(); } },
                { "servicePrincipal", n => { ServicePrincipal = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.ServicePrincipal>(global::Microsoft.Graph.Beta.Models.ServicePrincipal.CreateFromDiscriminatorValue); } },
                { "trafficForwardingType", n => { TrafficForwardingType = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.Networkaccess.TrafficForwardingType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Networkaccess.Association>("associations", Associations);
            writer.WriteIntValue("priority", Priority);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.ServicePrincipal>("servicePrincipal", ServicePrincipal);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.Networkaccess.TrafficForwardingType>("trafficForwardingType", TrafficForwardingType);
        }
    }
}
#pragma warning restore CS0618
