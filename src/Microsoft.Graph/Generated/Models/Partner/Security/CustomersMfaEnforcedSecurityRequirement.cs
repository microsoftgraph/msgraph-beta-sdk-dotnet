// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models.Partner.Security
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CustomersMfaEnforcedSecurityRequirement : global::Microsoft.Graph.Beta.Models.Partner.Security.SecurityRequirement, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The number of customer tenants that are compliant.</summary>
        public long? CompliantTenantCount
        {
            get { return BackingStore?.Get<long?>("compliantTenantCount"); }
            set { BackingStore?.Set("compliantTenantCount", value); }
        }
        /// <summary>The total number of customer tenants associated with this partner</summary>
        public long? TotalTenantCount
        {
            get { return BackingStore?.Get<long?>("totalTenantCount"); }
            set { BackingStore?.Set("totalTenantCount", value); }
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Partner.Security.CustomersMfaEnforcedSecurityRequirement"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.Partner.Security.CustomersMfaEnforcedSecurityRequirement CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.Partner.Security.CustomersMfaEnforcedSecurityRequirement();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "compliantTenantCount", n => { CompliantTenantCount = n.GetLongValue(); } },
                { "totalTenantCount", n => { TotalTenantCount = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteLongValue("compliantTenantCount", CompliantTenantCount);
            writer.WriteLongValue("totalTenantCount", TotalTenantCount);
        }
    }
}
#pragma warning restore CS0618
