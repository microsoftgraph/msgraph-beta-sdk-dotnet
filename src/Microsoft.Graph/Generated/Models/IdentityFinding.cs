// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models {
    public class IdentityFinding : Finding, IParsable 
    {
        /// <summary>The actionSummary property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.ActionSummary? ActionSummary {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.ActionSummary?>("actionSummary"); }
            set { BackingStore?.Set("actionSummary", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.ActionSummary ActionSummary {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.ActionSummary>("actionSummary"); }
            set { BackingStore?.Set("actionSummary", value); }
        }
#endif
        /// <summary>The identity property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public AuthorizationSystemIdentity? Identity {
            get { return BackingStore?.Get<AuthorizationSystemIdentity?>("identity"); }
            set { BackingStore?.Set("identity", value); }
        }
#nullable restore
#else
        public AuthorizationSystemIdentity Identity {
            get { return BackingStore?.Get<AuthorizationSystemIdentity>("identity"); }
            set { BackingStore?.Set("identity", value); }
        }
#endif
        /// <summary>An identity&apos;s information details.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.IdentityDetails? IdentityDetails {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.IdentityDetails?>("identityDetails"); }
            set { BackingStore?.Set("identityDetails", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.IdentityDetails IdentityDetails {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.IdentityDetails>("identityDetails"); }
            set { BackingStore?.Set("identityDetails", value); }
        }
#endif
        /// <summary>The permissionsCreepIndex property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.PermissionsCreepIndex? PermissionsCreepIndex {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.PermissionsCreepIndex?>("permissionsCreepIndex"); }
            set { BackingStore?.Set("permissionsCreepIndex", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.PermissionsCreepIndex PermissionsCreepIndex {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.PermissionsCreepIndex>("permissionsCreepIndex"); }
            set { BackingStore?.Set("permissionsCreepIndex", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="IdentityFinding"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new IdentityFinding CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.inactiveAwsResourceFinding" => new InactiveAwsResourceFinding(),
                "#microsoft.graph.inactiveAwsRoleFinding" => new InactiveAwsRoleFinding(),
                "#microsoft.graph.inactiveAzureServicePrincipalFinding" => new InactiveAzureServicePrincipalFinding(),
                "#microsoft.graph.inactiveGcpServiceAccountFinding" => new InactiveGcpServiceAccountFinding(),
                "#microsoft.graph.inactiveServerlessFunctionFinding" => new InactiveServerlessFunctionFinding(),
                "#microsoft.graph.inactiveUserFinding" => new InactiveUserFinding(),
                "#microsoft.graph.overprovisionedAwsResourceFinding" => new OverprovisionedAwsResourceFinding(),
                "#microsoft.graph.overprovisionedAwsRoleFinding" => new OverprovisionedAwsRoleFinding(),
                "#microsoft.graph.overprovisionedAzureServicePrincipalFinding" => new OverprovisionedAzureServicePrincipalFinding(),
                "#microsoft.graph.overprovisionedGcpServiceAccountFinding" => new OverprovisionedGcpServiceAccountFinding(),
                "#microsoft.graph.overprovisionedServerlessFunctionFinding" => new OverprovisionedServerlessFunctionFinding(),
                "#microsoft.graph.overprovisionedUserFinding" => new OverprovisionedUserFinding(),
                "#microsoft.graph.superAwsResourceFinding" => new SuperAwsResourceFinding(),
                "#microsoft.graph.superAwsRoleFinding" => new SuperAwsRoleFinding(),
                "#microsoft.graph.superAzureServicePrincipalFinding" => new SuperAzureServicePrincipalFinding(),
                "#microsoft.graph.superGcpServiceAccountFinding" => new SuperGcpServiceAccountFinding(),
                "#microsoft.graph.superServerlessFunctionFinding" => new SuperServerlessFunctionFinding(),
                "#microsoft.graph.superUserFinding" => new SuperUserFinding(),
                "#microsoft.graph.unenforcedMfaAwsUserFinding" => new UnenforcedMfaAwsUserFinding(),
                _ => new IdentityFinding(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                {"actionSummary", n => { ActionSummary = n.GetObjectValue<Microsoft.Graph.Beta.Models.ActionSummary>(Microsoft.Graph.Beta.Models.ActionSummary.CreateFromDiscriminatorValue); } },
                {"identity", n => { Identity = n.GetObjectValue<AuthorizationSystemIdentity>(AuthorizationSystemIdentity.CreateFromDiscriminatorValue); } },
                {"identityDetails", n => { IdentityDetails = n.GetObjectValue<Microsoft.Graph.Beta.Models.IdentityDetails>(Microsoft.Graph.Beta.Models.IdentityDetails.CreateFromDiscriminatorValue); } },
                {"permissionsCreepIndex", n => { PermissionsCreepIndex = n.GetObjectValue<Microsoft.Graph.Beta.Models.PermissionsCreepIndex>(Microsoft.Graph.Beta.Models.PermissionsCreepIndex.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.ActionSummary>("actionSummary", ActionSummary);
            writer.WriteObjectValue<AuthorizationSystemIdentity>("identity", Identity);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.IdentityDetails>("identityDetails", IdentityDetails);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.PermissionsCreepIndex>("permissionsCreepIndex", PermissionsCreepIndex);
        }
    }
}
