// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models
{
    #pragma warning disable CS1591
    public class CommsOperation : Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Unique Client Context string. Max limit is 256 chars.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ClientContext
        {
            get { return BackingStore?.Get<string?>("clientContext"); }
            set { BackingStore?.Set("clientContext", value); }
        }
#nullable restore
#else
        public string ClientContext
        {
            get { return BackingStore?.Get<string>("clientContext"); }
            set { BackingStore?.Set("clientContext", value); }
        }
#endif
        /// <summary>The result information. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.ResultInfo? ResultInfo
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.ResultInfo?>("resultInfo"); }
            set { BackingStore?.Set("resultInfo", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.ResultInfo ResultInfo
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.ResultInfo>("resultInfo"); }
            set { BackingStore?.Set("resultInfo", value); }
        }
#endif
        /// <summary>The status property</summary>
        public Microsoft.Graph.Beta.Models.OperationStatus? Status
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.OperationStatus?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.CommsOperation"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.CommsOperation CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.addLargeGalleryViewOperation" => new Microsoft.Graph.Beta.Models.AddLargeGalleryViewOperation(),
                "#microsoft.graph.cancelMediaProcessingOperation" => new Microsoft.Graph.Beta.Models.CancelMediaProcessingOperation(),
                "#microsoft.graph.inviteParticipantsOperation" => new Microsoft.Graph.Beta.Models.InviteParticipantsOperation(),
                "#microsoft.graph.muteParticipantOperation" => new Microsoft.Graph.Beta.Models.MuteParticipantOperation(),
                "#microsoft.graph.muteParticipantsOperation" => new Microsoft.Graph.Beta.Models.MuteParticipantsOperation(),
                "#microsoft.graph.playPromptOperation" => new Microsoft.Graph.Beta.Models.PlayPromptOperation(),
                "#microsoft.graph.recordOperation" => new Microsoft.Graph.Beta.Models.RecordOperation(),
                "#microsoft.graph.sendDtmfTonesOperation" => new Microsoft.Graph.Beta.Models.SendDtmfTonesOperation(),
                "#microsoft.graph.startHoldMusicOperation" => new Microsoft.Graph.Beta.Models.StartHoldMusicOperation(),
                "#microsoft.graph.stopHoldMusicOperation" => new Microsoft.Graph.Beta.Models.StopHoldMusicOperation(),
                "#microsoft.graph.subscribeToToneOperation" => new Microsoft.Graph.Beta.Models.SubscribeToToneOperation(),
                "#microsoft.graph.unmuteParticipantOperation" => new Microsoft.Graph.Beta.Models.UnmuteParticipantOperation(),
                "#microsoft.graph.updateRecordingStatusOperation" => new Microsoft.Graph.Beta.Models.UpdateRecordingStatusOperation(),
                _ => new Microsoft.Graph.Beta.Models.CommsOperation(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "clientContext", n => { ClientContext = n.GetStringValue(); } },
                { "resultInfo", n => { ResultInfo = n.GetObjectValue<Microsoft.Graph.Beta.Models.ResultInfo>(Microsoft.Graph.Beta.Models.ResultInfo.CreateFromDiscriminatorValue); } },
                { "status", n => { Status = n.GetEnumValue<Microsoft.Graph.Beta.Models.OperationStatus>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("clientContext", ClientContext);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.ResultInfo>("resultInfo", ResultInfo);
            writer.WriteEnumValue<Microsoft.Graph.Beta.Models.OperationStatus>("status", Status);
        }
    }
}
