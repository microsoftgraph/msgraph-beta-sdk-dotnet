// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class EndUserNotificationDetail : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Email HTML content.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmailContent
        {
            get { return BackingStore?.Get<string?>("emailContent"); }
            set { BackingStore?.Set("emailContent", value); }
        }
#nullable restore
#else
        public string EmailContent
        {
            get { return BackingStore?.Get<string>("emailContent"); }
            set { BackingStore?.Set("emailContent", value); }
        }
#endif
        /// <summary>Indicates whether this language is default.</summary>
        public bool? IsDefaultLangauge
        {
            get { return BackingStore?.Get<bool?>("isDefaultLangauge"); }
            set { BackingStore?.Set("isDefaultLangauge", value); }
        }
        /// <summary>Notification language.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Language
        {
            get { return BackingStore?.Get<string?>("language"); }
            set { BackingStore?.Set("language", value); }
        }
#nullable restore
#else
        public string Language
        {
            get { return BackingStore?.Get<string>("language"); }
            set { BackingStore?.Set("language", value); }
        }
#endif
        /// <summary>Notification locale.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Locale
        {
            get { return BackingStore?.Get<string?>("locale"); }
            set { BackingStore?.Set("locale", value); }
        }
#nullable restore
#else
        public string Locale
        {
            get { return BackingStore?.Get<string>("locale"); }
            set { BackingStore?.Set("locale", value); }
        }
#endif
        /// <summary>Email details of the sender.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.EmailIdentity? SentFrom
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EmailIdentity?>("sentFrom"); }
            set { BackingStore?.Set("sentFrom", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.EmailIdentity SentFrom
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EmailIdentity>("sentFrom"); }
            set { BackingStore?.Set("sentFrom", value); }
        }
#endif
        /// <summary>Mail subject.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Subject
        {
            get { return BackingStore?.Get<string?>("subject"); }
            set { BackingStore?.Set("subject", value); }
        }
#nullable restore
#else
        public string Subject
        {
            get { return BackingStore?.Get<string>("subject"); }
            set { BackingStore?.Set("subject", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.EndUserNotificationDetail"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.EndUserNotificationDetail CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.EndUserNotificationDetail();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "emailContent", n => { EmailContent = n.GetStringValue(); } },
                { "isDefaultLangauge", n => { IsDefaultLangauge = n.GetBoolValue(); } },
                { "language", n => { Language = n.GetStringValue(); } },
                { "locale", n => { Locale = n.GetStringValue(); } },
                { "sentFrom", n => { SentFrom = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.EmailIdentity>(global::Microsoft.Graph.Beta.Models.EmailIdentity.CreateFromDiscriminatorValue); } },
                { "subject", n => { Subject = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("emailContent", EmailContent);
            writer.WriteBoolValue("isDefaultLangauge", IsDefaultLangauge);
            writer.WriteStringValue("language", Language);
            writer.WriteStringValue("locale", Locale);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.EmailIdentity>("sentFrom", SentFrom);
            writer.WriteStringValue("subject", Subject);
        }
    }
}
#pragma warning restore CS0618
