// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models
{
    /// <summary>
    /// The base presentation value entity that stores the value for a single group policy presentation.
    /// </summary>
    public class GroupPolicyPresentationValue : Microsoft.Graph.Beta.Models.Entity, IParsable
    {
        /// <summary>The date and time the object was created.</summary>
        public DateTimeOffset? CreatedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("createdDateTime"); }
            set { BackingStore?.Set("createdDateTime", value); }
        }
        /// <summary>The group policy definition value associated with the presentation value.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.GroupPolicyDefinitionValue? DefinitionValue
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.GroupPolicyDefinitionValue?>("definitionValue"); }
            set { BackingStore?.Set("definitionValue", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.GroupPolicyDefinitionValue DefinitionValue
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.GroupPolicyDefinitionValue>("definitionValue"); }
            set { BackingStore?.Set("definitionValue", value); }
        }
#endif
        /// <summary>The date and time the object was last modified.</summary>
        public DateTimeOffset? LastModifiedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastModifiedDateTime"); }
            set { BackingStore?.Set("lastModifiedDateTime", value); }
        }
        /// <summary>The group policy presentation associated with the presentation value.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.GroupPolicyPresentation? Presentation
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.GroupPolicyPresentation?>("presentation"); }
            set { BackingStore?.Set("presentation", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.GroupPolicyPresentation Presentation
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.GroupPolicyPresentation>("presentation"); }
            set { BackingStore?.Set("presentation", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.GroupPolicyPresentationValue"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.GroupPolicyPresentationValue CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.groupPolicyPresentationValueBoolean" => new Microsoft.Graph.Beta.Models.GroupPolicyPresentationValueBoolean(),
                "#microsoft.graph.groupPolicyPresentationValueDecimal" => new Microsoft.Graph.Beta.Models.GroupPolicyPresentationValueDecimal(),
                "#microsoft.graph.groupPolicyPresentationValueList" => new Microsoft.Graph.Beta.Models.GroupPolicyPresentationValueList(),
                "#microsoft.graph.groupPolicyPresentationValueLongDecimal" => new Microsoft.Graph.Beta.Models.GroupPolicyPresentationValueLongDecimal(),
                "#microsoft.graph.groupPolicyPresentationValueMultiText" => new Microsoft.Graph.Beta.Models.GroupPolicyPresentationValueMultiText(),
                "#microsoft.graph.groupPolicyPresentationValueText" => new Microsoft.Graph.Beta.Models.GroupPolicyPresentationValueText(),
                _ => new Microsoft.Graph.Beta.Models.GroupPolicyPresentationValue(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "definitionValue", n => { DefinitionValue = n.GetObjectValue<Microsoft.Graph.Beta.Models.GroupPolicyDefinitionValue>(Microsoft.Graph.Beta.Models.GroupPolicyDefinitionValue.CreateFromDiscriminatorValue); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "presentation", n => { Presentation = n.GetObjectValue<Microsoft.Graph.Beta.Models.GroupPolicyPresentation>(Microsoft.Graph.Beta.Models.GroupPolicyPresentation.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.GroupPolicyDefinitionValue>("definitionValue", DefinitionValue);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.GroupPolicyPresentation>("presentation", Presentation);
        }
    }
}
