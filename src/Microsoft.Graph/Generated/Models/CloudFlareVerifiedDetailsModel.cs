// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CloudFlareVerifiedDetailsModel : global::Microsoft.Graph.Beta.Models.WebApplicationFirewallVerifiedDetails, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The enabledCustomRules property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.CloudFlareRuleModel>? EnabledCustomRules
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CloudFlareRuleModel>?>("enabledCustomRules"); }
            set { BackingStore?.Set("enabledCustomRules", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.CloudFlareRuleModel> EnabledCustomRules
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CloudFlareRuleModel>>("enabledCustomRules"); }
            set { BackingStore?.Set("enabledCustomRules", value); }
        }
#endif
        /// <summary>The enabledRecommendedRulesets property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.CloudFlareRulesetModel>? EnabledRecommendedRulesets
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CloudFlareRulesetModel>?>("enabledRecommendedRulesets"); }
            set { BackingStore?.Set("enabledRecommendedRulesets", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.CloudFlareRulesetModel> EnabledRecommendedRulesets
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CloudFlareRulesetModel>>("enabledRecommendedRulesets"); }
            set { BackingStore?.Set("enabledRecommendedRulesets", value); }
        }
#endif
        /// <summary>The zoneId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ZoneId
        {
            get { return BackingStore?.Get<string?>("zoneId"); }
            set { BackingStore?.Set("zoneId", value); }
        }
#nullable restore
#else
        public string ZoneId
        {
            get { return BackingStore?.Get<string>("zoneId"); }
            set { BackingStore?.Set("zoneId", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.CloudFlareVerifiedDetailsModel"/> and sets the default values.
        /// </summary>
        public CloudFlareVerifiedDetailsModel() : base()
        {
            OdataType = "#microsoft.graph.cloudFlareVerifiedDetailsModel";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.CloudFlareVerifiedDetailsModel"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.CloudFlareVerifiedDetailsModel CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.CloudFlareVerifiedDetailsModel();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "enabledCustomRules", n => { EnabledCustomRules = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CloudFlareRuleModel>(global::Microsoft.Graph.Beta.Models.CloudFlareRuleModel.CreateFromDiscriminatorValue)?.AsList(); } },
                { "enabledRecommendedRulesets", n => { EnabledRecommendedRulesets = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CloudFlareRulesetModel>(global::Microsoft.Graph.Beta.Models.CloudFlareRulesetModel.CreateFromDiscriminatorValue)?.AsList(); } },
                { "zoneId", n => { ZoneId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CloudFlareRuleModel>("enabledCustomRules", EnabledCustomRules);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CloudFlareRulesetModel>("enabledRecommendedRulesets", EnabledRecommendedRulesets);
            writer.WriteStringValue("zoneId", ZoneId);
        }
    }
}
#pragma warning restore CS0618
