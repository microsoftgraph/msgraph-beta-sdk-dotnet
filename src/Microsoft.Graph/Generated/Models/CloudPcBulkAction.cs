// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class CloudPcBulkAction : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Run summary of this bulk action.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.CloudPcBulkActionSummary? ActionSummary
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcBulkActionSummary?>("actionSummary"); }
            set { BackingStore?.Set("actionSummary", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.CloudPcBulkActionSummary ActionSummary
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcBulkActionSummary>("actionSummary"); }
            set { BackingStore?.Set("actionSummary", value); }
        }
#endif
        /// <summary>The cloudPcIds property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? CloudPcIds
        {
            get { return BackingStore?.Get<List<string>?>("cloudPcIds"); }
            set { BackingStore?.Set("cloudPcIds", value); }
        }
#nullable restore
#else
        public List<string> CloudPcIds
        {
            get { return BackingStore?.Get<List<string>>("cloudPcIds"); }
            set { BackingStore?.Set("cloudPcIds", value); }
        }
#endif
        /// <summary>The date and time when the bulk action was created. The timestamp type represents date and time information using ISO 8601 format and is always in UTC. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? CreatedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("createdDateTime"); }
            set { BackingStore?.Set("createdDateTime", value); }
        }
        /// <summary>Name of the bulk action.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>Indicates the user principal name (UPN) of the user who initiated this bulk action. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InitiatedByUserPrincipalName
        {
            get { return BackingStore?.Get<string?>("initiatedByUserPrincipalName"); }
            set { BackingStore?.Set("initiatedByUserPrincipalName", value); }
        }
#nullable restore
#else
        public string InitiatedByUserPrincipalName
        {
            get { return BackingStore?.Get<string>("initiatedByUserPrincipalName"); }
            set { BackingStore?.Set("initiatedByUserPrincipalName", value); }
        }
#endif
        /// <summary>Indicates whether the bulk action is scheduled according to the maintenance window. When true, the bulk action uses the maintenance window to schedule the action; false means that the bulk action doesn&apos;t use the maintenance window. The default value is false.</summary>
        public bool? ScheduledDuringMaintenanceWindow
        {
            get { return BackingStore?.Get<bool?>("scheduledDuringMaintenanceWindow"); }
            set { BackingStore?.Set("scheduledDuringMaintenanceWindow", value); }
        }
        /// <summary>Indicates the status of bulk actions. Possible values are pending, succeeded, failed, unknownFutureValue. The default value is pending. Read-only.</summary>
        public global::Microsoft.Graph.Beta.Models.CloudPcBulkActionStatus? Status
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.CloudPcBulkActionStatus?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.CloudPcBulkAction"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.CloudPcBulkAction CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.cloudPcBulkDisasterRecoveryFailback" => new global::Microsoft.Graph.Beta.Models.CloudPcBulkDisasterRecoveryFailback(),
                "#microsoft.graph.cloudPcBulkDisasterRecoveryFailover" => new global::Microsoft.Graph.Beta.Models.CloudPcBulkDisasterRecoveryFailover(),
                "#microsoft.graph.cloudPcBulkModifyDiskEncryptionType" => new global::Microsoft.Graph.Beta.Models.CloudPcBulkModifyDiskEncryptionType(),
                "#microsoft.graph.cloudPcBulkPowerOff" => new global::Microsoft.Graph.Beta.Models.CloudPcBulkPowerOff(),
                "#microsoft.graph.cloudPcBulkPowerOn" => new global::Microsoft.Graph.Beta.Models.CloudPcBulkPowerOn(),
                "#microsoft.graph.cloudPcBulkReprovision" => new global::Microsoft.Graph.Beta.Models.CloudPcBulkReprovision(),
                "#microsoft.graph.cloudPcBulkResize" => new global::Microsoft.Graph.Beta.Models.CloudPcBulkResize(),
                "#microsoft.graph.cloudPcBulkRestart" => new global::Microsoft.Graph.Beta.Models.CloudPcBulkRestart(),
                "#microsoft.graph.cloudPcBulkRestore" => new global::Microsoft.Graph.Beta.Models.CloudPcBulkRestore(),
                "#microsoft.graph.cloudPcBulkTroubleshoot" => new global::Microsoft.Graph.Beta.Models.CloudPcBulkTroubleshoot(),
                _ => new global::Microsoft.Graph.Beta.Models.CloudPcBulkAction(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "actionSummary", n => { ActionSummary = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcBulkActionSummary>(global::Microsoft.Graph.Beta.Models.CloudPcBulkActionSummary.CreateFromDiscriminatorValue); } },
                { "cloudPcIds", n => { CloudPcIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "initiatedByUserPrincipalName", n => { InitiatedByUserPrincipalName = n.GetStringValue(); } },
                { "scheduledDuringMaintenanceWindow", n => { ScheduledDuringMaintenanceWindow = n.GetBoolValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcBulkActionStatus>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.CloudPcBulkActionSummary>("actionSummary", ActionSummary);
            writer.WriteCollectionOfPrimitiveValues<string>("cloudPcIds", CloudPcIds);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteStringValue("initiatedByUserPrincipalName", InitiatedByUserPrincipalName);
            writer.WriteBoolValue("scheduledDuringMaintenanceWindow", ScheduledDuringMaintenanceWindow);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.CloudPcBulkActionStatus>("status", Status);
        }
    }
}
#pragma warning restore CS0618
