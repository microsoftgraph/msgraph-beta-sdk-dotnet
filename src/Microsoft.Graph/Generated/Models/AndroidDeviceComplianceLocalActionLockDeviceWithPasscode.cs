// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    /// <summary>
    /// Local Action Lock Device with Passcode Configuration
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AndroidDeviceComplianceLocalActionLockDeviceWithPasscode : global::Microsoft.Graph.Beta.Models.AndroidDeviceComplianceLocalActionBase, IParsable
    {
        /// <summary>Passcode to reset to Android device. This property is read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Passcode
        {
            get { return BackingStore?.Get<string?>("passcode"); }
            set { BackingStore?.Set("passcode", value); }
        }
#nullable restore
#else
        public string Passcode
        {
            get { return BackingStore?.Get<string>("passcode"); }
            set { BackingStore?.Set("passcode", value); }
        }
#endif
        /// <summary>Number of sign in failures before wiping device, the value can be 4-11. Valid values 4 to 11</summary>
        public int? PasscodeSignInFailureCountBeforeWipe
        {
            get { return BackingStore?.Get<int?>("passcodeSignInFailureCountBeforeWipe"); }
            set { BackingStore?.Set("passcodeSignInFailureCountBeforeWipe", value); }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.AndroidDeviceComplianceLocalActionLockDeviceWithPasscode"/> and sets the default values.
        /// </summary>
        public AndroidDeviceComplianceLocalActionLockDeviceWithPasscode() : base()
        {
            OdataType = "#microsoft.graph.androidDeviceComplianceLocalActionLockDeviceWithPasscode";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.AndroidDeviceComplianceLocalActionLockDeviceWithPasscode"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.AndroidDeviceComplianceLocalActionLockDeviceWithPasscode CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.AndroidDeviceComplianceLocalActionLockDeviceWithPasscode();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "passcode", n => { Passcode = n.GetStringValue(); } },
                { "passcodeSignInFailureCountBeforeWipe", n => { PasscodeSignInFailureCountBeforeWipe = n.GetIntValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteIntValue("passcodeSignInFailureCountBeforeWipe", PasscodeSignInFailureCountBeforeWipe);
        }
    }
}
#pragma warning restore CS0618
