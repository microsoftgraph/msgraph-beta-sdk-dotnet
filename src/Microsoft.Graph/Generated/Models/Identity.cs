// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Graph.Beta.Models.CallRecords;
using Microsoft.Graph.Beta.Models.Security;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Identity : IAdditionalDataHolder, IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>The display name of the identity. For drive items, the display name might not always be available or up to date. For example, if a user changes their display name the API might show the new value in a future response, but the items associated with the user don&apos;t show up as changed when using delta.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>Unique identifier for the identity or actor. For example, in the access reviews decisions API, this property might record the id of the principal, that is, the group, user, or application that&apos;s subject to review.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id
        {
            get { return BackingStore?.Get<string?>("id"); }
            set { BackingStore?.Set("id", value); }
        }
#nullable restore
#else
        public string Id
        {
            get { return BackingStore?.Get<string>("id"); }
            set { BackingStore?.Set("id", value); }
        }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType
        {
            get { return BackingStore?.Get<string?>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#nullable restore
#else
        public string OdataType
        {
            get { return BackingStore?.Get<string>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.Identity"/> and sets the default values.
        /// </summary>
        public Identity()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Identity"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Microsoft.Graph.Beta.Models.Identity CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.auditUserIdentity" => new global::Microsoft.Graph.Beta.Models.AuditUserIdentity(),
                "#microsoft.graph.azureCommunicationServicesUserIdentity" => new global::Microsoft.Graph.Beta.Models.AzureCommunicationServicesUserIdentity(),
                "#microsoft.graph.callRecords.userIdentity" => new global::Microsoft.Graph.Beta.Models.CallRecords.UserIdentity(),
                "#microsoft.graph.communicationsApplicationIdentity" => new global::Microsoft.Graph.Beta.Models.CommunicationsApplicationIdentity(),
                "#microsoft.graph.communicationsApplicationInstanceIdentity" => new global::Microsoft.Graph.Beta.Models.CommunicationsApplicationInstanceIdentity(),
                "#microsoft.graph.communicationsEncryptedIdentity" => new global::Microsoft.Graph.Beta.Models.CommunicationsEncryptedIdentity(),
                "#microsoft.graph.communicationsGuestIdentity" => new global::Microsoft.Graph.Beta.Models.CommunicationsGuestIdentity(),
                "#microsoft.graph.communicationsPhoneIdentity" => new global::Microsoft.Graph.Beta.Models.CommunicationsPhoneIdentity(),
                "#microsoft.graph.communicationsUserIdentity" => new global::Microsoft.Graph.Beta.Models.CommunicationsUserIdentity(),
                "#microsoft.graph.emailIdentity" => new global::Microsoft.Graph.Beta.Models.EmailIdentity(),
                "#microsoft.graph.initiator" => new global::Microsoft.Graph.Beta.Models.Initiator(),
                "#microsoft.graph.programResource" => new global::Microsoft.Graph.Beta.Models.ProgramResource(),
                "#microsoft.graph.provisionedIdentity" => new global::Microsoft.Graph.Beta.Models.ProvisionedIdentity(),
                "#microsoft.graph.provisioningServicePrincipal" => new global::Microsoft.Graph.Beta.Models.ProvisioningServicePrincipal(),
                "#microsoft.graph.provisioningSystem" => new global::Microsoft.Graph.Beta.Models.ProvisioningSystem(),
                "#microsoft.graph.security.submissionUserIdentity" => new global::Microsoft.Graph.Beta.Models.Security.SubmissionUserIdentity(),
                "#microsoft.graph.servicePrincipalIdentity" => new global::Microsoft.Graph.Beta.Models.ServicePrincipalIdentity(),
                "#microsoft.graph.sharePointIdentity" => new global::Microsoft.Graph.Beta.Models.SharePointIdentity(),
                "#microsoft.graph.sourceProvisionedIdentity" => new global::Microsoft.Graph.Beta.Models.SourceProvisionedIdentity(),
                "#microsoft.graph.targetProvisionedIdentity" => new global::Microsoft.Graph.Beta.Models.TargetProvisionedIdentity(),
                "#microsoft.graph.teamworkApplicationIdentity" => new global::Microsoft.Graph.Beta.Models.TeamworkApplicationIdentity(),
                "#microsoft.graph.teamworkConversationIdentity" => new global::Microsoft.Graph.Beta.Models.TeamworkConversationIdentity(),
                "#microsoft.graph.teamworkTagIdentity" => new global::Microsoft.Graph.Beta.Models.TeamworkTagIdentity(),
                "#microsoft.graph.teamworkUserIdentity" => new global::Microsoft.Graph.Beta.Models.TeamworkUserIdentity(),
                "#microsoft.graph.userIdentity" => new global::Microsoft.Graph.Beta.Models.UserIdentity(),
                _ => new global::Microsoft.Graph.Beta.Models.Identity(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteStringValue("id", Id);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
