// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models.ManagedTenants
{
    #pragma warning disable CS1591
    public class ManagedTenant : Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Aggregate view of device compliance policies across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.AggregatedPolicyCompliance>? AggregatedPolicyCompliances
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.AggregatedPolicyCompliance>?>("aggregatedPolicyCompliances"); }
            set { BackingStore?.Set("aggregatedPolicyCompliances", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.AggregatedPolicyCompliance> AggregatedPolicyCompliances
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.AggregatedPolicyCompliance>>("aggregatedPolicyCompliances"); }
            set { BackingStore?.Set("aggregatedPolicyCompliances", value); }
        }
#endif
        /// <summary>The appPerformances property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.AppPerformance>? AppPerformances
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.AppPerformance>?>("appPerformances"); }
            set { BackingStore?.Set("appPerformances", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.AppPerformance> AppPerformances
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.AppPerformance>>("appPerformances"); }
            set { BackingStore?.Set("appPerformances", value); }
        }
#endif
        /// <summary>The collection of audit events across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.AuditEvent>? AuditEvents
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.AuditEvent>?>("auditEvents"); }
            set { BackingStore?.Set("auditEvents", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.AuditEvent> AuditEvents
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.AuditEvent>>("auditEvents"); }
            set { BackingStore?.Set("auditEvents", value); }
        }
#endif
        /// <summary>The collection of cloud PC connections across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcConnection>? CloudPcConnections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcConnection>?>("cloudPcConnections"); }
            set { BackingStore?.Set("cloudPcConnections", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcConnection> CloudPcConnections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcConnection>>("cloudPcConnections"); }
            set { BackingStore?.Set("cloudPcConnections", value); }
        }
#endif
        /// <summary>The collection of cloud PC devices across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcDevice>? CloudPcDevices
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcDevice>?>("cloudPcDevices"); }
            set { BackingStore?.Set("cloudPcDevices", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcDevice> CloudPcDevices
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcDevice>>("cloudPcDevices"); }
            set { BackingStore?.Set("cloudPcDevices", value); }
        }
#endif
        /// <summary>Overview of cloud PC information across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcOverview>? CloudPcsOverview
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcOverview>?>("cloudPcsOverview"); }
            set { BackingStore?.Set("cloudPcsOverview", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcOverview> CloudPcsOverview
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcOverview>>("cloudPcsOverview"); }
            set { BackingStore?.Set("cloudPcsOverview", value); }
        }
#endif
        /// <summary>Aggregate view of conditional access policy coverage across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ConditionalAccessPolicyCoverage>? ConditionalAccessPolicyCoverages
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ConditionalAccessPolicyCoverage>?>("conditionalAccessPolicyCoverages"); }
            set { BackingStore?.Set("conditionalAccessPolicyCoverages", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ConditionalAccessPolicyCoverage> ConditionalAccessPolicyCoverages
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ConditionalAccessPolicyCoverage>>("conditionalAccessPolicyCoverages"); }
            set { BackingStore?.Set("conditionalAccessPolicyCoverages", value); }
        }
#endif
        /// <summary>Summary information for user registration for multi-factor authentication and self service password reset across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.CredentialUserRegistrationsSummary>? CredentialUserRegistrationsSummaries
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.CredentialUserRegistrationsSummary>?>("credentialUserRegistrationsSummaries"); }
            set { BackingStore?.Set("credentialUserRegistrationsSummaries", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.CredentialUserRegistrationsSummary> CredentialUserRegistrationsSummaries
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.CredentialUserRegistrationsSummary>>("credentialUserRegistrationsSummaries"); }
            set { BackingStore?.Set("credentialUserRegistrationsSummaries", value); }
        }
#endif
        /// <summary>The deviceAppPerformances property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceAppPerformance>? DeviceAppPerformances
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceAppPerformance>?>("deviceAppPerformances"); }
            set { BackingStore?.Set("deviceAppPerformances", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceAppPerformance> DeviceAppPerformances
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceAppPerformance>>("deviceAppPerformances"); }
            set { BackingStore?.Set("deviceAppPerformances", value); }
        }
#endif
        /// <summary>Summary information for device compliance policy setting states across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceCompliancePolicySettingStateSummary>? DeviceCompliancePolicySettingStateSummaries
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceCompliancePolicySettingStateSummary>?>("deviceCompliancePolicySettingStateSummaries"); }
            set { BackingStore?.Set("deviceCompliancePolicySettingStateSummaries", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceCompliancePolicySettingStateSummary> DeviceCompliancePolicySettingStateSummaries
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceCompliancePolicySettingStateSummary>>("deviceCompliancePolicySettingStateSummaries"); }
            set { BackingStore?.Set("deviceCompliancePolicySettingStateSummaries", value); }
        }
#endif
        /// <summary>The deviceHealthStatuses property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceHealthStatus>? DeviceHealthStatuses
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceHealthStatus>?>("deviceHealthStatuses"); }
            set { BackingStore?.Set("deviceHealthStatuses", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceHealthStatus> DeviceHealthStatuses
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceHealthStatus>>("deviceHealthStatuses"); }
            set { BackingStore?.Set("deviceHealthStatuses", value); }
        }
#endif
        /// <summary>The collection of compliance for managed devices across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceCompliance>? ManagedDeviceCompliances
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceCompliance>?>("managedDeviceCompliances"); }
            set { BackingStore?.Set("managedDeviceCompliances", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceCompliance> ManagedDeviceCompliances
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceCompliance>>("managedDeviceCompliances"); }
            set { BackingStore?.Set("managedDeviceCompliances", value); }
        }
#endif
        /// <summary>Trend insights for device compliance across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceComplianceTrend>? ManagedDeviceComplianceTrends
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceComplianceTrend>?>("managedDeviceComplianceTrends"); }
            set { BackingStore?.Set("managedDeviceComplianceTrends", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceComplianceTrend> ManagedDeviceComplianceTrends
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceComplianceTrend>>("managedDeviceComplianceTrends"); }
            set { BackingStore?.Set("managedDeviceComplianceTrends", value); }
        }
#endif
        /// <summary>The managedTenantAlertLogs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertLog>? ManagedTenantAlertLogs
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertLog>?>("managedTenantAlertLogs"); }
            set { BackingStore?.Set("managedTenantAlertLogs", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertLog> ManagedTenantAlertLogs
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertLog>>("managedTenantAlertLogs"); }
            set { BackingStore?.Set("managedTenantAlertLogs", value); }
        }
#endif
        /// <summary>The managedTenantAlertRuleDefinitions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRuleDefinition>? ManagedTenantAlertRuleDefinitions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRuleDefinition>?>("managedTenantAlertRuleDefinitions"); }
            set { BackingStore?.Set("managedTenantAlertRuleDefinitions", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRuleDefinition> ManagedTenantAlertRuleDefinitions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRuleDefinition>>("managedTenantAlertRuleDefinitions"); }
            set { BackingStore?.Set("managedTenantAlertRuleDefinitions", value); }
        }
#endif
        /// <summary>The managedTenantAlertRules property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRule>? ManagedTenantAlertRules
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRule>?>("managedTenantAlertRules"); }
            set { BackingStore?.Set("managedTenantAlertRules", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRule> ManagedTenantAlertRules
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRule>>("managedTenantAlertRules"); }
            set { BackingStore?.Set("managedTenantAlertRules", value); }
        }
#endif
        /// <summary>The managedTenantAlerts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlert>? ManagedTenantAlerts
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlert>?>("managedTenantAlerts"); }
            set { BackingStore?.Set("managedTenantAlerts", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlert> ManagedTenantAlerts
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlert>>("managedTenantAlerts"); }
            set { BackingStore?.Set("managedTenantAlerts", value); }
        }
#endif
        /// <summary>The managedTenantApiNotifications property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantApiNotification>? ManagedTenantApiNotifications
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantApiNotification>?>("managedTenantApiNotifications"); }
            set { BackingStore?.Set("managedTenantApiNotifications", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantApiNotification> ManagedTenantApiNotifications
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantApiNotification>>("managedTenantApiNotifications"); }
            set { BackingStore?.Set("managedTenantApiNotifications", value); }
        }
#endif
        /// <summary>The managedTenantEmailNotifications property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantEmailNotification>? ManagedTenantEmailNotifications
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantEmailNotification>?>("managedTenantEmailNotifications"); }
            set { BackingStore?.Set("managedTenantEmailNotifications", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantEmailNotification> ManagedTenantEmailNotifications
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantEmailNotification>>("managedTenantEmailNotifications"); }
            set { BackingStore?.Set("managedTenantEmailNotifications", value); }
        }
#endif
        /// <summary>The managedTenantTicketingEndpoints property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantTicketingEndpoint>? ManagedTenantTicketingEndpoints
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantTicketingEndpoint>?>("managedTenantTicketingEndpoints"); }
            set { BackingStore?.Set("managedTenantTicketingEndpoints", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantTicketingEndpoint> ManagedTenantTicketingEndpoints
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantTicketingEndpoint>>("managedTenantTicketingEndpoints"); }
            set { BackingStore?.Set("managedTenantTicketingEndpoints", value); }
        }
#endif
        /// <summary>The collection of baseline management actions across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementAction>? ManagementActions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementAction>?>("managementActions"); }
            set { BackingStore?.Set("managementActions", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementAction> ManagementActions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementAction>>("managementActions"); }
            set { BackingStore?.Set("managementActions", value); }
        }
#endif
        /// <summary>The tenant level status of management actions across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementActionTenantDeploymentStatus>? ManagementActionTenantDeploymentStatuses
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementActionTenantDeploymentStatus>?>("managementActionTenantDeploymentStatuses"); }
            set { BackingStore?.Set("managementActionTenantDeploymentStatuses", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementActionTenantDeploymentStatus> ManagementActionTenantDeploymentStatuses
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementActionTenantDeploymentStatus>>("managementActionTenantDeploymentStatuses"); }
            set { BackingStore?.Set("managementActionTenantDeploymentStatuses", value); }
        }
#endif
        /// <summary>The collection of baseline management intents across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementIntent>? ManagementIntents
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementIntent>?>("managementIntents"); }
            set { BackingStore?.Set("managementIntents", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementIntent> ManagementIntents
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementIntent>>("managementIntents"); }
            set { BackingStore?.Set("managementIntents", value); }
        }
#endif
        /// <summary>The managementTemplateCollections property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollection>? ManagementTemplateCollections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollection>?>("managementTemplateCollections"); }
            set { BackingStore?.Set("managementTemplateCollections", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollection> ManagementTemplateCollections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollection>>("managementTemplateCollections"); }
            set { BackingStore?.Set("managementTemplateCollections", value); }
        }
#endif
        /// <summary>The managementTemplateCollectionTenantSummaries property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollectionTenantSummary>? ManagementTemplateCollectionTenantSummaries
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollectionTenantSummary>?>("managementTemplateCollectionTenantSummaries"); }
            set { BackingStore?.Set("managementTemplateCollectionTenantSummaries", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollectionTenantSummary> ManagementTemplateCollectionTenantSummaries
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollectionTenantSummary>>("managementTemplateCollectionTenantSummaries"); }
            set { BackingStore?.Set("managementTemplateCollectionTenantSummaries", value); }
        }
#endif
        /// <summary>The collection of baseline management templates across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplate>? ManagementTemplates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplate>?>("managementTemplates"); }
            set { BackingStore?.Set("managementTemplates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplate> ManagementTemplates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplate>>("managementTemplates"); }
            set { BackingStore?.Set("managementTemplates", value); }
        }
#endif
        /// <summary>The managementTemplateSteps property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStep>? ManagementTemplateSteps
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStep>?>("managementTemplateSteps"); }
            set { BackingStore?.Set("managementTemplateSteps", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStep> ManagementTemplateSteps
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStep>>("managementTemplateSteps"); }
            set { BackingStore?.Set("managementTemplateSteps", value); }
        }
#endif
        /// <summary>The managementTemplateStepTenantSummaries property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepTenantSummary>? ManagementTemplateStepTenantSummaries
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepTenantSummary>?>("managementTemplateStepTenantSummaries"); }
            set { BackingStore?.Set("managementTemplateStepTenantSummaries", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepTenantSummary> ManagementTemplateStepTenantSummaries
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepTenantSummary>>("managementTemplateStepTenantSummaries"); }
            set { BackingStore?.Set("managementTemplateStepTenantSummaries", value); }
        }
#endif
        /// <summary>The managementTemplateStepVersions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepVersion>? ManagementTemplateStepVersions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepVersion>?>("managementTemplateStepVersions"); }
            set { BackingStore?.Set("managementTemplateStepVersions", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepVersion> ManagementTemplateStepVersions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepVersion>>("managementTemplateStepVersions"); }
            set { BackingStore?.Set("managementTemplateStepVersions", value); }
        }
#endif
        /// <summary>The collection of role assignments to a signed-in user for a managed tenant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.MyRole>? MyRoles
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.MyRole>?>("myRoles"); }
            set { BackingStore?.Set("myRoles", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.MyRole> MyRoles
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.MyRole>>("myRoles"); }
            set { BackingStore?.Set("myRoles", value); }
        }
#endif
        /// <summary>The collection of a logical grouping of managed tenants used by the multi-tenant management platform.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantGroup>? TenantGroups
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantGroup>?>("tenantGroups"); }
            set { BackingStore?.Set("tenantGroups", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantGroup> TenantGroups
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantGroup>>("tenantGroups"); }
            set { BackingStore?.Set("tenantGroups", value); }
        }
#endif
        /// <summary>The collection of tenants associated with the managing entity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.Tenant>? Tenants
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.Tenant>?>("tenants"); }
            set { BackingStore?.Set("tenants", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.Tenant> Tenants
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.Tenant>>("tenants"); }
            set { BackingStore?.Set("tenants", value); }
        }
#endif
        /// <summary>The collection of tenant level customized information across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantCustomizedInformation>? TenantsCustomizedInformation
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantCustomizedInformation>?>("tenantsCustomizedInformation"); }
            set { BackingStore?.Set("tenantsCustomizedInformation", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantCustomizedInformation> TenantsCustomizedInformation
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantCustomizedInformation>>("tenantsCustomizedInformation"); }
            set { BackingStore?.Set("tenantsCustomizedInformation", value); }
        }
#endif
        /// <summary>The collection tenant level detailed information across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantDetailedInformation>? TenantsDetailedInformation
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantDetailedInformation>?>("tenantsDetailedInformation"); }
            set { BackingStore?.Set("tenantsDetailedInformation", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantDetailedInformation> TenantsDetailedInformation
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantDetailedInformation>>("tenantsDetailedInformation"); }
            set { BackingStore?.Set("tenantsDetailedInformation", value); }
        }
#endif
        /// <summary>The collection of tenant tags across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantTag>? TenantTags
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantTag>?>("tenantTags"); }
            set { BackingStore?.Set("tenantTags", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantTag> TenantTags
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.TenantTag>>("tenantTags"); }
            set { BackingStore?.Set("tenantTags", value); }
        }
#endif
        /// <summary>The state of malware for Windows devices, registered with Microsoft Endpoint Manager, across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.WindowsDeviceMalwareState>? WindowsDeviceMalwareStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.WindowsDeviceMalwareState>?>("windowsDeviceMalwareStates"); }
            set { BackingStore?.Set("windowsDeviceMalwareStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.WindowsDeviceMalwareState> WindowsDeviceMalwareStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.WindowsDeviceMalwareState>>("windowsDeviceMalwareStates"); }
            set { BackingStore?.Set("windowsDeviceMalwareStates", value); }
        }
#endif
        /// <summary>The protection state for Windows devices, registered with Microsoft Endpoint Manager, across managed tenants.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.WindowsProtectionState>? WindowsProtectionStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.WindowsProtectionState>?>("windowsProtectionStates"); }
            set { BackingStore?.Set("windowsProtectionStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedTenants.WindowsProtectionState> WindowsProtectionStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedTenants.WindowsProtectionState>>("windowsProtectionStates"); }
            set { BackingStore?.Set("windowsProtectionStates", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "aggregatedPolicyCompliances", n => { AggregatedPolicyCompliances = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.AggregatedPolicyCompliance>(Microsoft.Graph.Beta.Models.ManagedTenants.AggregatedPolicyCompliance.CreateFromDiscriminatorValue)?.ToList(); } },
                { "appPerformances", n => { AppPerformances = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.AppPerformance>(Microsoft.Graph.Beta.Models.ManagedTenants.AppPerformance.CreateFromDiscriminatorValue)?.ToList(); } },
                { "auditEvents", n => { AuditEvents = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.AuditEvent>(Microsoft.Graph.Beta.Models.ManagedTenants.AuditEvent.CreateFromDiscriminatorValue)?.ToList(); } },
                { "cloudPcConnections", n => { CloudPcConnections = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcConnection>(Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcConnection.CreateFromDiscriminatorValue)?.ToList(); } },
                { "cloudPcDevices", n => { CloudPcDevices = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcDevice>(Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcDevice.CreateFromDiscriminatorValue)?.ToList(); } },
                { "cloudPcsOverview", n => { CloudPcsOverview = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcOverview>(Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcOverview.CreateFromDiscriminatorValue)?.ToList(); } },
                { "conditionalAccessPolicyCoverages", n => { ConditionalAccessPolicyCoverages = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ConditionalAccessPolicyCoverage>(Microsoft.Graph.Beta.Models.ManagedTenants.ConditionalAccessPolicyCoverage.CreateFromDiscriminatorValue)?.ToList(); } },
                { "credentialUserRegistrationsSummaries", n => { CredentialUserRegistrationsSummaries = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.CredentialUserRegistrationsSummary>(Microsoft.Graph.Beta.Models.ManagedTenants.CredentialUserRegistrationsSummary.CreateFromDiscriminatorValue)?.ToList(); } },
                { "deviceAppPerformances", n => { DeviceAppPerformances = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceAppPerformance>(Microsoft.Graph.Beta.Models.ManagedTenants.DeviceAppPerformance.CreateFromDiscriminatorValue)?.ToList(); } },
                { "deviceCompliancePolicySettingStateSummaries", n => { DeviceCompliancePolicySettingStateSummaries = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceCompliancePolicySettingStateSummary>(Microsoft.Graph.Beta.Models.ManagedTenants.DeviceCompliancePolicySettingStateSummary.CreateFromDiscriminatorValue)?.ToList(); } },
                { "deviceHealthStatuses", n => { DeviceHealthStatuses = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceHealthStatus>(Microsoft.Graph.Beta.Models.ManagedTenants.DeviceHealthStatus.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedDeviceComplianceTrends", n => { ManagedDeviceComplianceTrends = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceComplianceTrend>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceComplianceTrend.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedDeviceCompliances", n => { ManagedDeviceCompliances = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceCompliance>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceCompliance.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedTenantAlertLogs", n => { ManagedTenantAlertLogs = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertLog>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertLog.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedTenantAlertRuleDefinitions", n => { ManagedTenantAlertRuleDefinitions = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRuleDefinition>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRuleDefinition.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedTenantAlertRules", n => { ManagedTenantAlertRules = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRule>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRule.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedTenantAlerts", n => { ManagedTenantAlerts = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlert>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlert.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedTenantApiNotifications", n => { ManagedTenantApiNotifications = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantApiNotification>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantApiNotification.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedTenantEmailNotifications", n => { ManagedTenantEmailNotifications = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantEmailNotification>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantEmailNotification.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedTenantTicketingEndpoints", n => { ManagedTenantTicketingEndpoints = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantTicketingEndpoint>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantTicketingEndpoint.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managementActionTenantDeploymentStatuses", n => { ManagementActionTenantDeploymentStatuses = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementActionTenantDeploymentStatus>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagementActionTenantDeploymentStatus.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managementActions", n => { ManagementActions = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementAction>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagementAction.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managementIntents", n => { ManagementIntents = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementIntent>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagementIntent.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managementTemplateCollectionTenantSummaries", n => { ManagementTemplateCollectionTenantSummaries = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollectionTenantSummary>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollectionTenantSummary.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managementTemplateCollections", n => { ManagementTemplateCollections = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollection>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollection.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managementTemplateStepTenantSummaries", n => { ManagementTemplateStepTenantSummaries = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepTenantSummary>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepTenantSummary.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managementTemplateStepVersions", n => { ManagementTemplateStepVersions = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepVersion>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepVersion.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managementTemplateSteps", n => { ManagementTemplateSteps = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStep>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStep.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managementTemplates", n => { ManagementTemplates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplate>(Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplate.CreateFromDiscriminatorValue)?.ToList(); } },
                { "myRoles", n => { MyRoles = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.MyRole>(Microsoft.Graph.Beta.Models.ManagedTenants.MyRole.CreateFromDiscriminatorValue)?.ToList(); } },
                { "tenantGroups", n => { TenantGroups = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.TenantGroup>(Microsoft.Graph.Beta.Models.ManagedTenants.TenantGroup.CreateFromDiscriminatorValue)?.ToList(); } },
                { "tenantTags", n => { TenantTags = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.TenantTag>(Microsoft.Graph.Beta.Models.ManagedTenants.TenantTag.CreateFromDiscriminatorValue)?.ToList(); } },
                { "tenants", n => { Tenants = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.Tenant>(Microsoft.Graph.Beta.Models.ManagedTenants.Tenant.CreateFromDiscriminatorValue)?.ToList(); } },
                { "tenantsCustomizedInformation", n => { TenantsCustomizedInformation = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.TenantCustomizedInformation>(Microsoft.Graph.Beta.Models.ManagedTenants.TenantCustomizedInformation.CreateFromDiscriminatorValue)?.ToList(); } },
                { "tenantsDetailedInformation", n => { TenantsDetailedInformation = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.TenantDetailedInformation>(Microsoft.Graph.Beta.Models.ManagedTenants.TenantDetailedInformation.CreateFromDiscriminatorValue)?.ToList(); } },
                { "windowsDeviceMalwareStates", n => { WindowsDeviceMalwareStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.WindowsDeviceMalwareState>(Microsoft.Graph.Beta.Models.ManagedTenants.WindowsDeviceMalwareState.CreateFromDiscriminatorValue)?.ToList(); } },
                { "windowsProtectionStates", n => { WindowsProtectionStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.WindowsProtectionState>(Microsoft.Graph.Beta.Models.ManagedTenants.WindowsProtectionState.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.AggregatedPolicyCompliance>("aggregatedPolicyCompliances", AggregatedPolicyCompliances);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.AppPerformance>("appPerformances", AppPerformances);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.AuditEvent>("auditEvents", AuditEvents);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcConnection>("cloudPcConnections", CloudPcConnections);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcDevice>("cloudPcDevices", CloudPcDevices);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.CloudPcOverview>("cloudPcsOverview", CloudPcsOverview);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ConditionalAccessPolicyCoverage>("conditionalAccessPolicyCoverages", ConditionalAccessPolicyCoverages);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.CredentialUserRegistrationsSummary>("credentialUserRegistrationsSummaries", CredentialUserRegistrationsSummaries);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceAppPerformance>("deviceAppPerformances", DeviceAppPerformances);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceCompliancePolicySettingStateSummary>("deviceCompliancePolicySettingStateSummaries", DeviceCompliancePolicySettingStateSummaries);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.DeviceHealthStatus>("deviceHealthStatuses", DeviceHealthStatuses);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceCompliance>("managedDeviceCompliances", ManagedDeviceCompliances);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedDeviceComplianceTrend>("managedDeviceComplianceTrends", ManagedDeviceComplianceTrends);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertLog>("managedTenantAlertLogs", ManagedTenantAlertLogs);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRuleDefinition>("managedTenantAlertRuleDefinitions", ManagedTenantAlertRuleDefinitions);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlertRule>("managedTenantAlertRules", ManagedTenantAlertRules);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantAlert>("managedTenantAlerts", ManagedTenantAlerts);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantApiNotification>("managedTenantApiNotifications", ManagedTenantApiNotifications);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantEmailNotification>("managedTenantEmailNotifications", ManagedTenantEmailNotifications);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenantTicketingEndpoint>("managedTenantTicketingEndpoints", ManagedTenantTicketingEndpoints);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementAction>("managementActions", ManagementActions);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementActionTenantDeploymentStatus>("managementActionTenantDeploymentStatuses", ManagementActionTenantDeploymentStatuses);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementIntent>("managementIntents", ManagementIntents);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollection>("managementTemplateCollections", ManagementTemplateCollections);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateCollectionTenantSummary>("managementTemplateCollectionTenantSummaries", ManagementTemplateCollectionTenantSummaries);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplate>("managementTemplates", ManagementTemplates);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStep>("managementTemplateSteps", ManagementTemplateSteps);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepTenantSummary>("managementTemplateStepTenantSummaries", ManagementTemplateStepTenantSummaries);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.ManagementTemplateStepVersion>("managementTemplateStepVersions", ManagementTemplateStepVersions);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.MyRole>("myRoles", MyRoles);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.TenantGroup>("tenantGroups", TenantGroups);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.Tenant>("tenants", Tenants);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.TenantCustomizedInformation>("tenantsCustomizedInformation", TenantsCustomizedInformation);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.TenantDetailedInformation>("tenantsDetailedInformation", TenantsDetailedInformation);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.TenantTag>("tenantTags", TenantTags);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.WindowsDeviceMalwareState>("windowsDeviceMalwareStates", WindowsDeviceMalwareStates);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedTenants.WindowsProtectionState>("windowsProtectionStates", WindowsProtectionStates);
        }
    }
}
