// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    /// <summary>
    /// UnsupportedDeviceConfiguration is used when an entity cannot be mapped to another model-compliant subtype of deviceConfiguration.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class UnsupportedDeviceConfiguration : global::Microsoft.Graph.Beta.Models.DeviceConfiguration, IParsable
    {
        /// <summary>Details describing why the entity is unsupported. This collection can contain a maximum of 1000 elements.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.UnsupportedDeviceConfigurationDetail>? Details
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.UnsupportedDeviceConfigurationDetail>?>("details"); }
            set { BackingStore?.Set("details", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.UnsupportedDeviceConfigurationDetail> Details
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.UnsupportedDeviceConfigurationDetail>>("details"); }
            set { BackingStore?.Set("details", value); }
        }
#endif
        /// <summary>The type of entity that would be returned otherwise.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginalEntityTypeName
        {
            get { return BackingStore?.Get<string?>("originalEntityTypeName"); }
            set { BackingStore?.Set("originalEntityTypeName", value); }
        }
#nullable restore
#else
        public string OriginalEntityTypeName
        {
            get { return BackingStore?.Get<string>("originalEntityTypeName"); }
            set { BackingStore?.Set("originalEntityTypeName", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.UnsupportedDeviceConfiguration"/> and sets the default values.
        /// </summary>
        public UnsupportedDeviceConfiguration() : base()
        {
            OdataType = "#microsoft.graph.unsupportedDeviceConfiguration";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.UnsupportedDeviceConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.UnsupportedDeviceConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.UnsupportedDeviceConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "details", n => { Details = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.UnsupportedDeviceConfigurationDetail>(global::Microsoft.Graph.Beta.Models.UnsupportedDeviceConfigurationDetail.CreateFromDiscriminatorValue)?.AsList(); } },
                { "originalEntityTypeName", n => { OriginalEntityTypeName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.UnsupportedDeviceConfigurationDetail>("details", Details);
            writer.WriteStringValue("originalEntityTypeName", OriginalEntityTypeName);
        }
    }
}
#pragma warning restore CS0618
