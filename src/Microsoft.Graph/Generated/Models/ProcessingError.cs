// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProcessingError : global::Microsoft.Graph.Beta.Models.ClassificationError, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The errorType property</summary>
        public global::Microsoft.Graph.Beta.Models.ContentProcessingErrorType? ErrorType
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ContentProcessingErrorType?>("errorType"); }
            set { BackingStore?.Set("errorType", value); }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.ProcessingError"/> and sets the default values.
        /// </summary>
        public ProcessingError() : base()
        {
            OdataType = "#microsoft.graph.processingError";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.ProcessingError"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.ProcessingError CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.ProcessingError();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "errorType", n => { ErrorType = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.ContentProcessingErrorType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.ContentProcessingErrorType>("errorType", ErrorType);
        }
    }
}
#pragma warning restore CS0618
