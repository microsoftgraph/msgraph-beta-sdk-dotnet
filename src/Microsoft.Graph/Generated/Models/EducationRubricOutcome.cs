// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class EducationRubricOutcome : global::Microsoft.Graph.Beta.Models.EducationOutcome, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>A copy of the rubricQualityFeedback property that is made when the grade is released to the student.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel>? PublishedRubricQualityFeedback
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel>?>("publishedRubricQualityFeedback"); }
            set { BackingStore?.Set("publishedRubricQualityFeedback", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel> PublishedRubricQualityFeedback
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel>>("publishedRubricQualityFeedback"); }
            set { BackingStore?.Set("publishedRubricQualityFeedback", value); }
        }
#endif
        /// <summary>A copy of the rubricQualitySelectedLevels property that is made when the grade is released to the student.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel>? PublishedRubricQualitySelectedLevels
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel>?>("publishedRubricQualitySelectedLevels"); }
            set { BackingStore?.Set("publishedRubricQualitySelectedLevels", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel> PublishedRubricQualitySelectedLevels
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel>>("publishedRubricQualitySelectedLevels"); }
            set { BackingStore?.Set("publishedRubricQualitySelectedLevels", value); }
        }
#endif
        /// <summary>A collection of specific feedback for each quality of this rubric.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel>? RubricQualityFeedback
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel>?>("rubricQualityFeedback"); }
            set { BackingStore?.Set("rubricQualityFeedback", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel> RubricQualityFeedback
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel>>("rubricQualityFeedback"); }
            set { BackingStore?.Set("rubricQualityFeedback", value); }
        }
#endif
        /// <summary>The level that the teacher has selected for each quality while grading this assignment.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel>? RubricQualitySelectedLevels
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel>?>("rubricQualitySelectedLevels"); }
            set { BackingStore?.Set("rubricQualitySelectedLevels", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel> RubricQualitySelectedLevels
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel>>("rubricQualitySelectedLevels"); }
            set { BackingStore?.Set("rubricQualitySelectedLevels", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.EducationRubricOutcome"/> and sets the default values.
        /// </summary>
        public EducationRubricOutcome() : base()
        {
            OdataType = "#microsoft.graph.educationRubricOutcome";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.EducationRubricOutcome"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.EducationRubricOutcome CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.EducationRubricOutcome();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "publishedRubricQualityFeedback", n => { PublishedRubricQualityFeedback = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel>(global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel.CreateFromDiscriminatorValue)?.AsList(); } },
                { "publishedRubricQualitySelectedLevels", n => { PublishedRubricQualitySelectedLevels = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel>(global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel.CreateFromDiscriminatorValue)?.AsList(); } },
                { "rubricQualityFeedback", n => { RubricQualityFeedback = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel>(global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel.CreateFromDiscriminatorValue)?.AsList(); } },
                { "rubricQualitySelectedLevels", n => { RubricQualitySelectedLevels = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel>(global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel>("publishedRubricQualityFeedback", PublishedRubricQualityFeedback);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel>("publishedRubricQualitySelectedLevels", PublishedRubricQualitySelectedLevels);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.RubricQualityFeedbackModel>("rubricQualityFeedback", RubricQualityFeedback);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.RubricQualitySelectedColumnModel>("rubricQualitySelectedLevels", RubricQualitySelectedLevels);
        }
    }
}
#pragma warning restore CS0618
