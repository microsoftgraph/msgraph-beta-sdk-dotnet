// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Desk : global::Microsoft.Graph.Beta.Models.Place, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The name of the display device (for example, monitor or projector) that is available at the desk.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayDeviceName
        {
            get { return BackingStore?.Get<string?>("displayDeviceName"); }
            set { BackingStore?.Set("displayDeviceName", value); }
        }
#nullable restore
#else
        public string DisplayDeviceName
        {
            get { return BackingStore?.Get<string>("displayDeviceName"); }
            set { BackingStore?.Set("displayDeviceName", value); }
        }
#endif
        /// <summary>The mailbox object id and email address that are associated with the desk.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.MailboxDetails? MailboxDetails
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.MailboxDetails?>("mailboxDetails"); }
            set { BackingStore?.Set("mailboxDetails", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.MailboxDetails MailboxDetails
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.MailboxDetails>("mailboxDetails"); }
            set { BackingStore?.Set("mailboxDetails", value); }
        }
#endif
        /// <summary>The mode of the desk. The supported modes are:assignedPlaceMode - Desks that are assigned to a user.reservablePlaceMode - Desks that can be booked in advance using desk reservation tools.dropInPlaceMode - First come, first served desks. When you plug into a peripheral on one of these desks, the desk is booked for you, assuming the peripheral is associated with the desk in the Microsoft Teams Rooms Pro management portal.offlinePlaceMode - Desk that is taken down for maintenance or marked as not reservable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.PlaceMode? Mode
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.PlaceMode?>("mode"); }
            set { BackingStore?.Set("mode", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.PlaceMode Mode
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.PlaceMode>("mode"); }
            set { BackingStore?.Set("mode", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.Desk"/> and sets the default values.
        /// </summary>
        public Desk() : base()
        {
            OdataType = "#microsoft.graph.desk";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Desk"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.Desk CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.Desk();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "displayDeviceName", n => { DisplayDeviceName = n.GetStringValue(); } },
                { "mailboxDetails", n => { MailboxDetails = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.MailboxDetails>(global::Microsoft.Graph.Beta.Models.MailboxDetails.CreateFromDiscriminatorValue); } },
                { "mode", n => { Mode = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.PlaceMode>(global::Microsoft.Graph.Beta.Models.PlaceMode.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("displayDeviceName", DisplayDeviceName);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.MailboxDetails>("mailboxDetails", MailboxDetails);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.PlaceMode>("mode", Mode);
        }
    }
}
#pragma warning restore CS0618
