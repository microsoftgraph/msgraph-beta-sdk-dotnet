// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class EducationSpeakerProgressResource : global::Microsoft.Graph.Beta.Models.EducationResource, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The aiFeedbackCriteria property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.EducationAiFeedbackCriteria? AiFeedbackCriteria
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EducationAiFeedbackCriteria?>("aiFeedbackCriteria"); }
            set { BackingStore?.Set("aiFeedbackCriteria", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.EducationAiFeedbackCriteria AiFeedbackCriteria
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EducationAiFeedbackCriteria>("aiFeedbackCriteria"); }
            set { BackingStore?.Set("aiFeedbackCriteria", value); }
        }
#endif
        /// <summary>The isAiFeedbackEnabled property</summary>
        public bool? IsAiFeedbackEnabled
        {
            get { return BackingStore?.Get<bool?>("isAiFeedbackEnabled"); }
            set { BackingStore?.Set("isAiFeedbackEnabled", value); }
        }
        /// <summary>The isVideoRequired property</summary>
        public bool? IsVideoRequired
        {
            get { return BackingStore?.Get<bool?>("isVideoRequired"); }
            set { BackingStore?.Set("isVideoRequired", value); }
        }
        /// <summary>The maxRecordingAttempts property</summary>
        public int? MaxRecordingAttempts
        {
            get { return BackingStore?.Get<int?>("maxRecordingAttempts"); }
            set { BackingStore?.Set("maxRecordingAttempts", value); }
        }
        /// <summary>The presentationTitle property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PresentationTitle
        {
            get { return BackingStore?.Get<string?>("presentationTitle"); }
            set { BackingStore?.Set("presentationTitle", value); }
        }
#nullable restore
#else
        public string PresentationTitle
        {
            get { return BackingStore?.Get<string>("presentationTitle"); }
            set { BackingStore?.Set("presentationTitle", value); }
        }
#endif
        /// <summary>The recordingTimeLimitInMinutes property</summary>
        public int? RecordingTimeLimitInMinutes
        {
            get { return BackingStore?.Get<int?>("recordingTimeLimitInMinutes"); }
            set { BackingStore?.Set("recordingTimeLimitInMinutes", value); }
        }
        /// <summary>The showRehearsalReportToStudentBeforeMediaUpload property</summary>
        public bool? ShowRehearsalReportToStudentBeforeMediaUpload
        {
            get { return BackingStore?.Get<bool?>("showRehearsalReportToStudentBeforeMediaUpload"); }
            set { BackingStore?.Set("showRehearsalReportToStudentBeforeMediaUpload", value); }
        }
        /// <summary>The speakerCoachSettings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.EducationSpeakerCoachSettings? SpeakerCoachSettings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EducationSpeakerCoachSettings?>("speakerCoachSettings"); }
            set { BackingStore?.Set("speakerCoachSettings", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.EducationSpeakerCoachSettings SpeakerCoachSettings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.EducationSpeakerCoachSettings>("speakerCoachSettings"); }
            set { BackingStore?.Set("speakerCoachSettings", value); }
        }
#endif
        /// <summary>The spokenLanguageLocale property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SpokenLanguageLocale
        {
            get { return BackingStore?.Get<string?>("spokenLanguageLocale"); }
            set { BackingStore?.Set("spokenLanguageLocale", value); }
        }
#nullable restore
#else
        public string SpokenLanguageLocale
        {
            get { return BackingStore?.Get<string>("spokenLanguageLocale"); }
            set { BackingStore?.Set("spokenLanguageLocale", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.EducationSpeakerProgressResource"/> and sets the default values.
        /// </summary>
        public EducationSpeakerProgressResource() : base()
        {
            OdataType = "#microsoft.graph.educationSpeakerProgressResource";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.EducationSpeakerProgressResource"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.EducationSpeakerProgressResource CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.EducationSpeakerProgressResource();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "aiFeedbackCriteria", n => { AiFeedbackCriteria = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.EducationAiFeedbackCriteria>(global::Microsoft.Graph.Beta.Models.EducationAiFeedbackCriteria.CreateFromDiscriminatorValue); } },
                { "isAiFeedbackEnabled", n => { IsAiFeedbackEnabled = n.GetBoolValue(); } },
                { "isVideoRequired", n => { IsVideoRequired = n.GetBoolValue(); } },
                { "maxRecordingAttempts", n => { MaxRecordingAttempts = n.GetIntValue(); } },
                { "presentationTitle", n => { PresentationTitle = n.GetStringValue(); } },
                { "recordingTimeLimitInMinutes", n => { RecordingTimeLimitInMinutes = n.GetIntValue(); } },
                { "showRehearsalReportToStudentBeforeMediaUpload", n => { ShowRehearsalReportToStudentBeforeMediaUpload = n.GetBoolValue(); } },
                { "speakerCoachSettings", n => { SpeakerCoachSettings = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.EducationSpeakerCoachSettings>(global::Microsoft.Graph.Beta.Models.EducationSpeakerCoachSettings.CreateFromDiscriminatorValue); } },
                { "spokenLanguageLocale", n => { SpokenLanguageLocale = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.EducationAiFeedbackCriteria>("aiFeedbackCriteria", AiFeedbackCriteria);
            writer.WriteBoolValue("isAiFeedbackEnabled", IsAiFeedbackEnabled);
            writer.WriteBoolValue("isVideoRequired", IsVideoRequired);
            writer.WriteIntValue("maxRecordingAttempts", MaxRecordingAttempts);
            writer.WriteStringValue("presentationTitle", PresentationTitle);
            writer.WriteIntValue("recordingTimeLimitInMinutes", RecordingTimeLimitInMinutes);
            writer.WriteBoolValue("showRehearsalReportToStudentBeforeMediaUpload", ShowRehearsalReportToStudentBeforeMediaUpload);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.EducationSpeakerCoachSettings>("speakerCoachSettings", SpeakerCoachSettings);
            writer.WriteStringValue("spokenLanguageLocale", SpokenLanguageLocale);
        }
    }
}
#pragma warning restore CS0618
