// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RemoteItem : IAdditionalDataHolder, IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>Identity of the user, device, and application which created the item. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.IdentitySet? CreatedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet?>("createdBy"); }
            set { BackingStore?.Set("createdBy", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.IdentitySet CreatedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet>("createdBy"); }
            set { BackingStore?.Set("createdBy", value); }
        }
#endif
        /// <summary>Date and time of item creation. Read-only.</summary>
        public DateTimeOffset? CreatedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("createdDateTime"); }
            set { BackingStore?.Set("createdDateTime", value); }
        }
        /// <summary>Indicates that the remote item is a file. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.FileObject? File
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.FileObject?>("file"); }
            set { BackingStore?.Set("file", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.FileObject File
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.FileObject>("file"); }
            set { BackingStore?.Set("file", value); }
        }
#endif
        /// <summary>Information about the remote item from the local file system. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.FileSystemInfo? FileSystemInfo
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.FileSystemInfo?>("fileSystemInfo"); }
            set { BackingStore?.Set("fileSystemInfo", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.FileSystemInfo FileSystemInfo
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.FileSystemInfo>("fileSystemInfo"); }
            set { BackingStore?.Set("fileSystemInfo", value); }
        }
#endif
        /// <summary>Indicates that the remote item is a folder. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Folder? Folder
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Folder?>("folder"); }
            set { BackingStore?.Set("folder", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Folder Folder
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Folder>("folder"); }
            set { BackingStore?.Set("folder", value); }
        }
#endif
        /// <summary>Unique identifier for the remote item in its drive. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Id
        {
            get { return BackingStore?.Get<string?>("id"); }
            set { BackingStore?.Set("id", value); }
        }
#nullable restore
#else
        public string Id
        {
            get { return BackingStore?.Get<string>("id"); }
            set { BackingStore?.Set("id", value); }
        }
#endif
        /// <summary>Image metadata, if the item is an image. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Image? Image
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Image?>("image"); }
            set { BackingStore?.Set("image", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Image Image
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Image>("image"); }
            set { BackingStore?.Set("image", value); }
        }
#endif
        /// <summary>Identity of the user, device, and application which last modified the item. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.IdentitySet? LastModifiedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet?>("lastModifiedBy"); }
            set { BackingStore?.Set("lastModifiedBy", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.IdentitySet LastModifiedBy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.IdentitySet>("lastModifiedBy"); }
            set { BackingStore?.Set("lastModifiedBy", value); }
        }
#endif
        /// <summary>Date and time the item was last modified. Read-only.</summary>
        public DateTimeOffset? LastModifiedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastModifiedDateTime"); }
            set { BackingStore?.Set("lastModifiedDateTime", value); }
        }
        /// <summary>Optional. Filename of the remote item. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name
        {
            get { return BackingStore?.Get<string?>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#nullable restore
#else
        public string Name
        {
            get { return BackingStore?.Get<string>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType
        {
            get { return BackingStore?.Get<string?>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#nullable restore
#else
        public string OdataType
        {
            get { return BackingStore?.Get<string>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#endif
        /// <summary>If present, indicates that this item is a package instead of a folder or file. Packages are treated like files in some contexts and folders in others. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Package? Package
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Package?>("package"); }
            set { BackingStore?.Set("package", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Package Package
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Package>("package"); }
            set { BackingStore?.Set("package", value); }
        }
#endif
        /// <summary>Properties of the parent of the remote item. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.ItemReference? ParentReference
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ItemReference?>("parentReference"); }
            set { BackingStore?.Set("parentReference", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.ItemReference ParentReference
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ItemReference>("parentReference"); }
            set { BackingStore?.Set("parentReference", value); }
        }
#endif
        /// <summary>Indicates that the item has been shared with others and provides information about the shared state of the item. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Shared? Shared
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Shared?>("shared"); }
            set { BackingStore?.Set("shared", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Shared Shared
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Shared>("shared"); }
            set { BackingStore?.Set("shared", value); }
        }
#endif
        /// <summary>Provides interop between items in OneDrive for Business and SharePoint with the full set of item identifiers. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.SharepointIds? SharepointIds
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SharepointIds?>("sharepointIds"); }
            set { BackingStore?.Set("sharepointIds", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.SharepointIds SharepointIds
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SharepointIds>("sharepointIds"); }
            set { BackingStore?.Set("sharepointIds", value); }
        }
#endif
        /// <summary>Size of the remote item. Read-only.</summary>
        public long? Size
        {
            get { return BackingStore?.Get<long?>("size"); }
            set { BackingStore?.Set("size", value); }
        }
        /// <summary>The specialFolder property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.SpecialFolder? SpecialFolder
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SpecialFolder?>("specialFolder"); }
            set { BackingStore?.Set("specialFolder", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.SpecialFolder SpecialFolder
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SpecialFolder>("specialFolder"); }
            set { BackingStore?.Set("specialFolder", value); }
        }
#endif
        /// <summary>Video metadata, if the item is a video. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Video? Video
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Video?>("video"); }
            set { BackingStore?.Set("video", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Video Video
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Video>("video"); }
            set { BackingStore?.Set("video", value); }
        }
#endif
        /// <summary>DAV compatible URL for the item.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebDavUrl
        {
            get { return BackingStore?.Get<string?>("webDavUrl"); }
            set { BackingStore?.Set("webDavUrl", value); }
        }
#nullable restore
#else
        public string WebDavUrl
        {
            get { return BackingStore?.Get<string>("webDavUrl"); }
            set { BackingStore?.Set("webDavUrl", value); }
        }
#endif
        /// <summary>URL that displays the resource in the browser. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? WebUrl
        {
            get { return BackingStore?.Get<string?>("webUrl"); }
            set { BackingStore?.Set("webUrl", value); }
        }
#nullable restore
#else
        public string WebUrl
        {
            get { return BackingStore?.Get<string>("webUrl"); }
            set { BackingStore?.Set("webUrl", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.RemoteItem"/> and sets the default values.
        /// </summary>
        public RemoteItem()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.RemoteItem"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Microsoft.Graph.Beta.Models.RemoteItem CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.RemoteItem();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "createdBy", n => { CreatedBy = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.IdentitySet>(global::Microsoft.Graph.Beta.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "file", n => { File = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.FileObject>(global::Microsoft.Graph.Beta.Models.FileObject.CreateFromDiscriminatorValue); } },
                { "fileSystemInfo", n => { FileSystemInfo = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.FileSystemInfo>(global::Microsoft.Graph.Beta.Models.FileSystemInfo.CreateFromDiscriminatorValue); } },
                { "folder", n => { Folder = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Folder>(global::Microsoft.Graph.Beta.Models.Folder.CreateFromDiscriminatorValue); } },
                { "id", n => { Id = n.GetStringValue(); } },
                { "image", n => { Image = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Image>(global::Microsoft.Graph.Beta.Models.Image.CreateFromDiscriminatorValue); } },
                { "lastModifiedBy", n => { LastModifiedBy = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.IdentitySet>(global::Microsoft.Graph.Beta.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "package", n => { Package = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Package>(global::Microsoft.Graph.Beta.Models.Package.CreateFromDiscriminatorValue); } },
                { "parentReference", n => { ParentReference = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.ItemReference>(global::Microsoft.Graph.Beta.Models.ItemReference.CreateFromDiscriminatorValue); } },
                { "shared", n => { Shared = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Shared>(global::Microsoft.Graph.Beta.Models.Shared.CreateFromDiscriminatorValue); } },
                { "sharepointIds", n => { SharepointIds = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.SharepointIds>(global::Microsoft.Graph.Beta.Models.SharepointIds.CreateFromDiscriminatorValue); } },
                { "size", n => { Size = n.GetLongValue(); } },
                { "specialFolder", n => { SpecialFolder = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.SpecialFolder>(global::Microsoft.Graph.Beta.Models.SpecialFolder.CreateFromDiscriminatorValue); } },
                { "video", n => { Video = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Video>(global::Microsoft.Graph.Beta.Models.Video.CreateFromDiscriminatorValue); } },
                { "webDavUrl", n => { WebDavUrl = n.GetStringValue(); } },
                { "webUrl", n => { WebUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.IdentitySet>("createdBy", CreatedBy);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.FileObject>("file", File);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.FileSystemInfo>("fileSystemInfo", FileSystemInfo);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Folder>("folder", Folder);
            writer.WriteStringValue("id", Id);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Image>("image", Image);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.IdentitySet>("lastModifiedBy", LastModifiedBy);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Package>("package", Package);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.ItemReference>("parentReference", ParentReference);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Shared>("shared", Shared);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.SharepointIds>("sharepointIds", SharepointIds);
            writer.WriteLongValue("size", Size);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.SpecialFolder>("specialFolder", SpecialFolder);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Video>("video", Video);
            writer.WriteStringValue("webDavUrl", WebDavUrl);
            writer.WriteStringValue("webUrl", WebUrl);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
