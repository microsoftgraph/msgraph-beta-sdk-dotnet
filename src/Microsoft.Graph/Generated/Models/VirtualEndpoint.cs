// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models
{
    #pragma warning disable CS1591
    public class VirtualEndpoint : Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Cloud PC audit event.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcAuditEvent>? AuditEvents
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcAuditEvent>?>("auditEvents"); }
            set { BackingStore?.Set("auditEvents", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcAuditEvent> AuditEvents
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcAuditEvent>>("auditEvents"); }
            set { BackingStore?.Set("auditEvents", value); }
        }
#endif
        /// <summary>Bulk actions applied to a Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcBulkAction>? BulkActions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcBulkAction>?>("bulkActions"); }
            set { BackingStore?.Set("bulkActions", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcBulkAction> BulkActions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcBulkAction>>("bulkActions"); }
            set { BackingStore?.Set("bulkActions", value); }
        }
#endif
        /// <summary>Cloud managed virtual desktops.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPC>? CloudPCs
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPC>?>("cloudPCs"); }
            set { BackingStore?.Set("cloudPCs", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPC> CloudPCs
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPC>>("cloudPCs"); }
            set { BackingStore?.Set("cloudPCs", value); }
        }
#endif
        /// <summary>Cloud PC organization mapping between public and US Government Community Cloud (GCC) organizations.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.CloudPcCrossCloudGovernmentOrganizationMapping? CrossCloudGovernmentOrganizationMapping
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CloudPcCrossCloudGovernmentOrganizationMapping?>("crossCloudGovernmentOrganizationMapping"); }
            set { BackingStore?.Set("crossCloudGovernmentOrganizationMapping", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.CloudPcCrossCloudGovernmentOrganizationMapping CrossCloudGovernmentOrganizationMapping
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CloudPcCrossCloudGovernmentOrganizationMapping>("crossCloudGovernmentOrganizationMapping"); }
            set { BackingStore?.Set("crossCloudGovernmentOrganizationMapping", value); }
        }
#endif
        /// <summary>The image resource on Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcDeviceImage>? DeviceImages
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcDeviceImage>?>("deviceImages"); }
            set { BackingStore?.Set("deviceImages", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcDeviceImage> DeviceImages
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcDeviceImage>>("deviceImages"); }
            set { BackingStore?.Set("deviceImages", value); }
        }
#endif
        /// <summary>The external partner settings on a Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcExternalPartnerSetting>? ExternalPartnerSettings
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcExternalPartnerSetting>?>("externalPartnerSettings"); }
            set { BackingStore?.Set("externalPartnerSettings", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcExternalPartnerSetting> ExternalPartnerSettings
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcExternalPartnerSetting>>("externalPartnerSettings"); }
            set { BackingStore?.Set("externalPartnerSettings", value); }
        }
#endif
        /// <summary>Front-line service plans for a Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcFrontLineServicePlan>? FrontLineServicePlans
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcFrontLineServicePlan>?>("frontLineServicePlans"); }
            set { BackingStore?.Set("frontLineServicePlans", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcFrontLineServicePlan> FrontLineServicePlans
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcFrontLineServicePlan>>("frontLineServicePlans"); }
            set { BackingStore?.Set("frontLineServicePlans", value); }
        }
#endif
        /// <summary>The gallery image resource on Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcGalleryImage>? GalleryImages
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcGalleryImage>?>("galleryImages"); }
            set { BackingStore?.Set("galleryImages", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcGalleryImage> GalleryImages
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcGalleryImage>>("galleryImages"); }
            set { BackingStore?.Set("galleryImages", value); }
        }
#endif
        /// <summary>A defined collection of Azure resource information that can be used to establish on-premises network connectivity for Cloud PCs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcOnPremisesConnection>? OnPremisesConnections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcOnPremisesConnection>?>("onPremisesConnections"); }
            set { BackingStore?.Set("onPremisesConnections", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcOnPremisesConnection> OnPremisesConnections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcOnPremisesConnection>>("onPremisesConnections"); }
            set { BackingStore?.Set("onPremisesConnections", value); }
        }
#endif
        /// <summary>The Cloud PC organization settings for a tenant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.CloudPcOrganizationSettings? OrganizationSettings
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CloudPcOrganizationSettings?>("organizationSettings"); }
            set { BackingStore?.Set("organizationSettings", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.CloudPcOrganizationSettings OrganizationSettings
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CloudPcOrganizationSettings>("organizationSettings"); }
            set { BackingStore?.Set("organizationSettings", value); }
        }
#endif
        /// <summary>Cloud PC provisioning policy.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcProvisioningPolicy>? ProvisioningPolicies
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcProvisioningPolicy>?>("provisioningPolicies"); }
            set { BackingStore?.Set("provisioningPolicies", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcProvisioningPolicy> ProvisioningPolicies
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcProvisioningPolicy>>("provisioningPolicies"); }
            set { BackingStore?.Set("provisioningPolicies", value); }
        }
#endif
        /// <summary>Cloud PC related reports.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.CloudPcReports? Reports
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CloudPcReports?>("reports"); }
            set { BackingStore?.Set("reports", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.CloudPcReports Reports
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.CloudPcReports>("reports"); }
            set { BackingStore?.Set("reports", value); }
        }
#endif
        /// <summary>Cloud PC service plans.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcServicePlan>? ServicePlans
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcServicePlan>?>("servicePlans"); }
            set { BackingStore?.Set("servicePlans", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcServicePlan> ServicePlans
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcServicePlan>>("servicePlans"); }
            set { BackingStore?.Set("servicePlans", value); }
        }
#endif
        /// <summary>Cloud PC shared-use service plans. The sharedUseServicePlans relationship is deprecated and stopped returning data on October 8, 2023. Going forward, use the frontLineServicePlans relationship.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcSharedUseServicePlan>? SharedUseServicePlans
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcSharedUseServicePlan>?>("sharedUseServicePlans"); }
            set { BackingStore?.Set("sharedUseServicePlans", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcSharedUseServicePlan> SharedUseServicePlans
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcSharedUseServicePlan>>("sharedUseServicePlans"); }
            set { BackingStore?.Set("sharedUseServicePlans", value); }
        }
#endif
        /// <summary>Cloud PC snapshots.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcSnapshot>? Snapshots
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcSnapshot>?>("snapshots"); }
            set { BackingStore?.Set("snapshots", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcSnapshot> Snapshots
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcSnapshot>>("snapshots"); }
            set { BackingStore?.Set("snapshots", value); }
        }
#endif
        /// <summary>Cloud PC supported regions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcSupportedRegion>? SupportedRegions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcSupportedRegion>?>("supportedRegions"); }
            set { BackingStore?.Set("supportedRegions", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcSupportedRegion> SupportedRegions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcSupportedRegion>>("supportedRegions"); }
            set { BackingStore?.Set("supportedRegions", value); }
        }
#endif
        /// <summary>Cloud PC user settings.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudPcUserSetting>? UserSettings
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcUserSetting>?>("userSettings"); }
            set { BackingStore?.Set("userSettings", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudPcUserSetting> UserSettings
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudPcUserSetting>>("userSettings"); }
            set { BackingStore?.Set("userSettings", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.VirtualEndpoint"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.VirtualEndpoint CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Microsoft.Graph.Beta.Models.VirtualEndpoint();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "auditEvents", n => { AuditEvents = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcAuditEvent>(Microsoft.Graph.Beta.Models.CloudPcAuditEvent.CreateFromDiscriminatorValue)?.ToList(); } },
                { "bulkActions", n => { BulkActions = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcBulkAction>(Microsoft.Graph.Beta.Models.CloudPcBulkAction.CreateFromDiscriminatorValue)?.ToList(); } },
                { "cloudPCs", n => { CloudPCs = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPC>(Microsoft.Graph.Beta.Models.CloudPC.CreateFromDiscriminatorValue)?.ToList(); } },
                { "crossCloudGovernmentOrganizationMapping", n => { CrossCloudGovernmentOrganizationMapping = n.GetObjectValue<Microsoft.Graph.Beta.Models.CloudPcCrossCloudGovernmentOrganizationMapping>(Microsoft.Graph.Beta.Models.CloudPcCrossCloudGovernmentOrganizationMapping.CreateFromDiscriminatorValue); } },
                { "deviceImages", n => { DeviceImages = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcDeviceImage>(Microsoft.Graph.Beta.Models.CloudPcDeviceImage.CreateFromDiscriminatorValue)?.ToList(); } },
                { "externalPartnerSettings", n => { ExternalPartnerSettings = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcExternalPartnerSetting>(Microsoft.Graph.Beta.Models.CloudPcExternalPartnerSetting.CreateFromDiscriminatorValue)?.ToList(); } },
                { "frontLineServicePlans", n => { FrontLineServicePlans = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcFrontLineServicePlan>(Microsoft.Graph.Beta.Models.CloudPcFrontLineServicePlan.CreateFromDiscriminatorValue)?.ToList(); } },
                { "galleryImages", n => { GalleryImages = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcGalleryImage>(Microsoft.Graph.Beta.Models.CloudPcGalleryImage.CreateFromDiscriminatorValue)?.ToList(); } },
                { "onPremisesConnections", n => { OnPremisesConnections = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcOnPremisesConnection>(Microsoft.Graph.Beta.Models.CloudPcOnPremisesConnection.CreateFromDiscriminatorValue)?.ToList(); } },
                { "organizationSettings", n => { OrganizationSettings = n.GetObjectValue<Microsoft.Graph.Beta.Models.CloudPcOrganizationSettings>(Microsoft.Graph.Beta.Models.CloudPcOrganizationSettings.CreateFromDiscriminatorValue); } },
                { "provisioningPolicies", n => { ProvisioningPolicies = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcProvisioningPolicy>(Microsoft.Graph.Beta.Models.CloudPcProvisioningPolicy.CreateFromDiscriminatorValue)?.ToList(); } },
                { "reports", n => { Reports = n.GetObjectValue<Microsoft.Graph.Beta.Models.CloudPcReports>(Microsoft.Graph.Beta.Models.CloudPcReports.CreateFromDiscriminatorValue); } },
                { "servicePlans", n => { ServicePlans = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcServicePlan>(Microsoft.Graph.Beta.Models.CloudPcServicePlan.CreateFromDiscriminatorValue)?.ToList(); } },
                { "sharedUseServicePlans", n => { SharedUseServicePlans = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcSharedUseServicePlan>(Microsoft.Graph.Beta.Models.CloudPcSharedUseServicePlan.CreateFromDiscriminatorValue)?.ToList(); } },
                { "snapshots", n => { Snapshots = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcSnapshot>(Microsoft.Graph.Beta.Models.CloudPcSnapshot.CreateFromDiscriminatorValue)?.ToList(); } },
                { "supportedRegions", n => { SupportedRegions = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcSupportedRegion>(Microsoft.Graph.Beta.Models.CloudPcSupportedRegion.CreateFromDiscriminatorValue)?.ToList(); } },
                { "userSettings", n => { UserSettings = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcUserSetting>(Microsoft.Graph.Beta.Models.CloudPcUserSetting.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcAuditEvent>("auditEvents", AuditEvents);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcBulkAction>("bulkActions", BulkActions);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPC>("cloudPCs", CloudPCs);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.CloudPcCrossCloudGovernmentOrganizationMapping>("crossCloudGovernmentOrganizationMapping", CrossCloudGovernmentOrganizationMapping);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcDeviceImage>("deviceImages", DeviceImages);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcExternalPartnerSetting>("externalPartnerSettings", ExternalPartnerSettings);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcFrontLineServicePlan>("frontLineServicePlans", FrontLineServicePlans);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcGalleryImage>("galleryImages", GalleryImages);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcOnPremisesConnection>("onPremisesConnections", OnPremisesConnections);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.CloudPcOrganizationSettings>("organizationSettings", OrganizationSettings);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcProvisioningPolicy>("provisioningPolicies", ProvisioningPolicies);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.CloudPcReports>("reports", Reports);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcServicePlan>("servicePlans", ServicePlans);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcSharedUseServicePlan>("sharedUseServicePlans", SharedUseServicePlans);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcSnapshot>("snapshots", Snapshots);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcSupportedRegion>("supportedRegions", SupportedRegions);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudPcUserSetting>("userSettings", UserSettings);
        }
    }
}
