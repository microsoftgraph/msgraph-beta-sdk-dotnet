// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Company : IAdditionalDataHolder, IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The accounts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Account>? Accounts
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Account>?>("accounts"); }
            set { BackingStore?.Set("accounts", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Account> Accounts
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Account>>("accounts"); }
            set { BackingStore?.Set("accounts", value); }
        }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>The agedAccountsPayable property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.AgedAccountsPayable>? AgedAccountsPayable
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AgedAccountsPayable>?>("agedAccountsPayable"); }
            set { BackingStore?.Set("agedAccountsPayable", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.AgedAccountsPayable> AgedAccountsPayable
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AgedAccountsPayable>>("agedAccountsPayable"); }
            set { BackingStore?.Set("agedAccountsPayable", value); }
        }
#endif
        /// <summary>The agedAccountsReceivable property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.AgedAccountsReceivable>? AgedAccountsReceivable
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AgedAccountsReceivable>?>("agedAccountsReceivable"); }
            set { BackingStore?.Set("agedAccountsReceivable", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.AgedAccountsReceivable> AgedAccountsReceivable
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AgedAccountsReceivable>>("agedAccountsReceivable"); }
            set { BackingStore?.Set("agedAccountsReceivable", value); }
        }
#endif
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>The businessProfileId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BusinessProfileId
        {
            get { return BackingStore?.Get<string?>("businessProfileId"); }
            set { BackingStore?.Set("businessProfileId", value); }
        }
#nullable restore
#else
        public string BusinessProfileId
        {
            get { return BackingStore?.Get<string>("businessProfileId"); }
            set { BackingStore?.Set("businessProfileId", value); }
        }
#endif
        /// <summary>The companyInformation property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.CompanyInformation>? CompanyInformation
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CompanyInformation>?>("companyInformation"); }
            set { BackingStore?.Set("companyInformation", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.CompanyInformation> CompanyInformation
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CompanyInformation>>("companyInformation"); }
            set { BackingStore?.Set("companyInformation", value); }
        }
#endif
        /// <summary>The countriesRegions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.CountryRegion>? CountriesRegions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CountryRegion>?>("countriesRegions"); }
            set { BackingStore?.Set("countriesRegions", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.CountryRegion> CountriesRegions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CountryRegion>>("countriesRegions"); }
            set { BackingStore?.Set("countriesRegions", value); }
        }
#endif
        /// <summary>The currencies property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Currency>? Currencies
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Currency>?>("currencies"); }
            set { BackingStore?.Set("currencies", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Currency> Currencies
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Currency>>("currencies"); }
            set { BackingStore?.Set("currencies", value); }
        }
#endif
        /// <summary>The customerPaymentJournals property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.CustomerPaymentJournal>? CustomerPaymentJournals
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CustomerPaymentJournal>?>("customerPaymentJournals"); }
            set { BackingStore?.Set("customerPaymentJournals", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.CustomerPaymentJournal> CustomerPaymentJournals
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CustomerPaymentJournal>>("customerPaymentJournals"); }
            set { BackingStore?.Set("customerPaymentJournals", value); }
        }
#endif
        /// <summary>The customerPayments property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.CustomerPayment>? CustomerPayments
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CustomerPayment>?>("customerPayments"); }
            set { BackingStore?.Set("customerPayments", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.CustomerPayment> CustomerPayments
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.CustomerPayment>>("customerPayments"); }
            set { BackingStore?.Set("customerPayments", value); }
        }
#endif
        /// <summary>The customers property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Customer>? Customers
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Customer>?>("customers"); }
            set { BackingStore?.Set("customers", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Customer> Customers
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Customer>>("customers"); }
            set { BackingStore?.Set("customers", value); }
        }
#endif
        /// <summary>The dimensions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Dimension>? Dimensions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Dimension>?>("dimensions"); }
            set { BackingStore?.Set("dimensions", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Dimension> Dimensions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Dimension>>("dimensions"); }
            set { BackingStore?.Set("dimensions", value); }
        }
#endif
        /// <summary>The dimensionValues property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.DimensionValue>? DimensionValues
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.DimensionValue>?>("dimensionValues"); }
            set { BackingStore?.Set("dimensionValues", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.DimensionValue> DimensionValues
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.DimensionValue>>("dimensionValues"); }
            set { BackingStore?.Set("dimensionValues", value); }
        }
#endif
        /// <summary>The displayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>The employees property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Employee>? Employees
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Employee>?>("employees"); }
            set { BackingStore?.Set("employees", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Employee> Employees
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Employee>>("employees"); }
            set { BackingStore?.Set("employees", value); }
        }
#endif
        /// <summary>The generalLedgerEntries property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.GeneralLedgerEntry>? GeneralLedgerEntries
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.GeneralLedgerEntry>?>("generalLedgerEntries"); }
            set { BackingStore?.Set("generalLedgerEntries", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.GeneralLedgerEntry> GeneralLedgerEntries
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.GeneralLedgerEntry>>("generalLedgerEntries"); }
            set { BackingStore?.Set("generalLedgerEntries", value); }
        }
#endif
        /// <summary>The id property</summary>
        public Guid? Id
        {
            get { return BackingStore?.Get<Guid?>("id"); }
            set { BackingStore?.Set("id", value); }
        }
        /// <summary>The itemCategories property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ItemCategory>? ItemCategories
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ItemCategory>?>("itemCategories"); }
            set { BackingStore?.Set("itemCategories", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ItemCategory> ItemCategories
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ItemCategory>>("itemCategories"); }
            set { BackingStore?.Set("itemCategories", value); }
        }
#endif
        /// <summary>The items property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Item>? Items
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Item>?>("items"); }
            set { BackingStore?.Set("items", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Item> Items
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Item>>("items"); }
            set { BackingStore?.Set("items", value); }
        }
#endif
        /// <summary>The journalLines property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.JournalLine>? JournalLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.JournalLine>?>("journalLines"); }
            set { BackingStore?.Set("journalLines", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.JournalLine> JournalLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.JournalLine>>("journalLines"); }
            set { BackingStore?.Set("journalLines", value); }
        }
#endif
        /// <summary>The journals property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Journal>? Journals
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Journal>?>("journals"); }
            set { BackingStore?.Set("journals", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Journal> Journals
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Journal>>("journals"); }
            set { BackingStore?.Set("journals", value); }
        }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name
        {
            get { return BackingStore?.Get<string?>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#nullable restore
#else
        public string Name
        {
            get { return BackingStore?.Get<string>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType
        {
            get { return BackingStore?.Get<string?>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#nullable restore
#else
        public string OdataType
        {
            get { return BackingStore?.Get<string>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#endif
        /// <summary>The paymentMethods property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.PaymentMethod>? PaymentMethods
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.PaymentMethod>?>("paymentMethods"); }
            set { BackingStore?.Set("paymentMethods", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.PaymentMethod> PaymentMethods
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.PaymentMethod>>("paymentMethods"); }
            set { BackingStore?.Set("paymentMethods", value); }
        }
#endif
        /// <summary>The paymentTerms property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.PaymentTerm>? PaymentTerms
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.PaymentTerm>?>("paymentTerms"); }
            set { BackingStore?.Set("paymentTerms", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.PaymentTerm> PaymentTerms
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.PaymentTerm>>("paymentTerms"); }
            set { BackingStore?.Set("paymentTerms", value); }
        }
#endif
        /// <summary>The picture property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Picture>? Picture
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Picture>?>("picture"); }
            set { BackingStore?.Set("picture", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Picture> Picture
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Picture>>("picture"); }
            set { BackingStore?.Set("picture", value); }
        }
#endif
        /// <summary>The purchaseInvoiceLines property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.PurchaseInvoiceLine>? PurchaseInvoiceLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.PurchaseInvoiceLine>?>("purchaseInvoiceLines"); }
            set { BackingStore?.Set("purchaseInvoiceLines", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.PurchaseInvoiceLine> PurchaseInvoiceLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.PurchaseInvoiceLine>>("purchaseInvoiceLines"); }
            set { BackingStore?.Set("purchaseInvoiceLines", value); }
        }
#endif
        /// <summary>The purchaseInvoices property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.PurchaseInvoice>? PurchaseInvoices
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.PurchaseInvoice>?>("purchaseInvoices"); }
            set { BackingStore?.Set("purchaseInvoices", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.PurchaseInvoice> PurchaseInvoices
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.PurchaseInvoice>>("purchaseInvoices"); }
            set { BackingStore?.Set("purchaseInvoices", value); }
        }
#endif
        /// <summary>The salesCreditMemoLines property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.SalesCreditMemoLine>? SalesCreditMemoLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesCreditMemoLine>?>("salesCreditMemoLines"); }
            set { BackingStore?.Set("salesCreditMemoLines", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.SalesCreditMemoLine> SalesCreditMemoLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesCreditMemoLine>>("salesCreditMemoLines"); }
            set { BackingStore?.Set("salesCreditMemoLines", value); }
        }
#endif
        /// <summary>The salesCreditMemos property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.SalesCreditMemo>? SalesCreditMemos
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesCreditMemo>?>("salesCreditMemos"); }
            set { BackingStore?.Set("salesCreditMemos", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.SalesCreditMemo> SalesCreditMemos
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesCreditMemo>>("salesCreditMemos"); }
            set { BackingStore?.Set("salesCreditMemos", value); }
        }
#endif
        /// <summary>The salesInvoiceLines property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.SalesInvoiceLine>? SalesInvoiceLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesInvoiceLine>?>("salesInvoiceLines"); }
            set { BackingStore?.Set("salesInvoiceLines", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.SalesInvoiceLine> SalesInvoiceLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesInvoiceLine>>("salesInvoiceLines"); }
            set { BackingStore?.Set("salesInvoiceLines", value); }
        }
#endif
        /// <summary>The salesInvoices property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.SalesInvoice>? SalesInvoices
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesInvoice>?>("salesInvoices"); }
            set { BackingStore?.Set("salesInvoices", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.SalesInvoice> SalesInvoices
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesInvoice>>("salesInvoices"); }
            set { BackingStore?.Set("salesInvoices", value); }
        }
#endif
        /// <summary>The salesOrderLines property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.SalesOrderLine>? SalesOrderLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesOrderLine>?>("salesOrderLines"); }
            set { BackingStore?.Set("salesOrderLines", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.SalesOrderLine> SalesOrderLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesOrderLine>>("salesOrderLines"); }
            set { BackingStore?.Set("salesOrderLines", value); }
        }
#endif
        /// <summary>The salesOrders property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.SalesOrder>? SalesOrders
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesOrder>?>("salesOrders"); }
            set { BackingStore?.Set("salesOrders", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.SalesOrder> SalesOrders
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesOrder>>("salesOrders"); }
            set { BackingStore?.Set("salesOrders", value); }
        }
#endif
        /// <summary>The salesQuoteLines property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.SalesQuoteLine>? SalesQuoteLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesQuoteLine>?>("salesQuoteLines"); }
            set { BackingStore?.Set("salesQuoteLines", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.SalesQuoteLine> SalesQuoteLines
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesQuoteLine>>("salesQuoteLines"); }
            set { BackingStore?.Set("salesQuoteLines", value); }
        }
#endif
        /// <summary>The salesQuotes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.SalesQuote>? SalesQuotes
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesQuote>?>("salesQuotes"); }
            set { BackingStore?.Set("salesQuotes", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.SalesQuote> SalesQuotes
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SalesQuote>>("salesQuotes"); }
            set { BackingStore?.Set("salesQuotes", value); }
        }
#endif
        /// <summary>The shipmentMethods property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ShipmentMethod>? ShipmentMethods
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ShipmentMethod>?>("shipmentMethods"); }
            set { BackingStore?.Set("shipmentMethods", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ShipmentMethod> ShipmentMethods
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ShipmentMethod>>("shipmentMethods"); }
            set { BackingStore?.Set("shipmentMethods", value); }
        }
#endif
        /// <summary>The systemVersion property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SystemVersion
        {
            get { return BackingStore?.Get<string?>("systemVersion"); }
            set { BackingStore?.Set("systemVersion", value); }
        }
#nullable restore
#else
        public string SystemVersion
        {
            get { return BackingStore?.Get<string>("systemVersion"); }
            set { BackingStore?.Set("systemVersion", value); }
        }
#endif
        /// <summary>The taxAreas property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.TaxArea>? TaxAreas
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.TaxArea>?>("taxAreas"); }
            set { BackingStore?.Set("taxAreas", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.TaxArea> TaxAreas
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.TaxArea>>("taxAreas"); }
            set { BackingStore?.Set("taxAreas", value); }
        }
#endif
        /// <summary>The taxGroups property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.TaxGroup>? TaxGroups
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.TaxGroup>?>("taxGroups"); }
            set { BackingStore?.Set("taxGroups", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.TaxGroup> TaxGroups
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.TaxGroup>>("taxGroups"); }
            set { BackingStore?.Set("taxGroups", value); }
        }
#endif
        /// <summary>The unitsOfMeasure property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.UnitOfMeasure>? UnitsOfMeasure
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.UnitOfMeasure>?>("unitsOfMeasure"); }
            set { BackingStore?.Set("unitsOfMeasure", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.UnitOfMeasure> UnitsOfMeasure
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.UnitOfMeasure>>("unitsOfMeasure"); }
            set { BackingStore?.Set("unitsOfMeasure", value); }
        }
#endif
        /// <summary>The vendors property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Vendor>? Vendors
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Vendor>?>("vendors"); }
            set { BackingStore?.Set("vendors", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Vendor> Vendors
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Vendor>>("vendors"); }
            set { BackingStore?.Set("vendors", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.Company"/> and sets the default values.
        /// </summary>
        public Company()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Company"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Microsoft.Graph.Beta.Models.Company CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.Company();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "accounts", n => { Accounts = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Account>(global::Microsoft.Graph.Beta.Models.Account.CreateFromDiscriminatorValue)?.AsList(); } },
                { "agedAccountsPayable", n => { AgedAccountsPayable = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AgedAccountsPayable>(global::Microsoft.Graph.Beta.Models.AgedAccountsPayable.CreateFromDiscriminatorValue)?.AsList(); } },
                { "agedAccountsReceivable", n => { AgedAccountsReceivable = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AgedAccountsReceivable>(global::Microsoft.Graph.Beta.Models.AgedAccountsReceivable.CreateFromDiscriminatorValue)?.AsList(); } },
                { "businessProfileId", n => { BusinessProfileId = n.GetStringValue(); } },
                { "companyInformation", n => { CompanyInformation = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CompanyInformation>(global::Microsoft.Graph.Beta.Models.CompanyInformation.CreateFromDiscriminatorValue)?.AsList(); } },
                { "countriesRegions", n => { CountriesRegions = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CountryRegion>(global::Microsoft.Graph.Beta.Models.CountryRegion.CreateFromDiscriminatorValue)?.AsList(); } },
                { "currencies", n => { Currencies = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Currency>(global::Microsoft.Graph.Beta.Models.Currency.CreateFromDiscriminatorValue)?.AsList(); } },
                { "customerPaymentJournals", n => { CustomerPaymentJournals = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CustomerPaymentJournal>(global::Microsoft.Graph.Beta.Models.CustomerPaymentJournal.CreateFromDiscriminatorValue)?.AsList(); } },
                { "customerPayments", n => { CustomerPayments = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CustomerPayment>(global::Microsoft.Graph.Beta.Models.CustomerPayment.CreateFromDiscriminatorValue)?.AsList(); } },
                { "customers", n => { Customers = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Customer>(global::Microsoft.Graph.Beta.Models.Customer.CreateFromDiscriminatorValue)?.AsList(); } },
                { "dimensionValues", n => { DimensionValues = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.DimensionValue>(global::Microsoft.Graph.Beta.Models.DimensionValue.CreateFromDiscriminatorValue)?.AsList(); } },
                { "dimensions", n => { Dimensions = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Dimension>(global::Microsoft.Graph.Beta.Models.Dimension.CreateFromDiscriminatorValue)?.AsList(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "employees", n => { Employees = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Employee>(global::Microsoft.Graph.Beta.Models.Employee.CreateFromDiscriminatorValue)?.AsList(); } },
                { "generalLedgerEntries", n => { GeneralLedgerEntries = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.GeneralLedgerEntry>(global::Microsoft.Graph.Beta.Models.GeneralLedgerEntry.CreateFromDiscriminatorValue)?.AsList(); } },
                { "id", n => { Id = n.GetGuidValue(); } },
                { "itemCategories", n => { ItemCategories = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ItemCategory>(global::Microsoft.Graph.Beta.Models.ItemCategory.CreateFromDiscriminatorValue)?.AsList(); } },
                { "items", n => { Items = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Item>(global::Microsoft.Graph.Beta.Models.Item.CreateFromDiscriminatorValue)?.AsList(); } },
                { "journalLines", n => { JournalLines = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.JournalLine>(global::Microsoft.Graph.Beta.Models.JournalLine.CreateFromDiscriminatorValue)?.AsList(); } },
                { "journals", n => { Journals = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Journal>(global::Microsoft.Graph.Beta.Models.Journal.CreateFromDiscriminatorValue)?.AsList(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "paymentMethods", n => { PaymentMethods = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.PaymentMethod>(global::Microsoft.Graph.Beta.Models.PaymentMethod.CreateFromDiscriminatorValue)?.AsList(); } },
                { "paymentTerms", n => { PaymentTerms = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.PaymentTerm>(global::Microsoft.Graph.Beta.Models.PaymentTerm.CreateFromDiscriminatorValue)?.AsList(); } },
                { "picture", n => { Picture = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Picture>(global::Microsoft.Graph.Beta.Models.Picture.CreateFromDiscriminatorValue)?.AsList(); } },
                { "purchaseInvoiceLines", n => { PurchaseInvoiceLines = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.PurchaseInvoiceLine>(global::Microsoft.Graph.Beta.Models.PurchaseInvoiceLine.CreateFromDiscriminatorValue)?.AsList(); } },
                { "purchaseInvoices", n => { PurchaseInvoices = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.PurchaseInvoice>(global::Microsoft.Graph.Beta.Models.PurchaseInvoice.CreateFromDiscriminatorValue)?.AsList(); } },
                { "salesCreditMemoLines", n => { SalesCreditMemoLines = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesCreditMemoLine>(global::Microsoft.Graph.Beta.Models.SalesCreditMemoLine.CreateFromDiscriminatorValue)?.AsList(); } },
                { "salesCreditMemos", n => { SalesCreditMemos = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesCreditMemo>(global::Microsoft.Graph.Beta.Models.SalesCreditMemo.CreateFromDiscriminatorValue)?.AsList(); } },
                { "salesInvoiceLines", n => { SalesInvoiceLines = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesInvoiceLine>(global::Microsoft.Graph.Beta.Models.SalesInvoiceLine.CreateFromDiscriminatorValue)?.AsList(); } },
                { "salesInvoices", n => { SalesInvoices = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesInvoice>(global::Microsoft.Graph.Beta.Models.SalesInvoice.CreateFromDiscriminatorValue)?.AsList(); } },
                { "salesOrderLines", n => { SalesOrderLines = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesOrderLine>(global::Microsoft.Graph.Beta.Models.SalesOrderLine.CreateFromDiscriminatorValue)?.AsList(); } },
                { "salesOrders", n => { SalesOrders = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesOrder>(global::Microsoft.Graph.Beta.Models.SalesOrder.CreateFromDiscriminatorValue)?.AsList(); } },
                { "salesQuoteLines", n => { SalesQuoteLines = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesQuoteLine>(global::Microsoft.Graph.Beta.Models.SalesQuoteLine.CreateFromDiscriminatorValue)?.AsList(); } },
                { "salesQuotes", n => { SalesQuotes = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesQuote>(global::Microsoft.Graph.Beta.Models.SalesQuote.CreateFromDiscriminatorValue)?.AsList(); } },
                { "shipmentMethods", n => { ShipmentMethods = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ShipmentMethod>(global::Microsoft.Graph.Beta.Models.ShipmentMethod.CreateFromDiscriminatorValue)?.AsList(); } },
                { "systemVersion", n => { SystemVersion = n.GetStringValue(); } },
                { "taxAreas", n => { TaxAreas = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.TaxArea>(global::Microsoft.Graph.Beta.Models.TaxArea.CreateFromDiscriminatorValue)?.AsList(); } },
                { "taxGroups", n => { TaxGroups = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.TaxGroup>(global::Microsoft.Graph.Beta.Models.TaxGroup.CreateFromDiscriminatorValue)?.AsList(); } },
                { "unitsOfMeasure", n => { UnitsOfMeasure = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.UnitOfMeasure>(global::Microsoft.Graph.Beta.Models.UnitOfMeasure.CreateFromDiscriminatorValue)?.AsList(); } },
                { "vendors", n => { Vendors = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Vendor>(global::Microsoft.Graph.Beta.Models.Vendor.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Account>("accounts", Accounts);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AgedAccountsPayable>("agedAccountsPayable", AgedAccountsPayable);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AgedAccountsReceivable>("agedAccountsReceivable", AgedAccountsReceivable);
            writer.WriteStringValue("businessProfileId", BusinessProfileId);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CompanyInformation>("companyInformation", CompanyInformation);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CountryRegion>("countriesRegions", CountriesRegions);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Currency>("currencies", Currencies);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CustomerPaymentJournal>("customerPaymentJournals", CustomerPaymentJournals);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.CustomerPayment>("customerPayments", CustomerPayments);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Customer>("customers", Customers);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Dimension>("dimensions", Dimensions);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.DimensionValue>("dimensionValues", DimensionValues);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Employee>("employees", Employees);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.GeneralLedgerEntry>("generalLedgerEntries", GeneralLedgerEntries);
            writer.WriteGuidValue("id", Id);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ItemCategory>("itemCategories", ItemCategories);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Item>("items", Items);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.JournalLine>("journalLines", JournalLines);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Journal>("journals", Journals);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.PaymentMethod>("paymentMethods", PaymentMethods);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.PaymentTerm>("paymentTerms", PaymentTerms);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Picture>("picture", Picture);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.PurchaseInvoiceLine>("purchaseInvoiceLines", PurchaseInvoiceLines);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.PurchaseInvoice>("purchaseInvoices", PurchaseInvoices);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesCreditMemoLine>("salesCreditMemoLines", SalesCreditMemoLines);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesCreditMemo>("salesCreditMemos", SalesCreditMemos);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesInvoiceLine>("salesInvoiceLines", SalesInvoiceLines);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesInvoice>("salesInvoices", SalesInvoices);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesOrderLine>("salesOrderLines", SalesOrderLines);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesOrder>("salesOrders", SalesOrders);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesQuoteLine>("salesQuoteLines", SalesQuoteLines);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SalesQuote>("salesQuotes", SalesQuotes);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ShipmentMethod>("shipmentMethods", ShipmentMethods);
            writer.WriteStringValue("systemVersion", SystemVersion);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.TaxArea>("taxAreas", TaxAreas);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.TaxGroup>("taxGroups", TaxGroups);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.UnitOfMeasure>("unitsOfMeasure", UnitsOfMeasure);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Vendor>("vendors", Vendors);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
