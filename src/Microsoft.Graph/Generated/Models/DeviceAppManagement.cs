// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models
{
    /// <summary>
    /// Singleton entity that acts as a container for all device app management functionality.
    /// </summary>
    public class DeviceAppManagement : Microsoft.Graph.Beta.Models.Entity, IParsable
    {
        /// <summary>Android managed app policies.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.AndroidManagedAppProtection>? AndroidManagedAppProtections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.AndroidManagedAppProtection>?>("androidManagedAppProtections"); }
            set { BackingStore?.Set("androidManagedAppProtections", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.AndroidManagedAppProtection> AndroidManagedAppProtections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.AndroidManagedAppProtection>>("androidManagedAppProtections"); }
            set { BackingStore?.Set("androidManagedAppProtections", value); }
        }
#endif
        /// <summary>Default managed app policies.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.DefaultManagedAppProtection>? DefaultManagedAppProtections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.DefaultManagedAppProtection>?>("defaultManagedAppProtections"); }
            set { BackingStore?.Set("defaultManagedAppProtections", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.DefaultManagedAppProtection> DefaultManagedAppProtections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.DefaultManagedAppProtection>>("defaultManagedAppProtections"); }
            set { BackingStore?.Set("defaultManagedAppProtections", value); }
        }
#endif
        /// <summary>Device app management tasks.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.DeviceAppManagementTask>? DeviceAppManagementTasks
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.DeviceAppManagementTask>?>("deviceAppManagementTasks"); }
            set { BackingStore?.Set("deviceAppManagementTasks", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.DeviceAppManagementTask> DeviceAppManagementTasks
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.DeviceAppManagementTask>>("deviceAppManagementTasks"); }
            set { BackingStore?.Set("deviceAppManagementTasks", value); }
        }
#endif
        /// <summary>The Windows Enterprise Code Signing Certificate.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.EnterpriseCodeSigningCertificate>? EnterpriseCodeSigningCertificates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.EnterpriseCodeSigningCertificate>?>("enterpriseCodeSigningCertificates"); }
            set { BackingStore?.Set("enterpriseCodeSigningCertificates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.EnterpriseCodeSigningCertificate> EnterpriseCodeSigningCertificates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.EnterpriseCodeSigningCertificate>>("enterpriseCodeSigningCertificates"); }
            set { BackingStore?.Set("enterpriseCodeSigningCertificates", value); }
        }
#endif
        /// <summary>The IOS Lob App Provisioning Configurations.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.IosLobAppProvisioningConfiguration>? IosLobAppProvisioningConfigurations
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.IosLobAppProvisioningConfiguration>?>("iosLobAppProvisioningConfigurations"); }
            set { BackingStore?.Set("iosLobAppProvisioningConfigurations", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.IosLobAppProvisioningConfiguration> IosLobAppProvisioningConfigurations
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.IosLobAppProvisioningConfiguration>>("iosLobAppProvisioningConfigurations"); }
            set { BackingStore?.Set("iosLobAppProvisioningConfigurations", value); }
        }
#endif
        /// <summary>iOS managed app policies.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.IosManagedAppProtection>? IosManagedAppProtections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.IosManagedAppProtection>?>("iosManagedAppProtections"); }
            set { BackingStore?.Set("iosManagedAppProtections", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.IosManagedAppProtection> IosManagedAppProtections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.IosManagedAppProtection>>("iosManagedAppProtections"); }
            set { BackingStore?.Set("iosManagedAppProtections", value); }
        }
#endif
        /// <summary>Whether the account is enabled for syncing applications from the Microsoft Store for Business.</summary>
        public bool? IsEnabledForMicrosoftStoreForBusiness
        {
            get { return BackingStore?.Get<bool?>("isEnabledForMicrosoftStoreForBusiness"); }
            set { BackingStore?.Set("isEnabledForMicrosoftStoreForBusiness", value); }
        }
        /// <summary>Managed app policies.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedAppPolicy>? ManagedAppPolicies
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedAppPolicy>?>("managedAppPolicies"); }
            set { BackingStore?.Set("managedAppPolicies", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedAppPolicy> ManagedAppPolicies
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedAppPolicy>>("managedAppPolicies"); }
            set { BackingStore?.Set("managedAppPolicies", value); }
        }
#endif
        /// <summary>The managed app registrations.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedAppRegistration>? ManagedAppRegistrations
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedAppRegistration>?>("managedAppRegistrations"); }
            set { BackingStore?.Set("managedAppRegistrations", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedAppRegistration> ManagedAppRegistrations
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedAppRegistration>>("managedAppRegistrations"); }
            set { BackingStore?.Set("managedAppRegistrations", value); }
        }
#endif
        /// <summary>The managed app statuses.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedAppStatus>? ManagedAppStatuses
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedAppStatus>?>("managedAppStatuses"); }
            set { BackingStore?.Set("managedAppStatuses", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedAppStatus> ManagedAppStatuses
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedAppStatus>>("managedAppStatuses"); }
            set { BackingStore?.Set("managedAppStatuses", value); }
        }
#endif
        /// <summary>The mobile eBook categories.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedEBookCategory>? ManagedEBookCategories
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedEBookCategory>?>("managedEBookCategories"); }
            set { BackingStore?.Set("managedEBookCategories", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedEBookCategory> ManagedEBookCategories
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedEBookCategory>>("managedEBookCategories"); }
            set { BackingStore?.Set("managedEBookCategories", value); }
        }
#endif
        /// <summary>The Managed eBook.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedEBook>? ManagedEBooks
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedEBook>?>("managedEBooks"); }
            set { BackingStore?.Set("managedEBooks", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedEBook> ManagedEBooks
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedEBook>>("managedEBooks"); }
            set { BackingStore?.Set("managedEBooks", value); }
        }
#endif
        /// <summary>Windows information protection for apps running on devices which are MDM enrolled.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.MdmWindowsInformationProtectionPolicy>? MdmWindowsInformationProtectionPolicies
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.MdmWindowsInformationProtectionPolicy>?>("mdmWindowsInformationProtectionPolicies"); }
            set { BackingStore?.Set("mdmWindowsInformationProtectionPolicies", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.MdmWindowsInformationProtectionPolicy> MdmWindowsInformationProtectionPolicies
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.MdmWindowsInformationProtectionPolicy>>("mdmWindowsInformationProtectionPolicies"); }
            set { BackingStore?.Set("mdmWindowsInformationProtectionPolicies", value); }
        }
#endif
        /// <summary>The locale information used to sync applications from the Microsoft Store for Business. Cultures that are specific to a country/region. The names of these cultures follow RFC 4646 (Windows Vista and later). The format is -&lt;country/regioncode2&gt;, where  is a lowercase two-letter code derived from ISO 639-1 and &lt;country/regioncode2&gt; is an uppercase two-letter code derived from ISO 3166. For example, en-US for English (United States) is a specific culture.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? MicrosoftStoreForBusinessLanguage
        {
            get { return BackingStore?.Get<string?>("microsoftStoreForBusinessLanguage"); }
            set { BackingStore?.Set("microsoftStoreForBusinessLanguage", value); }
        }
#nullable restore
#else
        public string MicrosoftStoreForBusinessLanguage
        {
            get { return BackingStore?.Get<string>("microsoftStoreForBusinessLanguage"); }
            set { BackingStore?.Set("microsoftStoreForBusinessLanguage", value); }
        }
#endif
        /// <summary>The last time an application sync from the Microsoft Store for Business was completed.</summary>
        public DateTimeOffset? MicrosoftStoreForBusinessLastCompletedApplicationSyncTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("microsoftStoreForBusinessLastCompletedApplicationSyncTime"); }
            set { BackingStore?.Set("microsoftStoreForBusinessLastCompletedApplicationSyncTime", value); }
        }
        /// <summary>The last time the apps from the Microsoft Store for Business were synced successfully for the account.</summary>
        public DateTimeOffset? MicrosoftStoreForBusinessLastSuccessfulSyncDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("microsoftStoreForBusinessLastSuccessfulSyncDateTime"); }
            set { BackingStore?.Set("microsoftStoreForBusinessLastSuccessfulSyncDateTime", value); }
        }
        /// <summary>Portal to which admin syncs available Microsoft Store for Business apps. This is available in the Intune Admin Console.</summary>
        public Microsoft.Graph.Beta.Models.MicrosoftStoreForBusinessPortalSelectionOptions? MicrosoftStoreForBusinessPortalSelection
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.MicrosoftStoreForBusinessPortalSelectionOptions?>("microsoftStoreForBusinessPortalSelection"); }
            set { BackingStore?.Set("microsoftStoreForBusinessPortalSelection", value); }
        }
        /// <summary>MobileAppCatalogPackage entities.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.MobileAppCatalogPackage>? MobileAppCatalogPackages
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.MobileAppCatalogPackage>?>("mobileAppCatalogPackages"); }
            set { BackingStore?.Set("mobileAppCatalogPackages", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.MobileAppCatalogPackage> MobileAppCatalogPackages
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.MobileAppCatalogPackage>>("mobileAppCatalogPackages"); }
            set { BackingStore?.Set("mobileAppCatalogPackages", value); }
        }
#endif
        /// <summary>The mobile app categories.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.MobileAppCategory>? MobileAppCategories
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.MobileAppCategory>?>("mobileAppCategories"); }
            set { BackingStore?.Set("mobileAppCategories", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.MobileAppCategory> MobileAppCategories
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.MobileAppCategory>>("mobileAppCategories"); }
            set { BackingStore?.Set("mobileAppCategories", value); }
        }
#endif
        /// <summary>The Managed Device Mobile Application Configurations.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.ManagedDeviceMobileAppConfiguration>? MobileAppConfigurations
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedDeviceMobileAppConfiguration>?>("mobileAppConfigurations"); }
            set { BackingStore?.Set("mobileAppConfigurations", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.ManagedDeviceMobileAppConfiguration> MobileAppConfigurations
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.ManagedDeviceMobileAppConfiguration>>("mobileAppConfigurations"); }
            set { BackingStore?.Set("mobileAppConfigurations", value); }
        }
#endif
        /// <summary>The mobile apps.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.MobileApp>? MobileApps
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.MobileApp>?>("mobileApps"); }
            set { BackingStore?.Set("mobileApps", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.MobileApp> MobileApps
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.MobileApp>>("mobileApps"); }
            set { BackingStore?.Set("mobileApps", value); }
        }
#endif
        /// <summary>The PolicySet of Policies and Applications</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.PolicySet>? PolicySets
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PolicySet>?>("policySets"); }
            set { BackingStore?.Set("policySets", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.PolicySet> PolicySets
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.PolicySet>>("policySets"); }
            set { BackingStore?.Set("policySets", value); }
        }
#endif
        /// <summary>The WinPhone Symantec Code Signing Certificate.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.SymantecCodeSigningCertificate? SymantecCodeSigningCertificate
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.SymantecCodeSigningCertificate?>("symantecCodeSigningCertificate"); }
            set { BackingStore?.Set("symantecCodeSigningCertificate", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.SymantecCodeSigningCertificate SymantecCodeSigningCertificate
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.SymantecCodeSigningCertificate>("symantecCodeSigningCertificate"); }
            set { BackingStore?.Set("symantecCodeSigningCertificate", value); }
        }
#endif
        /// <summary>Targeted managed app configurations.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.TargetedManagedAppConfiguration>? TargetedManagedAppConfigurations
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.TargetedManagedAppConfiguration>?>("targetedManagedAppConfigurations"); }
            set { BackingStore?.Set("targetedManagedAppConfigurations", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.TargetedManagedAppConfiguration> TargetedManagedAppConfigurations
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.TargetedManagedAppConfiguration>>("targetedManagedAppConfigurations"); }
            set { BackingStore?.Set("targetedManagedAppConfigurations", value); }
        }
#endif
        /// <summary>List of Vpp tokens for this organization.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.VppToken>? VppTokens
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.VppToken>?>("vppTokens"); }
            set { BackingStore?.Set("vppTokens", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.VppToken> VppTokens
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.VppToken>>("vppTokens"); }
            set { BackingStore?.Set("vppTokens", value); }
        }
#endif
        /// <summary>The collection of Windows Defender Application Control Supplemental Policies.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.WindowsDefenderApplicationControlSupplementalPolicy>? WdacSupplementalPolicies
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WindowsDefenderApplicationControlSupplementalPolicy>?>("wdacSupplementalPolicies"); }
            set { BackingStore?.Set("wdacSupplementalPolicies", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.WindowsDefenderApplicationControlSupplementalPolicy> WdacSupplementalPolicies
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WindowsDefenderApplicationControlSupplementalPolicy>>("wdacSupplementalPolicies"); }
            set { BackingStore?.Set("wdacSupplementalPolicies", value); }
        }
#endif
        /// <summary>Windows information protection device registrations that are not MDM enrolled.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.WindowsInformationProtectionDeviceRegistration>? WindowsInformationProtectionDeviceRegistrations
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WindowsInformationProtectionDeviceRegistration>?>("windowsInformationProtectionDeviceRegistrations"); }
            set { BackingStore?.Set("windowsInformationProtectionDeviceRegistrations", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.WindowsInformationProtectionDeviceRegistration> WindowsInformationProtectionDeviceRegistrations
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WindowsInformationProtectionDeviceRegistration>>("windowsInformationProtectionDeviceRegistrations"); }
            set { BackingStore?.Set("windowsInformationProtectionDeviceRegistrations", value); }
        }
#endif
        /// <summary>Windows information protection for apps running on devices which are not MDM enrolled.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.WindowsInformationProtectionPolicy>? WindowsInformationProtectionPolicies
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WindowsInformationProtectionPolicy>?>("windowsInformationProtectionPolicies"); }
            set { BackingStore?.Set("windowsInformationProtectionPolicies", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.WindowsInformationProtectionPolicy> WindowsInformationProtectionPolicies
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WindowsInformationProtectionPolicy>>("windowsInformationProtectionPolicies"); }
            set { BackingStore?.Set("windowsInformationProtectionPolicies", value); }
        }
#endif
        /// <summary>Windows information protection wipe actions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.WindowsInformationProtectionWipeAction>? WindowsInformationProtectionWipeActions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WindowsInformationProtectionWipeAction>?>("windowsInformationProtectionWipeActions"); }
            set { BackingStore?.Set("windowsInformationProtectionWipeActions", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.WindowsInformationProtectionWipeAction> WindowsInformationProtectionWipeActions
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WindowsInformationProtectionWipeAction>>("windowsInformationProtectionWipeActions"); }
            set { BackingStore?.Set("windowsInformationProtectionWipeActions", value); }
        }
#endif
        /// <summary>Windows managed app policies.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.WindowsManagedAppProtection>? WindowsManagedAppProtections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WindowsManagedAppProtection>?>("windowsManagedAppProtections"); }
            set { BackingStore?.Set("windowsManagedAppProtections", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.WindowsManagedAppProtection> WindowsManagedAppProtections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.WindowsManagedAppProtection>>("windowsManagedAppProtections"); }
            set { BackingStore?.Set("windowsManagedAppProtections", value); }
        }
#endif
        /// <summary>Windows management app.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.WindowsManagementApp? WindowsManagementApp
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.WindowsManagementApp?>("windowsManagementApp"); }
            set { BackingStore?.Set("windowsManagementApp", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.WindowsManagementApp WindowsManagementApp
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.WindowsManagementApp>("windowsManagementApp"); }
            set { BackingStore?.Set("windowsManagementApp", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.DeviceAppManagement"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.DeviceAppManagement CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Microsoft.Graph.Beta.Models.DeviceAppManagement();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "androidManagedAppProtections", n => { AndroidManagedAppProtections = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.AndroidManagedAppProtection>(Microsoft.Graph.Beta.Models.AndroidManagedAppProtection.CreateFromDiscriminatorValue)?.ToList(); } },
                { "defaultManagedAppProtections", n => { DefaultManagedAppProtections = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.DefaultManagedAppProtection>(Microsoft.Graph.Beta.Models.DefaultManagedAppProtection.CreateFromDiscriminatorValue)?.ToList(); } },
                { "deviceAppManagementTasks", n => { DeviceAppManagementTasks = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.DeviceAppManagementTask>(Microsoft.Graph.Beta.Models.DeviceAppManagementTask.CreateFromDiscriminatorValue)?.ToList(); } },
                { "enterpriseCodeSigningCertificates", n => { EnterpriseCodeSigningCertificates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.EnterpriseCodeSigningCertificate>(Microsoft.Graph.Beta.Models.EnterpriseCodeSigningCertificate.CreateFromDiscriminatorValue)?.ToList(); } },
                { "iosLobAppProvisioningConfigurations", n => { IosLobAppProvisioningConfigurations = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.IosLobAppProvisioningConfiguration>(Microsoft.Graph.Beta.Models.IosLobAppProvisioningConfiguration.CreateFromDiscriminatorValue)?.ToList(); } },
                { "iosManagedAppProtections", n => { IosManagedAppProtections = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.IosManagedAppProtection>(Microsoft.Graph.Beta.Models.IosManagedAppProtection.CreateFromDiscriminatorValue)?.ToList(); } },
                { "isEnabledForMicrosoftStoreForBusiness", n => { IsEnabledForMicrosoftStoreForBusiness = n.GetBoolValue(); } },
                { "managedAppPolicies", n => { ManagedAppPolicies = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedAppPolicy>(Microsoft.Graph.Beta.Models.ManagedAppPolicy.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedAppRegistrations", n => { ManagedAppRegistrations = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedAppRegistration>(Microsoft.Graph.Beta.Models.ManagedAppRegistration.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedAppStatuses", n => { ManagedAppStatuses = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedAppStatus>(Microsoft.Graph.Beta.Models.ManagedAppStatus.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedEBookCategories", n => { ManagedEBookCategories = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedEBookCategory>(Microsoft.Graph.Beta.Models.ManagedEBookCategory.CreateFromDiscriminatorValue)?.ToList(); } },
                { "managedEBooks", n => { ManagedEBooks = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedEBook>(Microsoft.Graph.Beta.Models.ManagedEBook.CreateFromDiscriminatorValue)?.ToList(); } },
                { "mdmWindowsInformationProtectionPolicies", n => { MdmWindowsInformationProtectionPolicies = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.MdmWindowsInformationProtectionPolicy>(Microsoft.Graph.Beta.Models.MdmWindowsInformationProtectionPolicy.CreateFromDiscriminatorValue)?.ToList(); } },
                { "microsoftStoreForBusinessLanguage", n => { MicrosoftStoreForBusinessLanguage = n.GetStringValue(); } },
                { "microsoftStoreForBusinessLastCompletedApplicationSyncTime", n => { MicrosoftStoreForBusinessLastCompletedApplicationSyncTime = n.GetDateTimeOffsetValue(); } },
                { "microsoftStoreForBusinessLastSuccessfulSyncDateTime", n => { MicrosoftStoreForBusinessLastSuccessfulSyncDateTime = n.GetDateTimeOffsetValue(); } },
                { "microsoftStoreForBusinessPortalSelection", n => { MicrosoftStoreForBusinessPortalSelection = n.GetEnumValue<Microsoft.Graph.Beta.Models.MicrosoftStoreForBusinessPortalSelectionOptions>(); } },
                { "mobileAppCatalogPackages", n => { MobileAppCatalogPackages = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.MobileAppCatalogPackage>(Microsoft.Graph.Beta.Models.MobileAppCatalogPackage.CreateFromDiscriminatorValue)?.ToList(); } },
                { "mobileAppCategories", n => { MobileAppCategories = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.MobileAppCategory>(Microsoft.Graph.Beta.Models.MobileAppCategory.CreateFromDiscriminatorValue)?.ToList(); } },
                { "mobileAppConfigurations", n => { MobileAppConfigurations = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedDeviceMobileAppConfiguration>(Microsoft.Graph.Beta.Models.ManagedDeviceMobileAppConfiguration.CreateFromDiscriminatorValue)?.ToList(); } },
                { "mobileApps", n => { MobileApps = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.MobileApp>(Microsoft.Graph.Beta.Models.MobileApp.CreateFromDiscriminatorValue)?.ToList(); } },
                { "policySets", n => { PolicySets = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PolicySet>(Microsoft.Graph.Beta.Models.PolicySet.CreateFromDiscriminatorValue)?.ToList(); } },
                { "symantecCodeSigningCertificate", n => { SymantecCodeSigningCertificate = n.GetObjectValue<Microsoft.Graph.Beta.Models.SymantecCodeSigningCertificate>(Microsoft.Graph.Beta.Models.SymantecCodeSigningCertificate.CreateFromDiscriminatorValue); } },
                { "targetedManagedAppConfigurations", n => { TargetedManagedAppConfigurations = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.TargetedManagedAppConfiguration>(Microsoft.Graph.Beta.Models.TargetedManagedAppConfiguration.CreateFromDiscriminatorValue)?.ToList(); } },
                { "vppTokens", n => { VppTokens = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.VppToken>(Microsoft.Graph.Beta.Models.VppToken.CreateFromDiscriminatorValue)?.ToList(); } },
                { "wdacSupplementalPolicies", n => { WdacSupplementalPolicies = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WindowsDefenderApplicationControlSupplementalPolicy>(Microsoft.Graph.Beta.Models.WindowsDefenderApplicationControlSupplementalPolicy.CreateFromDiscriminatorValue)?.ToList(); } },
                { "windowsInformationProtectionDeviceRegistrations", n => { WindowsInformationProtectionDeviceRegistrations = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WindowsInformationProtectionDeviceRegistration>(Microsoft.Graph.Beta.Models.WindowsInformationProtectionDeviceRegistration.CreateFromDiscriminatorValue)?.ToList(); } },
                { "windowsInformationProtectionPolicies", n => { WindowsInformationProtectionPolicies = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WindowsInformationProtectionPolicy>(Microsoft.Graph.Beta.Models.WindowsInformationProtectionPolicy.CreateFromDiscriminatorValue)?.ToList(); } },
                { "windowsInformationProtectionWipeActions", n => { WindowsInformationProtectionWipeActions = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WindowsInformationProtectionWipeAction>(Microsoft.Graph.Beta.Models.WindowsInformationProtectionWipeAction.CreateFromDiscriminatorValue)?.ToList(); } },
                { "windowsManagedAppProtections", n => { WindowsManagedAppProtections = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WindowsManagedAppProtection>(Microsoft.Graph.Beta.Models.WindowsManagedAppProtection.CreateFromDiscriminatorValue)?.ToList(); } },
                { "windowsManagementApp", n => { WindowsManagementApp = n.GetObjectValue<Microsoft.Graph.Beta.Models.WindowsManagementApp>(Microsoft.Graph.Beta.Models.WindowsManagementApp.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.AndroidManagedAppProtection>("androidManagedAppProtections", AndroidManagedAppProtections);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.DefaultManagedAppProtection>("defaultManagedAppProtections", DefaultManagedAppProtections);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.DeviceAppManagementTask>("deviceAppManagementTasks", DeviceAppManagementTasks);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.EnterpriseCodeSigningCertificate>("enterpriseCodeSigningCertificates", EnterpriseCodeSigningCertificates);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.IosLobAppProvisioningConfiguration>("iosLobAppProvisioningConfigurations", IosLobAppProvisioningConfigurations);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.IosManagedAppProtection>("iosManagedAppProtections", IosManagedAppProtections);
            writer.WriteBoolValue("isEnabledForMicrosoftStoreForBusiness", IsEnabledForMicrosoftStoreForBusiness);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedAppPolicy>("managedAppPolicies", ManagedAppPolicies);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedAppRegistration>("managedAppRegistrations", ManagedAppRegistrations);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedAppStatus>("managedAppStatuses", ManagedAppStatuses);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedEBookCategory>("managedEBookCategories", ManagedEBookCategories);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedEBook>("managedEBooks", ManagedEBooks);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.MdmWindowsInformationProtectionPolicy>("mdmWindowsInformationProtectionPolicies", MdmWindowsInformationProtectionPolicies);
            writer.WriteStringValue("microsoftStoreForBusinessLanguage", MicrosoftStoreForBusinessLanguage);
            writer.WriteDateTimeOffsetValue("microsoftStoreForBusinessLastCompletedApplicationSyncTime", MicrosoftStoreForBusinessLastCompletedApplicationSyncTime);
            writer.WriteDateTimeOffsetValue("microsoftStoreForBusinessLastSuccessfulSyncDateTime", MicrosoftStoreForBusinessLastSuccessfulSyncDateTime);
            writer.WriteEnumValue<Microsoft.Graph.Beta.Models.MicrosoftStoreForBusinessPortalSelectionOptions>("microsoftStoreForBusinessPortalSelection", MicrosoftStoreForBusinessPortalSelection);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.MobileAppCatalogPackage>("mobileAppCatalogPackages", MobileAppCatalogPackages);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.MobileAppCategory>("mobileAppCategories", MobileAppCategories);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.ManagedDeviceMobileAppConfiguration>("mobileAppConfigurations", MobileAppConfigurations);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.MobileApp>("mobileApps", MobileApps);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.PolicySet>("policySets", PolicySets);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.SymantecCodeSigningCertificate>("symantecCodeSigningCertificate", SymantecCodeSigningCertificate);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.TargetedManagedAppConfiguration>("targetedManagedAppConfigurations", TargetedManagedAppConfigurations);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.VppToken>("vppTokens", VppTokens);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WindowsDefenderApplicationControlSupplementalPolicy>("wdacSupplementalPolicies", WdacSupplementalPolicies);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WindowsInformationProtectionDeviceRegistration>("windowsInformationProtectionDeviceRegistrations", WindowsInformationProtectionDeviceRegistrations);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WindowsInformationProtectionPolicy>("windowsInformationProtectionPolicies", WindowsInformationProtectionPolicies);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WindowsInformationProtectionWipeAction>("windowsInformationProtectionWipeActions", WindowsInformationProtectionWipeActions);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.WindowsManagedAppProtection>("windowsManagedAppProtections", WindowsManagedAppProtections);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.WindowsManagementApp>("windowsManagementApp", WindowsManagementApp);
        }
    }
}
