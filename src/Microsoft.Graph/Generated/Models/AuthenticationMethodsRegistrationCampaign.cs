// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class AuthenticationMethodsRegistrationCampaign : IAdditionalDataHolder, IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>Specifies whether a user is required to perform registration after snoozing 3 times. If true, the user is required to register after 3 snoozes. If false, the user can snooze indefinitely. The default value is true.</summary>
        public bool? EnforceRegistrationAfterAllowedSnoozes
        {
            get { return BackingStore?.Get<bool?>("enforceRegistrationAfterAllowedSnoozes"); }
            set { BackingStore?.Set("enforceRegistrationAfterAllowedSnoozes", value); }
        }
        /// <summary>Users and groups of users that are excluded from being prompted to set up the authentication method.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ExcludeTarget>? ExcludeTargets
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ExcludeTarget>?>("excludeTargets"); }
            set { BackingStore?.Set("excludeTargets", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ExcludeTarget> ExcludeTargets
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ExcludeTarget>>("excludeTargets"); }
            set { BackingStore?.Set("excludeTargets", value); }
        }
#endif
        /// <summary>Users and groups of users that are prompted to set up the authentication method.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.AuthenticationMethodsRegistrationCampaignIncludeTarget>? IncludeTargets
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AuthenticationMethodsRegistrationCampaignIncludeTarget>?>("includeTargets"); }
            set { BackingStore?.Set("includeTargets", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.AuthenticationMethodsRegistrationCampaignIncludeTarget> IncludeTargets
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AuthenticationMethodsRegistrationCampaignIncludeTarget>>("includeTargets"); }
            set { BackingStore?.Set("includeTargets", value); }
        }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType
        {
            get { return BackingStore?.Get<string?>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#nullable restore
#else
        public string OdataType
        {
            get { return BackingStore?.Get<string>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#endif
        /// <summary>Specifies the number of days that the user sees a prompt again if they select &apos;Not now&apos; and snoozes the prompt. Minimum 0 days. Maximum: 14 days. If the value is 0 â€“ The user is prompted during every MFA attempt.</summary>
        public int? SnoozeDurationInDays
        {
            get { return BackingStore?.Get<int?>("snoozeDurationInDays"); }
            set { BackingStore?.Set("snoozeDurationInDays", value); }
        }
        /// <summary>The state property</summary>
        public global::Microsoft.Graph.Beta.Models.AdvancedConfigState? State
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.AdvancedConfigState?>("state"); }
            set { BackingStore?.Set("state", value); }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.AuthenticationMethodsRegistrationCampaign"/> and sets the default values.
        /// </summary>
        public AuthenticationMethodsRegistrationCampaign()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.AuthenticationMethodsRegistrationCampaign"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Microsoft.Graph.Beta.Models.AuthenticationMethodsRegistrationCampaign CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.AuthenticationMethodsRegistrationCampaign();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "enforceRegistrationAfterAllowedSnoozes", n => { EnforceRegistrationAfterAllowedSnoozes = n.GetBoolValue(); } },
                { "excludeTargets", n => { ExcludeTargets = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ExcludeTarget>(global::Microsoft.Graph.Beta.Models.ExcludeTarget.CreateFromDiscriminatorValue)?.AsList(); } },
                { "includeTargets", n => { IncludeTargets = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AuthenticationMethodsRegistrationCampaignIncludeTarget>(global::Microsoft.Graph.Beta.Models.AuthenticationMethodsRegistrationCampaignIncludeTarget.CreateFromDiscriminatorValue)?.AsList(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "snoozeDurationInDays", n => { SnoozeDurationInDays = n.GetIntValue(); } },
                { "state", n => { State = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.AdvancedConfigState>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("enforceRegistrationAfterAllowedSnoozes", EnforceRegistrationAfterAllowedSnoozes);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ExcludeTarget>("excludeTargets", ExcludeTargets);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AuthenticationMethodsRegistrationCampaignIncludeTarget>("includeTargets", IncludeTargets);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteIntValue("snoozeDurationInDays", SnoozeDurationInDays);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.AdvancedConfigState>("state", State);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
