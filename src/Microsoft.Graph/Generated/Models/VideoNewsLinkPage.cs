// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models
{
    #pragma warning disable CS1591
    public class VideoNewsLinkPage : Microsoft.Graph.Beta.Models.BaseSitePage, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The bannerImageWebUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BannerImageWebUrl
        {
            get { return BackingStore?.Get<string?>("bannerImageWebUrl"); }
            set { BackingStore?.Set("bannerImageWebUrl", value); }
        }
#nullable restore
#else
        public string BannerImageWebUrl
        {
            get { return BackingStore?.Get<string>("bannerImageWebUrl"); }
            set { BackingStore?.Set("bannerImageWebUrl", value); }
        }
#endif
        /// <summary>The newsSharepointIds property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.SharepointIds? NewsSharepointIds
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.SharepointIds?>("newsSharepointIds"); }
            set { BackingStore?.Set("newsSharepointIds", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.SharepointIds NewsSharepointIds
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.SharepointIds>("newsSharepointIds"); }
            set { BackingStore?.Set("newsSharepointIds", value); }
        }
#endif
        /// <summary>The newsWebUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? NewsWebUrl
        {
            get { return BackingStore?.Get<string?>("newsWebUrl"); }
            set { BackingStore?.Set("newsWebUrl", value); }
        }
#nullable restore
#else
        public string NewsWebUrl
        {
            get { return BackingStore?.Get<string>("newsWebUrl"); }
            set { BackingStore?.Set("newsWebUrl", value); }
        }
#endif
        /// <summary>The videoDuration property</summary>
        public TimeSpan? VideoDuration
        {
            get { return BackingStore?.Get<TimeSpan?>("videoDuration"); }
            set { BackingStore?.Set("videoDuration", value); }
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.VideoNewsLinkPage"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.VideoNewsLinkPage CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Microsoft.Graph.Beta.Models.VideoNewsLinkPage();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "bannerImageWebUrl", n => { BannerImageWebUrl = n.GetStringValue(); } },
                { "newsSharepointIds", n => { NewsSharepointIds = n.GetObjectValue<Microsoft.Graph.Beta.Models.SharepointIds>(Microsoft.Graph.Beta.Models.SharepointIds.CreateFromDiscriminatorValue); } },
                { "newsWebUrl", n => { NewsWebUrl = n.GetStringValue(); } },
                { "videoDuration", n => { VideoDuration = n.GetTimeSpanValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("bannerImageWebUrl", BannerImageWebUrl);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.SharepointIds>("newsSharepointIds", NewsSharepointIds);
            writer.WriteStringValue("newsWebUrl", NewsWebUrl);
            writer.WriteTimeSpanValue("videoDuration", VideoDuration);
        }
    }
}
