// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AccessReviewSet : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Represents a Microsoft Entra access review decision on an instance of a review.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.AccessReviewInstanceDecisionItem>? Decisions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AccessReviewInstanceDecisionItem>?>("decisions"); }
            set { BackingStore?.Set("decisions", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.AccessReviewInstanceDecisionItem> Decisions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AccessReviewInstanceDecisionItem>>("decisions"); }
            set { BackingStore?.Set("decisions", value); }
        }
#endif
        /// <summary>Represents the template and scheduling for an access review.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.AccessReviewScheduleDefinition>? Definitions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AccessReviewScheduleDefinition>?>("definitions"); }
            set { BackingStore?.Set("definitions", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.AccessReviewScheduleDefinition> Definitions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AccessReviewScheduleDefinition>>("definitions"); }
            set { BackingStore?.Set("definitions", value); }
        }
#endif
        /// <summary>Represents a collection of access review history data and the scopes used to collect that data.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.AccessReviewHistoryDefinition>? HistoryDefinitions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AccessReviewHistoryDefinition>?>("historyDefinitions"); }
            set { BackingStore?.Set("historyDefinitions", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.AccessReviewHistoryDefinition> HistoryDefinitions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AccessReviewHistoryDefinition>>("historyDefinitions"); }
            set { BackingStore?.Set("historyDefinitions", value); }
        }
#endif
        /// <summary>Resource that enables administrators to manage directory-level access review policies in their tenant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.AccessReviewPolicy? Policy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.AccessReviewPolicy?>("policy"); }
            set { BackingStore?.Set("policy", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.AccessReviewPolicy Policy
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.AccessReviewPolicy>("policy"); }
            set { BackingStore?.Set("policy", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.AccessReviewSet"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.AccessReviewSet CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.AccessReviewSet();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "decisions", n => { Decisions = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AccessReviewInstanceDecisionItem>(global::Microsoft.Graph.Beta.Models.AccessReviewInstanceDecisionItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "definitions", n => { Definitions = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AccessReviewScheduleDefinition>(global::Microsoft.Graph.Beta.Models.AccessReviewScheduleDefinition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "historyDefinitions", n => { HistoryDefinitions = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AccessReviewHistoryDefinition>(global::Microsoft.Graph.Beta.Models.AccessReviewHistoryDefinition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "policy", n => { Policy = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.AccessReviewPolicy>(global::Microsoft.Graph.Beta.Models.AccessReviewPolicy.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AccessReviewInstanceDecisionItem>("decisions", Decisions);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AccessReviewScheduleDefinition>("definitions", Definitions);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AccessReviewHistoryDefinition>("historyDefinitions", HistoryDefinitions);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.AccessReviewPolicy>("policy", Policy);
        }
    }
}
#pragma warning restore CS0618
