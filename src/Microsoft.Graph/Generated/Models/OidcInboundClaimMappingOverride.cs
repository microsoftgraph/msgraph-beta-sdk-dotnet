// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class OidcInboundClaimMappingOverride : IAdditionalDataHolder, IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>End-user&apos;s preferred postal address. The value of the address member is a JSON RFC8259 structure containing some or all of the members defined in the resource type</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.OidcAddressInboundClaims? Address
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.OidcAddressInboundClaims?>("address"); }
            set { BackingStore?.Set("address", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.OidcAddressInboundClaims Address
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.OidcAddressInboundClaims>("address"); }
            set { BackingStore?.Set("address", value); }
        }
#endif
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>End-user&apos;s preferred e-mail address. Its value MUST conform to the RFC 5322 addr-spec syntax.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Email
        {
            get { return BackingStore?.Get<string?>("email"); }
            set { BackingStore?.Set("email", value); }
        }
#nullable restore
#else
        public string Email
        {
            get { return BackingStore?.Get<string>("email"); }
            set { BackingStore?.Set("email", value); }
        }
#endif
        /// <summary>True if the end-user&apos;s e-mail address has been verified by the identity provider; otherwise, false. When this claim value is true, this means that your identity provider took affirmative steps to ensure that this e-mail address was controlled by the end-user at the time the verification was performed. If this claim value is false, or not mapped with any claim of the identity provider, the user is asked to verify email during sign-up if email is required in the user flow.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? EmailVerified
        {
            get { return BackingStore?.Get<string?>("email_verified"); }
            set { BackingStore?.Set("email_verified", value); }
        }
#nullable restore
#else
        public string EmailVerified
        {
            get { return BackingStore?.Get<string>("email_verified"); }
            set { BackingStore?.Set("email_verified", value); }
        }
#endif
        /// <summary>Surname(s) or family name of the end-user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? FamilyName
        {
            get { return BackingStore?.Get<string?>("family_name"); }
            set { BackingStore?.Set("family_name", value); }
        }
#nullable restore
#else
        public string FamilyName
        {
            get { return BackingStore?.Get<string>("family_name"); }
            set { BackingStore?.Set("family_name", value); }
        }
#endif
        /// <summary>Given name(s) or first name(s) of the end-user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? GivenName
        {
            get { return BackingStore?.Get<string?>("given_name"); }
            set { BackingStore?.Set("given_name", value); }
        }
#nullable restore
#else
        public string GivenName
        {
            get { return BackingStore?.Get<string>("given_name"); }
            set { BackingStore?.Set("given_name", value); }
        }
#endif
        /// <summary>End-user&apos;s full name in displayable form including all name parts, possibly including titles and suffixes, ordered according to the end-user&apos;s locale and preferences.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name
        {
            get { return BackingStore?.Get<string?>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#nullable restore
#else
        public string Name
        {
            get { return BackingStore?.Get<string>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType
        {
            get { return BackingStore?.Get<string?>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#nullable restore
#else
        public string OdataType
        {
            get { return BackingStore?.Get<string>("@odata.type"); }
            set { BackingStore?.Set("@odata.type", value); }
        }
#endif
        /// <summary>The claim provides the phone number for the user.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PhoneNumber
        {
            get { return BackingStore?.Get<string?>("phone_number"); }
            set { BackingStore?.Set("phone_number", value); }
        }
#nullable restore
#else
        public string PhoneNumber
        {
            get { return BackingStore?.Get<string>("phone_number"); }
            set { BackingStore?.Set("phone_number", value); }
        }
#endif
        /// <summary>True if the end-user&apos;s phone number has been verified; otherwise, false. When this claim value is true, this means that your identity provider took affirmative steps to verify the phone number.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PhoneNumberVerified
        {
            get { return BackingStore?.Get<string?>("phone_number_verified"); }
            set { BackingStore?.Set("phone_number_verified", value); }
        }
#nullable restore
#else
        public string PhoneNumberVerified
        {
            get { return BackingStore?.Get<string>("phone_number_verified"); }
            set { BackingStore?.Set("phone_number_verified", value); }
        }
#endif
        /// <summary>Subject - Identifier for the end-user at the Issuer.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Sub
        {
            get { return BackingStore?.Get<string?>("sub"); }
            set { BackingStore?.Set("sub", value); }
        }
#nullable restore
#else
        public string Sub
        {
            get { return BackingStore?.Get<string>("sub"); }
            set { BackingStore?.Set("sub", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.OidcInboundClaimMappingOverride"/> and sets the default values.
        /// </summary>
        public OidcInboundClaimMappingOverride()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.OidcInboundClaimMappingOverride"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Microsoft.Graph.Beta.Models.OidcInboundClaimMappingOverride CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.OidcInboundClaimMappingOverride();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "address", n => { Address = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.OidcAddressInboundClaims>(global::Microsoft.Graph.Beta.Models.OidcAddressInboundClaims.CreateFromDiscriminatorValue); } },
                { "email", n => { Email = n.GetStringValue(); } },
                { "email_verified", n => { EmailVerified = n.GetStringValue(); } },
                { "family_name", n => { FamilyName = n.GetStringValue(); } },
                { "given_name", n => { GivenName = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "phone_number", n => { PhoneNumber = n.GetStringValue(); } },
                { "phone_number_verified", n => { PhoneNumberVerified = n.GetStringValue(); } },
                { "sub", n => { Sub = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.OidcAddressInboundClaims>("address", Address);
            writer.WriteStringValue("email", Email);
            writer.WriteStringValue("email_verified", EmailVerified);
            writer.WriteStringValue("family_name", FamilyName);
            writer.WriteStringValue("given_name", GivenName);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteStringValue("phone_number", PhoneNumber);
            writer.WriteStringValue("phone_number_verified", PhoneNumberVerified);
            writer.WriteStringValue("sub", Sub);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
