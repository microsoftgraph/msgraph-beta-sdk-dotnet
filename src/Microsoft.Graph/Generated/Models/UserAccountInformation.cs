// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UserAccountInformation : global::Microsoft.Graph.Beta.Models.ItemFacet, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Shows the age group of user. Allowed values null, minor, notAdult and adult are generated by the directory and can&apos;t be changed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AgeGroup
        {
            get { return BackingStore?.Get<string?>("ageGroup"); }
            set { BackingStore?.Set("ageGroup", value); }
        }
#nullable restore
#else
        public string AgeGroup
        {
            get { return BackingStore?.Get<string>("ageGroup"); }
            set { BackingStore?.Set("ageGroup", value); }
        }
#endif
        /// <summary>Contains the two-character country code associated with the users&apos; account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CountryCode
        {
            get { return BackingStore?.Get<string?>("countryCode"); }
            set { BackingStore?.Set("countryCode", value); }
        }
#nullable restore
#else
        public string CountryCode
        {
            get { return BackingStore?.Get<string>("countryCode"); }
            set { BackingStore?.Set("countryCode", value); }
        }
#endif
        /// <summary>The preferredLanguageTag property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.LocaleInfo? PreferredLanguageTag
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LocaleInfo?>("preferredLanguageTag"); }
            set { BackingStore?.Set("preferredLanguageTag", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.LocaleInfo PreferredLanguageTag
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LocaleInfo>("preferredLanguageTag"); }
            set { BackingStore?.Set("preferredLanguageTag", value); }
        }
#endif
        /// <summary>The user principal name (UPN) of the user associated with the account.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserPrincipalName
        {
            get { return BackingStore?.Get<string?>("userPrincipalName"); }
            set { BackingStore?.Set("userPrincipalName", value); }
        }
#nullable restore
#else
        public string UserPrincipalName
        {
            get { return BackingStore?.Get<string>("userPrincipalName"); }
            set { BackingStore?.Set("userPrincipalName", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.UserAccountInformation"/> and sets the default values.
        /// </summary>
        public UserAccountInformation() : base()
        {
            OdataType = "#microsoft.graph.userAccountInformation";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.UserAccountInformation"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.UserAccountInformation CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.UserAccountInformation();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "ageGroup", n => { AgeGroup = n.GetStringValue(); } },
                { "countryCode", n => { CountryCode = n.GetStringValue(); } },
                { "preferredLanguageTag", n => { PreferredLanguageTag = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.LocaleInfo>(global::Microsoft.Graph.Beta.Models.LocaleInfo.CreateFromDiscriminatorValue); } },
                { "userPrincipalName", n => { UserPrincipalName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("ageGroup", AgeGroup);
            writer.WriteStringValue("countryCode", CountryCode);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.LocaleInfo>("preferredLanguageTag", PreferredLanguageTag);
            writer.WriteStringValue("userPrincipalName", UserPrincipalName);
        }
    }
}
#pragma warning restore CS0618
