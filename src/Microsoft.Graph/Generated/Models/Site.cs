// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Graph.Beta.Models.TermStore;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class Site : global::Microsoft.Graph.Beta.Models.BaseItem, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Analytics about the view activities that took place on this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.ItemAnalytics? Analytics
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ItemAnalytics?>("analytics"); }
            set { BackingStore?.Set("analytics", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.ItemAnalytics Analytics
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ItemAnalytics>("analytics"); }
            set { BackingStore?.Set("analytics", value); }
        }
#endif
        /// <summary>The collection of column definitions reusable across lists under this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ColumnDefinition>? Columns
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ColumnDefinition>?>("columns"); }
            set { BackingStore?.Set("columns", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ColumnDefinition> Columns
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ColumnDefinition>>("columns"); }
            set { BackingStore?.Set("columns", value); }
        }
#endif
        /// <summary>The collection of content models applied to this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ContentModel>? ContentModels
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ContentModel>?>("contentModels"); }
            set { BackingStore?.Set("contentModels", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ContentModel> ContentModels
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ContentModel>>("contentModels"); }
            set { BackingStore?.Set("contentModels", value); }
        }
#endif
        /// <summary>The collection of content types defined for this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ContentType>? ContentTypes
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ContentType>?>("contentTypes"); }
            set { BackingStore?.Set("contentTypes", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ContentType> ContentTypes
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ContentType>>("contentTypes"); }
            set { BackingStore?.Set("contentTypes", value); }
        }
#endif
        /// <summary>The deleted property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Deleted? Deleted
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Deleted?>("deleted"); }
            set { BackingStore?.Set("deleted", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Deleted Deleted
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Deleted>("deleted"); }
            set { BackingStore?.Set("deleted", value); }
        }
#endif
        /// <summary>The full title for the site. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>The document processing jobs running on this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.DocumentProcessingJob>? DocumentProcessingJobs
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.DocumentProcessingJob>?>("documentProcessingJobs"); }
            set { BackingStore?.Set("documentProcessingJobs", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.DocumentProcessingJob> DocumentProcessingJobs
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.DocumentProcessingJob>>("documentProcessingJobs"); }
            set { BackingStore?.Set("documentProcessingJobs", value); }
        }
#endif
        /// <summary>The default drive (document library) for this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Drive? Drive
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Drive?>("drive"); }
            set { BackingStore?.Set("drive", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Drive Drive
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Drive>("drive"); }
            set { BackingStore?.Set("drive", value); }
        }
#endif
        /// <summary>The collection of drives (document libraries) under this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Drive>? Drives
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Drive>?>("drives"); }
            set { BackingStore?.Set("drives", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Drive> Drives
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Drive>>("drives"); }
            set { BackingStore?.Set("drives", value); }
        }
#endif
        /// <summary>The collection of column definitions available in the site that is referenced from the sites in the parent hierarchy of the current site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ColumnDefinition>? ExternalColumns
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ColumnDefinition>?>("externalColumns"); }
            set { BackingStore?.Set("externalColumns", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ColumnDefinition> ExternalColumns
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ColumnDefinition>>("externalColumns"); }
            set { BackingStore?.Set("externalColumns", value); }
        }
#endif
        /// <summary>The informationProtection property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.InformationProtection? InformationProtection
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.InformationProtection?>("informationProtection"); }
            set { BackingStore?.Set("informationProtection", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.InformationProtection InformationProtection
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.InformationProtection>("informationProtection"); }
            set { BackingStore?.Set("informationProtection", value); }
        }
#endif
        /// <summary>The isPersonalSite property</summary>
        public bool? IsPersonalSite
        {
            get { return BackingStore?.Get<bool?>("isPersonalSite"); }
            set { BackingStore?.Set("isPersonalSite", value); }
        }
        /// <summary>Used to address any item contained in this site. This collection can&apos;t be enumerated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.BaseItem>? Items
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.BaseItem>?>("items"); }
            set { BackingStore?.Set("items", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.BaseItem> Items
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.BaseItem>>("items"); }
            set { BackingStore?.Set("items", value); }
        }
#endif
        /// <summary>The collection of lists under this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.List>? Lists
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.List>?>("lists"); }
            set { BackingStore?.Set("lists", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.List> Lists
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.List>>("lists"); }
            set { BackingStore?.Set("lists", value); }
        }
#endif
        /// <summary>The onenote property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Onenote? Onenote
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Onenote?>("onenote"); }
            set { BackingStore?.Set("onenote", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Onenote Onenote
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Onenote>("onenote"); }
            set { BackingStore?.Set("onenote", value); }
        }
#endif
        /// <summary>The collection of long running operations for the site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.RichLongRunningOperation>? Operations
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.RichLongRunningOperation>?>("operations"); }
            set { BackingStore?.Set("operations", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.RichLongRunningOperation> Operations
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.RichLongRunningOperation>>("operations"); }
            set { BackingStore?.Set("operations", value); }
        }
#endif
        /// <summary>The collection of pages in the baseSitePages list on this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.BaseSitePage>? Pages
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.BaseSitePage>?>("pages"); }
            set { BackingStore?.Set("pages", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.BaseSitePage> Pages
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.BaseSitePage>>("pages"); }
            set { BackingStore?.Set("pages", value); }
        }
#endif
        /// <summary>The permissions associated with the site. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Permission>? Permissions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Permission>?>("permissions"); }
            set { BackingStore?.Set("permissions", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Permission> Permissions
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Permission>>("permissions"); }
            set { BackingStore?.Set("permissions", value); }
        }
#endif
        /// <summary>A container for a collection of recycleBinItem resources in this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.RecycleBin? RecycleBin
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.RecycleBin?>("recycleBin"); }
            set { BackingStore?.Set("recycleBin", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.RecycleBin RecycleBin
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.RecycleBin>("recycleBin"); }
            set { BackingStore?.Set("recycleBin", value); }
        }
#endif
        /// <summary>If present, provides the root site in the site collection. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.Root? Root
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Root?>("root"); }
            set { BackingStore?.Set("root", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.Root Root
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.Root>("root"); }
            set { BackingStore?.Set("root", value); }
        }
#endif
        /// <summary>The settings on this site. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.SiteSettings? Settings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SiteSettings?>("settings"); }
            set { BackingStore?.Set("settings", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.SiteSettings Settings
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SiteSettings>("settings"); }
            set { BackingStore?.Set("settings", value); }
        }
#endif
        /// <summary>Returns identifiers useful for SharePoint REST compatibility. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.SharepointIds? SharepointIds
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SharepointIds?>("sharepointIds"); }
            set { BackingStore?.Set("sharepointIds", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.SharepointIds SharepointIds
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SharepointIds>("sharepointIds"); }
            set { BackingStore?.Set("sharepointIds", value); }
        }
#endif
        /// <summary>Provides details about the site&apos;s site collection. Available only on the root site. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.SiteCollection? SiteCollection
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SiteCollection?>("siteCollection"); }
            set { BackingStore?.Set("siteCollection", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.SiteCollection SiteCollection
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SiteCollection>("siteCollection"); }
            set { BackingStore?.Set("siteCollection", value); }
        }
#endif
        /// <summary>The collection of the sub-sites under this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.Site>? Sites
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Site>?>("sites"); }
            set { BackingStore?.Set("sites", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.Site> Sites
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.Site>>("sites"); }
            set { BackingStore?.Set("sites", value); }
        }
#endif
        /// <summary>The termStore under this site.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.TermStore.Store? TermStore
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.TermStore.Store?>("termStore"); }
            set { BackingStore?.Set("termStore", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.TermStore.Store TermStore
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.TermStore.Store>("termStore"); }
            set { BackingStore?.Set("termStore", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.Site"/> and sets the default values.
        /// </summary>
        public Site() : base()
        {
            OdataType = "#microsoft.graph.site";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Site"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.Site CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.Site();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "analytics", n => { Analytics = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.ItemAnalytics>(global::Microsoft.Graph.Beta.Models.ItemAnalytics.CreateFromDiscriminatorValue); } },
                { "columns", n => { Columns = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ColumnDefinition>(global::Microsoft.Graph.Beta.Models.ColumnDefinition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "contentModels", n => { ContentModels = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ContentModel>(global::Microsoft.Graph.Beta.Models.ContentModel.CreateFromDiscriminatorValue)?.AsList(); } },
                { "contentTypes", n => { ContentTypes = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ContentType>(global::Microsoft.Graph.Beta.Models.ContentType.CreateFromDiscriminatorValue)?.AsList(); } },
                { "deleted", n => { Deleted = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Deleted>(global::Microsoft.Graph.Beta.Models.Deleted.CreateFromDiscriminatorValue); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "documentProcessingJobs", n => { DocumentProcessingJobs = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.DocumentProcessingJob>(global::Microsoft.Graph.Beta.Models.DocumentProcessingJob.CreateFromDiscriminatorValue)?.AsList(); } },
                { "drive", n => { Drive = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Drive>(global::Microsoft.Graph.Beta.Models.Drive.CreateFromDiscriminatorValue); } },
                { "drives", n => { Drives = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Drive>(global::Microsoft.Graph.Beta.Models.Drive.CreateFromDiscriminatorValue)?.AsList(); } },
                { "externalColumns", n => { ExternalColumns = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ColumnDefinition>(global::Microsoft.Graph.Beta.Models.ColumnDefinition.CreateFromDiscriminatorValue)?.AsList(); } },
                { "informationProtection", n => { InformationProtection = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.InformationProtection>(global::Microsoft.Graph.Beta.Models.InformationProtection.CreateFromDiscriminatorValue); } },
                { "isPersonalSite", n => { IsPersonalSite = n.GetBoolValue(); } },
                { "items", n => { Items = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.BaseItem>(global::Microsoft.Graph.Beta.Models.BaseItem.CreateFromDiscriminatorValue)?.AsList(); } },
                { "lists", n => { Lists = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.List>(global::Microsoft.Graph.Beta.Models.List.CreateFromDiscriminatorValue)?.AsList(); } },
                { "onenote", n => { Onenote = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Onenote>(global::Microsoft.Graph.Beta.Models.Onenote.CreateFromDiscriminatorValue); } },
                { "operations", n => { Operations = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.RichLongRunningOperation>(global::Microsoft.Graph.Beta.Models.RichLongRunningOperation.CreateFromDiscriminatorValue)?.AsList(); } },
                { "pages", n => { Pages = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.BaseSitePage>(global::Microsoft.Graph.Beta.Models.BaseSitePage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "permissions", n => { Permissions = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Permission>(global::Microsoft.Graph.Beta.Models.Permission.CreateFromDiscriminatorValue)?.AsList(); } },
                { "recycleBin", n => { RecycleBin = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.RecycleBin>(global::Microsoft.Graph.Beta.Models.RecycleBin.CreateFromDiscriminatorValue); } },
                { "root", n => { Root = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.Root>(global::Microsoft.Graph.Beta.Models.Root.CreateFromDiscriminatorValue); } },
                { "settings", n => { Settings = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.SiteSettings>(global::Microsoft.Graph.Beta.Models.SiteSettings.CreateFromDiscriminatorValue); } },
                { "sharepointIds", n => { SharepointIds = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.SharepointIds>(global::Microsoft.Graph.Beta.Models.SharepointIds.CreateFromDiscriminatorValue); } },
                { "siteCollection", n => { SiteCollection = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.SiteCollection>(global::Microsoft.Graph.Beta.Models.SiteCollection.CreateFromDiscriminatorValue); } },
                { "sites", n => { Sites = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Site>(global::Microsoft.Graph.Beta.Models.Site.CreateFromDiscriminatorValue)?.AsList(); } },
                { "termStore", n => { TermStore = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.TermStore.Store>(global::Microsoft.Graph.Beta.Models.TermStore.Store.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.ItemAnalytics>("analytics", Analytics);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ColumnDefinition>("columns", Columns);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ContentModel>("contentModels", ContentModels);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ContentType>("contentTypes", ContentTypes);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Deleted>("deleted", Deleted);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.DocumentProcessingJob>("documentProcessingJobs", DocumentProcessingJobs);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Drive>("drive", Drive);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Drive>("drives", Drives);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ColumnDefinition>("externalColumns", ExternalColumns);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.InformationProtection>("informationProtection", InformationProtection);
            writer.WriteBoolValue("isPersonalSite", IsPersonalSite);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.BaseItem>("items", Items);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.List>("lists", Lists);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Onenote>("onenote", Onenote);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.RichLongRunningOperation>("operations", Operations);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.BaseSitePage>("pages", Pages);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Permission>("permissions", Permissions);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.RecycleBin>("recycleBin", RecycleBin);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.Root>("root", Root);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.SiteSettings>("settings", Settings);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.SharepointIds>("sharepointIds", SharepointIds);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.SiteCollection>("siteCollection", SiteCollection);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.Site>("sites", Sites);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.TermStore.Store>("termStore", TermStore);
        }
    }
}
#pragma warning restore CS0618
