// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models
{
    #pragma warning disable CS1591
    public class ThumbnailSet : Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>A 1920x1920 scaled thumbnail.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.Thumbnail? Large
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Thumbnail?>("large"); }
            set { BackingStore?.Set("large", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.Thumbnail Large
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Thumbnail>("large"); }
            set { BackingStore?.Set("large", value); }
        }
#endif
        /// <summary>A 176x176 scaled thumbnail.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.Thumbnail? Medium
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Thumbnail?>("medium"); }
            set { BackingStore?.Set("medium", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.Thumbnail Medium
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Thumbnail>("medium"); }
            set { BackingStore?.Set("medium", value); }
        }
#endif
        /// <summary>A 48x48 cropped thumbnail.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.Thumbnail? Small
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Thumbnail?>("small"); }
            set { BackingStore?.Set("small", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.Thumbnail Small
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Thumbnail>("small"); }
            set { BackingStore?.Set("small", value); }
        }
#endif
        /// <summary>A custom thumbnail image or the original image used to generate other thumbnails.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.Thumbnail? Source
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Thumbnail?>("source"); }
            set { BackingStore?.Set("source", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.Thumbnail Source
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Thumbnail>("source"); }
            set { BackingStore?.Set("source", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.ThumbnailSet"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.ThumbnailSet CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Microsoft.Graph.Beta.Models.ThumbnailSet();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "large", n => { Large = n.GetObjectValue<Microsoft.Graph.Beta.Models.Thumbnail>(Microsoft.Graph.Beta.Models.Thumbnail.CreateFromDiscriminatorValue); } },
                { "medium", n => { Medium = n.GetObjectValue<Microsoft.Graph.Beta.Models.Thumbnail>(Microsoft.Graph.Beta.Models.Thumbnail.CreateFromDiscriminatorValue); } },
                { "small", n => { Small = n.GetObjectValue<Microsoft.Graph.Beta.Models.Thumbnail>(Microsoft.Graph.Beta.Models.Thumbnail.CreateFromDiscriminatorValue); } },
                { "source", n => { Source = n.GetObjectValue<Microsoft.Graph.Beta.Models.Thumbnail>(Microsoft.Graph.Beta.Models.Thumbnail.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.Thumbnail>("large", Large);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.Thumbnail>("medium", Medium);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.Thumbnail>("small", Small);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.Thumbnail>("source", Source);
        }
    }
}
