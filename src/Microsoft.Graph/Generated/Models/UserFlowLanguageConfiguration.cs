// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.18.0")]
    #pragma warning disable CS1591
    public partial class UserFlowLanguageConfiguration : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Collection of pages with the default content to display in a user flow for a specified language. This collection doesn&apos;t allow any kind of modification.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage>? DefaultPages
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage>?>("defaultPages"); }
            set { BackingStore?.Set("defaultPages", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage> DefaultPages
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage>>("defaultPages"); }
            set { BackingStore?.Set("defaultPages", value); }
        }
#endif
        /// <summary>The language name to display. This property is read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>Indicates whether the language is enabled within the user flow.</summary>
        public bool? IsEnabled
        {
            get { return BackingStore?.Get<bool?>("isEnabled"); }
            set { BackingStore?.Set("isEnabled", value); }
        }
        /// <summary>Collection of pages with the overrides messages to display in a user flow for a specified language. This collection only allows to modify the content of the page, any other modification isn&apos;t allowed (creation or deletion of pages).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage>? OverridesPages
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage>?>("overridesPages"); }
            set { BackingStore?.Set("overridesPages", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage> OverridesPages
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage>>("overridesPages"); }
            set { BackingStore?.Set("overridesPages", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.UserFlowLanguageConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.UserFlowLanguageConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.UserFlowLanguageConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "defaultPages", n => { DefaultPages = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage>(global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "isEnabled", n => { IsEnabled = n.GetBoolValue(); } },
                { "overridesPages", n => { OverridesPages = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage>(global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage>("defaultPages", DefaultPages);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteBoolValue("isEnabled", IsEnabled);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.UserFlowLanguagePage>("overridesPages", OverridesPages);
        }
    }
}
#pragma warning restore CS0618
