// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    /// <summary>
    /// Compliance management partner for all platforms
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ComplianceManagementPartner : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    {
        /// <summary>User groups which enroll Android devices through partner.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>? AndroidEnrollmentAssignments
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>?>("androidEnrollmentAssignments"); }
            set { BackingStore?.Set("androidEnrollmentAssignments", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment> AndroidEnrollmentAssignments
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>>("androidEnrollmentAssignments"); }
            set { BackingStore?.Set("androidEnrollmentAssignments", value); }
        }
#endif
        /// <summary>Partner onboarded for Android devices.</summary>
        public bool? AndroidOnboarded
        {
            get { return BackingStore?.Get<bool?>("androidOnboarded"); }
            set { BackingStore?.Set("androidOnboarded", value); }
        }
        /// <summary>Partner display name</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>User groups which enroll ios devices through partner.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>? IosEnrollmentAssignments
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>?>("iosEnrollmentAssignments"); }
            set { BackingStore?.Set("iosEnrollmentAssignments", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment> IosEnrollmentAssignments
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>>("iosEnrollmentAssignments"); }
            set { BackingStore?.Set("iosEnrollmentAssignments", value); }
        }
#endif
        /// <summary>Partner onboarded for ios devices.</summary>
        public bool? IosOnboarded
        {
            get { return BackingStore?.Get<bool?>("iosOnboarded"); }
            set { BackingStore?.Set("iosOnboarded", value); }
        }
        /// <summary>Timestamp of last heartbeat after admin onboarded to the compliance management partner</summary>
        public DateTimeOffset? LastHeartbeatDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastHeartbeatDateTime"); }
            set { BackingStore?.Set("lastHeartbeatDateTime", value); }
        }
        /// <summary>User groups which enroll Mac devices through partner.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>? MacOsEnrollmentAssignments
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>?>("macOsEnrollmentAssignments"); }
            set { BackingStore?.Set("macOsEnrollmentAssignments", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment> MacOsEnrollmentAssignments
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>>("macOsEnrollmentAssignments"); }
            set { BackingStore?.Set("macOsEnrollmentAssignments", value); }
        }
#endif
        /// <summary>Partner onboarded for Mac devices.</summary>
        public bool? MacOsOnboarded
        {
            get { return BackingStore?.Get<bool?>("macOsOnboarded"); }
            set { BackingStore?.Set("macOsOnboarded", value); }
        }
        /// <summary>Partner state of this tenant.</summary>
        public global::Microsoft.Graph.Beta.Models.DeviceManagementPartnerTenantState? PartnerState
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.DeviceManagementPartnerTenantState?>("partnerState"); }
            set { BackingStore?.Set("partnerState", value); }
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.ComplianceManagementPartner"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.ComplianceManagementPartner CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.ComplianceManagementPartner();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "androidEnrollmentAssignments", n => { AndroidEnrollmentAssignments = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>(global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment.CreateFromDiscriminatorValue)?.AsList(); } },
                { "androidOnboarded", n => { AndroidOnboarded = n.GetBoolValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "iosEnrollmentAssignments", n => { IosEnrollmentAssignments = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>(global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment.CreateFromDiscriminatorValue)?.AsList(); } },
                { "iosOnboarded", n => { IosOnboarded = n.GetBoolValue(); } },
                { "lastHeartbeatDateTime", n => { LastHeartbeatDateTime = n.GetDateTimeOffsetValue(); } },
                { "macOsEnrollmentAssignments", n => { MacOsEnrollmentAssignments = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>(global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment.CreateFromDiscriminatorValue)?.AsList(); } },
                { "macOsOnboarded", n => { MacOsOnboarded = n.GetBoolValue(); } },
                { "partnerState", n => { PartnerState = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.DeviceManagementPartnerTenantState>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>("androidEnrollmentAssignments", AndroidEnrollmentAssignments);
            writer.WriteBoolValue("androidOnboarded", AndroidOnboarded);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>("iosEnrollmentAssignments", IosEnrollmentAssignments);
            writer.WriteBoolValue("iosOnboarded", IosOnboarded);
            writer.WriteDateTimeOffsetValue("lastHeartbeatDateTime", LastHeartbeatDateTime);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ComplianceManagementPartnerAssignment>("macOsEnrollmentAssignments", MacOsEnrollmentAssignments);
            writer.WriteBoolValue("macOsOnboarded", MacOsOnboarded);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.DeviceManagementPartnerTenantState>("partnerState", PartnerState);
        }
    }
}
#pragma warning restore CS0618
