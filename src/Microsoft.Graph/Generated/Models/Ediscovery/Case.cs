// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models.Ediscovery
{
    #pragma warning disable CS1591
    public class Case : Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The user who closed the case.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.IdentitySet? ClosedBy
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.IdentitySet?>("closedBy"); }
            set { BackingStore?.Set("closedBy", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.IdentitySet ClosedBy
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.IdentitySet>("closedBy"); }
            set { BackingStore?.Set("closedBy", value); }
        }
#endif
        /// <summary>The date and time when the case was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z</summary>
        public DateTimeOffset? ClosedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("closedDateTime"); }
            set { BackingStore?.Set("closedDateTime", value); }
        }
        /// <summary>The date and time when the entity was created. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z</summary>
        public DateTimeOffset? CreatedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("createdDateTime"); }
            set { BackingStore?.Set("createdDateTime", value); }
        }
        /// <summary>Returns a list of case custodian objects for this case.  Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.Ediscovery.Custodian>? Custodians
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.Custodian>?>("custodians"); }
            set { BackingStore?.Set("custodians", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.Ediscovery.Custodian> Custodians
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.Custodian>>("custodians"); }
            set { BackingStore?.Set("custodians", value); }
        }
#endif
        /// <summary>The case description.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description
        {
            get { return BackingStore?.Get<string?>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#nullable restore
#else
        public string Description
        {
            get { return BackingStore?.Get<string>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#endif
        /// <summary>The case name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>The external case number for customer reference.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ExternalId
        {
            get { return BackingStore?.Get<string?>("externalId"); }
            set { BackingStore?.Set("externalId", value); }
        }
#nullable restore
#else
        public string ExternalId
        {
            get { return BackingStore?.Get<string>("externalId"); }
            set { BackingStore?.Set("externalId", value); }
        }
#endif
        /// <summary>The last user who modified the entity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.IdentitySet? LastModifiedBy
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.IdentitySet?>("lastModifiedBy"); }
            set { BackingStore?.Set("lastModifiedBy", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.IdentitySet LastModifiedBy
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.IdentitySet>("lastModifiedBy"); }
            set { BackingStore?.Set("lastModifiedBy", value); }
        }
#endif
        /// <summary>The latest date and time when the case was modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z</summary>
        public DateTimeOffset? LastModifiedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastModifiedDateTime"); }
            set { BackingStore?.Set("lastModifiedDateTime", value); }
        }
        /// <summary>Returns a list of case legalHold objects for this case.  Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.Ediscovery.LegalHold>? LegalHolds
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.LegalHold>?>("legalHolds"); }
            set { BackingStore?.Set("legalHolds", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.Ediscovery.LegalHold> LegalHolds
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.LegalHold>>("legalHolds"); }
            set { BackingStore?.Set("legalHolds", value); }
        }
#endif
        /// <summary>Returns a list of case noncustodialDataSource objects for this case.  Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.Ediscovery.NoncustodialDataSource>? NoncustodialDataSources
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.NoncustodialDataSource>?>("noncustodialDataSources"); }
            set { BackingStore?.Set("noncustodialDataSources", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.Ediscovery.NoncustodialDataSource> NoncustodialDataSources
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.NoncustodialDataSource>>("noncustodialDataSources"); }
            set { BackingStore?.Set("noncustodialDataSources", value); }
        }
#endif
        /// <summary>Returns a list of case operation objects for this case. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.Ediscovery.CaseOperation>? Operations
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.CaseOperation>?>("operations"); }
            set { BackingStore?.Set("operations", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.Ediscovery.CaseOperation> Operations
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.CaseOperation>>("operations"); }
            set { BackingStore?.Set("operations", value); }
        }
#endif
        /// <summary>Returns a list of reviewSet objects in the case. Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.Ediscovery.ReviewSet>? ReviewSets
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.ReviewSet>?>("reviewSets"); }
            set { BackingStore?.Set("reviewSets", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.Ediscovery.ReviewSet> ReviewSets
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.ReviewSet>>("reviewSets"); }
            set { BackingStore?.Set("reviewSets", value); }
        }
#endif
        /// <summary>The settings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.Ediscovery.CaseSettings? Settings
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Ediscovery.CaseSettings?>("settings"); }
            set { BackingStore?.Set("settings", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.Ediscovery.CaseSettings Settings
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Ediscovery.CaseSettings>("settings"); }
            set { BackingStore?.Set("settings", value); }
        }
#endif
        /// <summary>Returns a list of sourceCollection objects associated with this case.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.Ediscovery.SourceCollection>? SourceCollections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.SourceCollection>?>("sourceCollections"); }
            set { BackingStore?.Set("sourceCollections", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.Ediscovery.SourceCollection> SourceCollections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.SourceCollection>>("sourceCollections"); }
            set { BackingStore?.Set("sourceCollections", value); }
        }
#endif
        /// <summary>The case status. Possible values are unknown, active, pendingDelete, closing, closed, and closedWithError. For details, see the following table.</summary>
        public Microsoft.Graph.Beta.Models.Ediscovery.CaseStatus? Status
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.Ediscovery.CaseStatus?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
        /// <summary>Returns a list of tag objects associated to this case.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.Ediscovery.Tag>? Tags
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.Tag>?>("tags"); }
            set { BackingStore?.Set("tags", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.Ediscovery.Tag> Tags
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Ediscovery.Tag>>("tags"); }
            set { BackingStore?.Set("tags", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.Ediscovery.Case"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.Ediscovery.Case CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Microsoft.Graph.Beta.Models.Ediscovery.Case();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "closedBy", n => { ClosedBy = n.GetObjectValue<Microsoft.Graph.Beta.Models.IdentitySet>(Microsoft.Graph.Beta.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "closedDateTime", n => { ClosedDateTime = n.GetDateTimeOffsetValue(); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "custodians", n => { Custodians = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.Custodian>(Microsoft.Graph.Beta.Models.Ediscovery.Custodian.CreateFromDiscriminatorValue)?.ToList(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "externalId", n => { ExternalId = n.GetStringValue(); } },
                { "lastModifiedBy", n => { LastModifiedBy = n.GetObjectValue<Microsoft.Graph.Beta.Models.IdentitySet>(Microsoft.Graph.Beta.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "legalHolds", n => { LegalHolds = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.LegalHold>(Microsoft.Graph.Beta.Models.Ediscovery.LegalHold.CreateFromDiscriminatorValue)?.ToList(); } },
                { "noncustodialDataSources", n => { NoncustodialDataSources = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.NoncustodialDataSource>(Microsoft.Graph.Beta.Models.Ediscovery.NoncustodialDataSource.CreateFromDiscriminatorValue)?.ToList(); } },
                { "operations", n => { Operations = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.CaseOperation>(Microsoft.Graph.Beta.Models.Ediscovery.CaseOperation.CreateFromDiscriminatorValue)?.ToList(); } },
                { "reviewSets", n => { ReviewSets = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.ReviewSet>(Microsoft.Graph.Beta.Models.Ediscovery.ReviewSet.CreateFromDiscriminatorValue)?.ToList(); } },
                { "settings", n => { Settings = n.GetObjectValue<Microsoft.Graph.Beta.Models.Ediscovery.CaseSettings>(Microsoft.Graph.Beta.Models.Ediscovery.CaseSettings.CreateFromDiscriminatorValue); } },
                { "sourceCollections", n => { SourceCollections = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.SourceCollection>(Microsoft.Graph.Beta.Models.Ediscovery.SourceCollection.CreateFromDiscriminatorValue)?.ToList(); } },
                { "status", n => { Status = n.GetEnumValue<Microsoft.Graph.Beta.Models.Ediscovery.CaseStatus>(); } },
                { "tags", n => { Tags = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.Tag>(Microsoft.Graph.Beta.Models.Ediscovery.Tag.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.IdentitySet>("closedBy", ClosedBy);
            writer.WriteDateTimeOffsetValue("closedDateTime", ClosedDateTime);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.Custodian>("custodians", Custodians);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteStringValue("externalId", ExternalId);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.IdentitySet>("lastModifiedBy", LastModifiedBy);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.LegalHold>("legalHolds", LegalHolds);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.NoncustodialDataSource>("noncustodialDataSources", NoncustodialDataSources);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.CaseOperation>("operations", Operations);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.ReviewSet>("reviewSets", ReviewSets);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.Ediscovery.CaseSettings>("settings", Settings);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.SourceCollection>("sourceCollections", SourceCollections);
            writer.WriteEnumValue<Microsoft.Graph.Beta.Models.Ediscovery.CaseStatus>("status", Status);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Ediscovery.Tag>("tags", Tags);
        }
    }
}
