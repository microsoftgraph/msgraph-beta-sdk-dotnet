// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class RegionalAndLanguageSettings : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Prioritized list of languages the user reads and authors in.Returned by default. Not nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.LocaleInfo>? AuthoringLanguages
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.LocaleInfo>?>("authoringLanguages"); }
            set { BackingStore?.Set("authoringLanguages", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.LocaleInfo> AuthoringLanguages
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.LocaleInfo>>("authoringLanguages"); }
            set { BackingStore?.Set("authoringLanguages", value); }
        }
#endif
        /// <summary>The  user&apos;s preferred user interface language (menus, buttons, ribbons, warning messages) for Microsoft web applications.Returned by default. Not nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.LocaleInfo? DefaultDisplayLanguage
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LocaleInfo?>("defaultDisplayLanguage"); }
            set { BackingStore?.Set("defaultDisplayLanguage", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.LocaleInfo DefaultDisplayLanguage
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LocaleInfo>("defaultDisplayLanguage"); }
            set { BackingStore?.Set("defaultDisplayLanguage", value); }
        }
#endif
        /// <summary>The locale that drives the default date, time, and calendar formatting.Returned by default.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.LocaleInfo? DefaultRegionalFormat
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LocaleInfo?>("defaultRegionalFormat"); }
            set { BackingStore?.Set("defaultRegionalFormat", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.LocaleInfo DefaultRegionalFormat
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LocaleInfo>("defaultRegionalFormat"); }
            set { BackingStore?.Set("defaultRegionalFormat", value); }
        }
#endif
        /// <summary>The language a user expected to use as input for text to speech scenarios.Returned by default.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.LocaleInfo? DefaultSpeechInputLanguage
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LocaleInfo?>("defaultSpeechInputLanguage"); }
            set { BackingStore?.Set("defaultSpeechInputLanguage", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.LocaleInfo DefaultSpeechInputLanguage
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LocaleInfo>("defaultSpeechInputLanguage"); }
            set { BackingStore?.Set("defaultSpeechInputLanguage", value); }
        }
#endif
        /// <summary>The language a user expects to have documents, emails, and messages translated into.Returned by default.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.LocaleInfo? DefaultTranslationLanguage
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LocaleInfo?>("defaultTranslationLanguage"); }
            set { BackingStore?.Set("defaultTranslationLanguage", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.LocaleInfo DefaultTranslationLanguage
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LocaleInfo>("defaultTranslationLanguage"); }
            set { BackingStore?.Set("defaultTranslationLanguage", value); }
        }
#endif
        /// <summary>Allows a user to override their defaultRegionalFormat with field specific formats.Returned by default.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.RegionalFormatOverrides? RegionalFormatOverrides
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.RegionalFormatOverrides?>("regionalFormatOverrides"); }
            set { BackingStore?.Set("regionalFormatOverrides", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.RegionalFormatOverrides RegionalFormatOverrides
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.RegionalFormatOverrides>("regionalFormatOverrides"); }
            set { BackingStore?.Set("regionalFormatOverrides", value); }
        }
#endif
        /// <summary>The user&apos;s preferred settings when consuming translated documents, emails, messages, and websites.Returned by default. Not nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.TranslationPreferences? TranslationPreferences
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.TranslationPreferences?>("translationPreferences"); }
            set { BackingStore?.Set("translationPreferences", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.TranslationPreferences TranslationPreferences
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.TranslationPreferences>("translationPreferences"); }
            set { BackingStore?.Set("translationPreferences", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.RegionalAndLanguageSettings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.RegionalAndLanguageSettings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.RegionalAndLanguageSettings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "authoringLanguages", n => { AuthoringLanguages = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.LocaleInfo>(global::Microsoft.Graph.Beta.Models.LocaleInfo.CreateFromDiscriminatorValue)?.AsList(); } },
                { "defaultDisplayLanguage", n => { DefaultDisplayLanguage = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.LocaleInfo>(global::Microsoft.Graph.Beta.Models.LocaleInfo.CreateFromDiscriminatorValue); } },
                { "defaultRegionalFormat", n => { DefaultRegionalFormat = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.LocaleInfo>(global::Microsoft.Graph.Beta.Models.LocaleInfo.CreateFromDiscriminatorValue); } },
                { "defaultSpeechInputLanguage", n => { DefaultSpeechInputLanguage = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.LocaleInfo>(global::Microsoft.Graph.Beta.Models.LocaleInfo.CreateFromDiscriminatorValue); } },
                { "defaultTranslationLanguage", n => { DefaultTranslationLanguage = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.LocaleInfo>(global::Microsoft.Graph.Beta.Models.LocaleInfo.CreateFromDiscriminatorValue); } },
                { "regionalFormatOverrides", n => { RegionalFormatOverrides = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.RegionalFormatOverrides>(global::Microsoft.Graph.Beta.Models.RegionalFormatOverrides.CreateFromDiscriminatorValue); } },
                { "translationPreferences", n => { TranslationPreferences = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.TranslationPreferences>(global::Microsoft.Graph.Beta.Models.TranslationPreferences.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.LocaleInfo>("authoringLanguages", AuthoringLanguages);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.LocaleInfo>("defaultDisplayLanguage", DefaultDisplayLanguage);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.LocaleInfo>("defaultRegionalFormat", DefaultRegionalFormat);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.LocaleInfo>("defaultSpeechInputLanguage", DefaultSpeechInputLanguage);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.LocaleInfo>("defaultTranslationLanguage", DefaultTranslationLanguage);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.RegionalFormatOverrides>("regionalFormatOverrides", RegionalFormatOverrides);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.TranslationPreferences>("translationPreferences", TranslationPreferences);
        }
    }
}
#pragma warning restore CS0618
