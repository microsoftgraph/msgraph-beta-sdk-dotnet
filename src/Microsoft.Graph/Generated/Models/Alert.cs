// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Microsoft.Graph.Beta.Models
{
    #pragma warning disable CS1591
    public class Alert : Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Name or alias of the activity group (attacker) this alert is attributed to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ActivityGroupName
        {
            get { return BackingStore?.Get<string?>("activityGroupName"); }
            set { BackingStore?.Set("activityGroupName", value); }
        }
#nullable restore
#else
        public string ActivityGroupName
        {
            get { return BackingStore?.Get<string>("activityGroupName"); }
            set { BackingStore?.Set("activityGroupName", value); }
        }
#endif
        /// <summary>The alertDetections property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.AlertDetection>? AlertDetections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.AlertDetection>?>("alertDetections"); }
            set { BackingStore?.Set("alertDetections", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.AlertDetection> AlertDetections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.AlertDetection>>("alertDetections"); }
            set { BackingStore?.Set("alertDetections", value); }
        }
#endif
        /// <summary>Name of the analyst the alert is assigned to for triage, investigation, or remediation (supports update).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AssignedTo
        {
            get { return BackingStore?.Get<string?>("assignedTo"); }
            set { BackingStore?.Set("assignedTo", value); }
        }
#nullable restore
#else
        public string AssignedTo
        {
            get { return BackingStore?.Get<string>("assignedTo"); }
            set { BackingStore?.Set("assignedTo", value); }
        }
#endif
        /// <summary>Azure subscription ID, present if this alert is related to an Azure resource.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AzureSubscriptionId
        {
            get { return BackingStore?.Get<string?>("azureSubscriptionId"); }
            set { BackingStore?.Set("azureSubscriptionId", value); }
        }
#nullable restore
#else
        public string AzureSubscriptionId
        {
            get { return BackingStore?.Get<string>("azureSubscriptionId"); }
            set { BackingStore?.Set("azureSubscriptionId", value); }
        }
#endif
        /// <summary>Microsoft Entra tenant ID. Required.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AzureTenantId
        {
            get { return BackingStore?.Get<string?>("azureTenantId"); }
            set { BackingStore?.Set("azureTenantId", value); }
        }
#nullable restore
#else
        public string AzureTenantId
        {
            get { return BackingStore?.Get<string>("azureTenantId"); }
            set { BackingStore?.Set("azureTenantId", value); }
        }
#endif
        /// <summary>Category of the alert (for example, credentialTheft, ransomware).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Category
        {
            get { return BackingStore?.Get<string?>("category"); }
            set { BackingStore?.Set("category", value); }
        }
#nullable restore
#else
        public string Category
        {
            get { return BackingStore?.Get<string>("category"); }
            set { BackingStore?.Set("category", value); }
        }
#endif
        /// <summary>Time at which the alert was closed. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z (supports update).</summary>
        public DateTimeOffset? ClosedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("closedDateTime"); }
            set { BackingStore?.Set("closedDateTime", value); }
        }
        /// <summary>Security-related stateful information generated by the provider about the cloud application/s related to this alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.CloudAppSecurityState>? CloudAppStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudAppSecurityState>?>("cloudAppStates"); }
            set { BackingStore?.Set("cloudAppStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.CloudAppSecurityState> CloudAppStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.CloudAppSecurityState>>("cloudAppStates"); }
            set { BackingStore?.Set("cloudAppStates", value); }
        }
#endif
        /// <summary>Customer-provided comments on alert (for customer alert management) (supports update).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Comments
        {
            get { return BackingStore?.Get<List<string>?>("comments"); }
            set { BackingStore?.Set("comments", value); }
        }
#nullable restore
#else
        public List<string> Comments
        {
            get { return BackingStore?.Get<List<string>>("comments"); }
            set { BackingStore?.Set("comments", value); }
        }
#endif
        /// <summary>Confidence of the detection logic (percentage between 1-100).</summary>
        public int? Confidence
        {
            get { return BackingStore?.Get<int?>("confidence"); }
            set { BackingStore?.Set("confidence", value); }
        }
        /// <summary>Time at which the alert was created by the alert provider. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.</summary>
        public DateTimeOffset? CreatedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("createdDateTime"); }
            set { BackingStore?.Set("createdDateTime", value); }
        }
        /// <summary>Alert description.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description
        {
            get { return BackingStore?.Get<string?>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#nullable restore
#else
        public string Description
        {
            get { return BackingStore?.Get<string>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#endif
        /// <summary>Set of alerts related to this alert entity (each alert is pushed to the SIEM as a separate record).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? DetectionIds
        {
            get { return BackingStore?.Get<List<string>?>("detectionIds"); }
            set { BackingStore?.Set("detectionIds", value); }
        }
#nullable restore
#else
        public List<string> DetectionIds
        {
            get { return BackingStore?.Get<List<string>>("detectionIds"); }
            set { BackingStore?.Set("detectionIds", value); }
        }
#endif
        /// <summary>Time at which the event or events that served as the trigger to generate the alert occurred. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Required.</summary>
        public DateTimeOffset? EventDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("eventDateTime"); }
            set { BackingStore?.Set("eventDateTime", value); }
        }
        /// <summary>Analyst feedback on the alert. Possible values are: unknown, truePositive, falsePositive, benignPositive. Supports update.</summary>
        public Microsoft.Graph.Beta.Models.AlertFeedback? Feedback
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.AlertFeedback?>("feedback"); }
            set { BackingStore?.Set("feedback", value); }
        }
        /// <summary>Security-related stateful information generated by the provider about the file(s) related to this alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.FileSecurityState>? FileStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.FileSecurityState>?>("fileStates"); }
            set { BackingStore?.Set("fileStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.FileSecurityState> FileStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.FileSecurityState>>("fileStates"); }
            set { BackingStore?.Set("fileStates", value); }
        }
#endif
        /// <summary>A collection of alertHistoryStates comprising an audit log of all updates made to an alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.AlertHistoryState>? HistoryStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.AlertHistoryState>?>("historyStates"); }
            set { BackingStore?.Set("historyStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.AlertHistoryState> HistoryStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.AlertHistoryState>>("historyStates"); }
            set { BackingStore?.Set("historyStates", value); }
        }
#endif
        /// <summary>Security-related stateful information generated by the provider about the host(s) related to this alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.HostSecurityState>? HostStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.HostSecurityState>?>("hostStates"); }
            set { BackingStore?.Set("hostStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.HostSecurityState> HostStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.HostSecurityState>>("hostStates"); }
            set { BackingStore?.Set("hostStates", value); }
        }
#endif
        /// <summary>IDs of incidents related to current alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? IncidentIds
        {
            get { return BackingStore?.Get<List<string>?>("incidentIds"); }
            set { BackingStore?.Set("incidentIds", value); }
        }
#nullable restore
#else
        public List<string> IncidentIds
        {
            get { return BackingStore?.Get<List<string>>("incidentIds"); }
            set { BackingStore?.Set("incidentIds", value); }
        }
#endif
        /// <summary>The investigationSecurityStates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.InvestigationSecurityState>? InvestigationSecurityStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.InvestigationSecurityState>?>("investigationSecurityStates"); }
            set { BackingStore?.Set("investigationSecurityStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.InvestigationSecurityState> InvestigationSecurityStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.InvestigationSecurityState>>("investigationSecurityStates"); }
            set { BackingStore?.Set("investigationSecurityStates", value); }
        }
#endif
        /// <summary>The lastEventDateTime property</summary>
        public DateTimeOffset? LastEventDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastEventDateTime"); }
            set { BackingStore?.Set("lastEventDateTime", value); }
        }
        /// <summary>Time at which the alert entity was last modified. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? LastModifiedDateTime
        {
            get { return BackingStore?.Get<DateTimeOffset?>("lastModifiedDateTime"); }
            set { BackingStore?.Set("lastModifiedDateTime", value); }
        }
        /// <summary>Threat Intelligence pertaining to malware related to this alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.MalwareState>? MalwareStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.MalwareState>?>("malwareStates"); }
            set { BackingStore?.Set("malwareStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.MalwareState> MalwareStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.MalwareState>>("malwareStates"); }
            set { BackingStore?.Set("malwareStates", value); }
        }
#endif
        /// <summary>The messageSecurityStates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.MessageSecurityState>? MessageSecurityStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.MessageSecurityState>?>("messageSecurityStates"); }
            set { BackingStore?.Set("messageSecurityStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.MessageSecurityState> MessageSecurityStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.MessageSecurityState>>("messageSecurityStates"); }
            set { BackingStore?.Set("messageSecurityStates", value); }
        }
#endif
        /// <summary>Security-related stateful information generated by the provider about the network connection(s) related to this alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.NetworkConnection>? NetworkConnections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.NetworkConnection>?>("networkConnections"); }
            set { BackingStore?.Set("networkConnections", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.NetworkConnection> NetworkConnections
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.NetworkConnection>>("networkConnections"); }
            set { BackingStore?.Set("networkConnections", value); }
        }
#endif
        /// <summary>Security-related stateful information generated by the provider about the process or processes related to this alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.Process>? Processes
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Process>?>("processes"); }
            set { BackingStore?.Set("processes", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.Process> Processes
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.Process>>("processes"); }
            set { BackingStore?.Set("processes", value); }
        }
#endif
        /// <summary>Vendor/provider recommended action(s) to take as a result of the alert (for example, isolate machine, enforce2FA, reimage host).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? RecommendedActions
        {
            get { return BackingStore?.Get<List<string>?>("recommendedActions"); }
            set { BackingStore?.Set("recommendedActions", value); }
        }
#nullable restore
#else
        public List<string> RecommendedActions
        {
            get { return BackingStore?.Get<List<string>>("recommendedActions"); }
            set { BackingStore?.Set("recommendedActions", value); }
        }
#endif
        /// <summary>Security-related stateful information generated by the provider about the registry keys related to this alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.RegistryKeyState>? RegistryKeyStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.RegistryKeyState>?>("registryKeyStates"); }
            set { BackingStore?.Set("registryKeyStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.RegistryKeyState> RegistryKeyStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.RegistryKeyState>>("registryKeyStates"); }
            set { BackingStore?.Set("registryKeyStates", value); }
        }
#endif
        /// <summary>Resources related to current alert. For example, for some alerts this can have the Azure Resource value.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.SecurityResource>? SecurityResources
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.SecurityResource>?>("securityResources"); }
            set { BackingStore?.Set("securityResources", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.SecurityResource> SecurityResources
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.SecurityResource>>("securityResources"); }
            set { BackingStore?.Set("securityResources", value); }
        }
#endif
        /// <summary>The severity property</summary>
        public Microsoft.Graph.Beta.Models.AlertSeverity? Severity
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.AlertSeverity?>("severity"); }
            set { BackingStore?.Set("severity", value); }
        }
        /// <summary>Hyperlinks (URIs) to the source material related to the alert, for example, provider&apos;s user interface for alerts or log search.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SourceMaterials
        {
            get { return BackingStore?.Get<List<string>?>("sourceMaterials"); }
            set { BackingStore?.Set("sourceMaterials", value); }
        }
#nullable restore
#else
        public List<string> SourceMaterials
        {
            get { return BackingStore?.Get<List<string>>("sourceMaterials"); }
            set { BackingStore?.Set("sourceMaterials", value); }
        }
#endif
        /// <summary>The status property</summary>
        public Microsoft.Graph.Beta.Models.AlertStatus? Status
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.AlertStatus?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
        /// <summary>User-definable labels that can be applied to an alert and can serve as filter conditions (for example &apos;HVA&apos;, &apos;SAW&apos;) (supports update).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Tags
        {
            get { return BackingStore?.Get<List<string>?>("tags"); }
            set { BackingStore?.Set("tags", value); }
        }
#nullable restore
#else
        public List<string> Tags
        {
            get { return BackingStore?.Get<List<string>>("tags"); }
            set { BackingStore?.Set("tags", value); }
        }
#endif
        /// <summary>Alert title. Required.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Title
        {
            get { return BackingStore?.Get<string?>("title"); }
            set { BackingStore?.Set("title", value); }
        }
#nullable restore
#else
        public string Title
        {
            get { return BackingStore?.Get<string>("title"); }
            set { BackingStore?.Set("title", value); }
        }
#endif
        /// <summary>Security-related information about the specific properties that triggered the alert (properties appearing in the alert). Alerts might contain information about multiple users, hosts, files, ip addresses. This field indicates which properties triggered the alert generation.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.AlertTrigger>? Triggers
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.AlertTrigger>?>("triggers"); }
            set { BackingStore?.Set("triggers", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.AlertTrigger> Triggers
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.AlertTrigger>>("triggers"); }
            set { BackingStore?.Set("triggers", value); }
        }
#endif
        /// <summary>The uriClickSecurityStates property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.UriClickSecurityState>? UriClickSecurityStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.UriClickSecurityState>?>("uriClickSecurityStates"); }
            set { BackingStore?.Set("uriClickSecurityStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.UriClickSecurityState> UriClickSecurityStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.UriClickSecurityState>>("uriClickSecurityStates"); }
            set { BackingStore?.Set("uriClickSecurityStates", value); }
        }
#endif
        /// <summary>Security-related stateful information generated by the provider about the user accounts related to this alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.UserSecurityState>? UserStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.UserSecurityState>?>("userStates"); }
            set { BackingStore?.Set("userStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.UserSecurityState> UserStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.UserSecurityState>>("userStates"); }
            set { BackingStore?.Set("userStates", value); }
        }
#endif
        /// <summary>Complex type containing details about the security product/service vendor, provider, and subprovider (for example, vendor=Microsoft; provider=Windows Defender ATP; subProvider=AppLocker). Required.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Microsoft.Graph.Beta.Models.SecurityVendorInformation? VendorInformation
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.SecurityVendorInformation?>("vendorInformation"); }
            set { BackingStore?.Set("vendorInformation", value); }
        }
#nullable restore
#else
        public Microsoft.Graph.Beta.Models.SecurityVendorInformation VendorInformation
        {
            get { return BackingStore?.Get<Microsoft.Graph.Beta.Models.SecurityVendorInformation>("vendorInformation"); }
            set { BackingStore?.Set("vendorInformation", value); }
        }
#endif
        /// <summary>Threat intelligence pertaining to one or more vulnerabilities related to this alert.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<Microsoft.Graph.Beta.Models.VulnerabilityState>? VulnerabilityStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.VulnerabilityState>?>("vulnerabilityStates"); }
            set { BackingStore?.Set("vulnerabilityStates", value); }
        }
#nullable restore
#else
        public List<Microsoft.Graph.Beta.Models.VulnerabilityState> VulnerabilityStates
        {
            get { return BackingStore?.Get<List<Microsoft.Graph.Beta.Models.VulnerabilityState>>("vulnerabilityStates"); }
            set { BackingStore?.Set("vulnerabilityStates", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.Alert"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new Microsoft.Graph.Beta.Models.Alert CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new Microsoft.Graph.Beta.Models.Alert();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "activityGroupName", n => { ActivityGroupName = n.GetStringValue(); } },
                { "alertDetections", n => { AlertDetections = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.AlertDetection>(Microsoft.Graph.Beta.Models.AlertDetection.CreateFromDiscriminatorValue)?.ToList(); } },
                { "assignedTo", n => { AssignedTo = n.GetStringValue(); } },
                { "azureSubscriptionId", n => { AzureSubscriptionId = n.GetStringValue(); } },
                { "azureTenantId", n => { AzureTenantId = n.GetStringValue(); } },
                { "category", n => { Category = n.GetStringValue(); } },
                { "closedDateTime", n => { ClosedDateTime = n.GetDateTimeOffsetValue(); } },
                { "cloudAppStates", n => { CloudAppStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudAppSecurityState>(Microsoft.Graph.Beta.Models.CloudAppSecurityState.CreateFromDiscriminatorValue)?.ToList(); } },
                { "comments", n => { Comments = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "confidence", n => { Confidence = n.GetIntValue(); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "detectionIds", n => { DetectionIds = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "eventDateTime", n => { EventDateTime = n.GetDateTimeOffsetValue(); } },
                { "feedback", n => { Feedback = n.GetEnumValue<Microsoft.Graph.Beta.Models.AlertFeedback>(); } },
                { "fileStates", n => { FileStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.FileSecurityState>(Microsoft.Graph.Beta.Models.FileSecurityState.CreateFromDiscriminatorValue)?.ToList(); } },
                { "historyStates", n => { HistoryStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.AlertHistoryState>(Microsoft.Graph.Beta.Models.AlertHistoryState.CreateFromDiscriminatorValue)?.ToList(); } },
                { "hostStates", n => { HostStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.HostSecurityState>(Microsoft.Graph.Beta.Models.HostSecurityState.CreateFromDiscriminatorValue)?.ToList(); } },
                { "incidentIds", n => { IncidentIds = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "investigationSecurityStates", n => { InvestigationSecurityStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.InvestigationSecurityState>(Microsoft.Graph.Beta.Models.InvestigationSecurityState.CreateFromDiscriminatorValue)?.ToList(); } },
                { "lastEventDateTime", n => { LastEventDateTime = n.GetDateTimeOffsetValue(); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "malwareStates", n => { MalwareStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.MalwareState>(Microsoft.Graph.Beta.Models.MalwareState.CreateFromDiscriminatorValue)?.ToList(); } },
                { "messageSecurityStates", n => { MessageSecurityStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.MessageSecurityState>(Microsoft.Graph.Beta.Models.MessageSecurityState.CreateFromDiscriminatorValue)?.ToList(); } },
                { "networkConnections", n => { NetworkConnections = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.NetworkConnection>(Microsoft.Graph.Beta.Models.NetworkConnection.CreateFromDiscriminatorValue)?.ToList(); } },
                { "processes", n => { Processes = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Process>(Microsoft.Graph.Beta.Models.Process.CreateFromDiscriminatorValue)?.ToList(); } },
                { "recommendedActions", n => { RecommendedActions = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "registryKeyStates", n => { RegistryKeyStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.RegistryKeyState>(Microsoft.Graph.Beta.Models.RegistryKeyState.CreateFromDiscriminatorValue)?.ToList(); } },
                { "securityResources", n => { SecurityResources = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.SecurityResource>(Microsoft.Graph.Beta.Models.SecurityResource.CreateFromDiscriminatorValue)?.ToList(); } },
                { "severity", n => { Severity = n.GetEnumValue<Microsoft.Graph.Beta.Models.AlertSeverity>(); } },
                { "sourceMaterials", n => { SourceMaterials = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "status", n => { Status = n.GetEnumValue<Microsoft.Graph.Beta.Models.AlertStatus>(); } },
                { "tags", n => { Tags = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "title", n => { Title = n.GetStringValue(); } },
                { "triggers", n => { Triggers = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.AlertTrigger>(Microsoft.Graph.Beta.Models.AlertTrigger.CreateFromDiscriminatorValue)?.ToList(); } },
                { "uriClickSecurityStates", n => { UriClickSecurityStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.UriClickSecurityState>(Microsoft.Graph.Beta.Models.UriClickSecurityState.CreateFromDiscriminatorValue)?.ToList(); } },
                { "userStates", n => { UserStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.UserSecurityState>(Microsoft.Graph.Beta.Models.UserSecurityState.CreateFromDiscriminatorValue)?.ToList(); } },
                { "vendorInformation", n => { VendorInformation = n.GetObjectValue<Microsoft.Graph.Beta.Models.SecurityVendorInformation>(Microsoft.Graph.Beta.Models.SecurityVendorInformation.CreateFromDiscriminatorValue); } },
                { "vulnerabilityStates", n => { VulnerabilityStates = n.GetCollectionOfObjectValues<Microsoft.Graph.Beta.Models.VulnerabilityState>(Microsoft.Graph.Beta.Models.VulnerabilityState.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("activityGroupName", ActivityGroupName);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.AlertDetection>("alertDetections", AlertDetections);
            writer.WriteStringValue("assignedTo", AssignedTo);
            writer.WriteStringValue("azureSubscriptionId", AzureSubscriptionId);
            writer.WriteStringValue("azureTenantId", AzureTenantId);
            writer.WriteStringValue("category", Category);
            writer.WriteDateTimeOffsetValue("closedDateTime", ClosedDateTime);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.CloudAppSecurityState>("cloudAppStates", CloudAppStates);
            writer.WriteCollectionOfPrimitiveValues<string>("comments", Comments);
            writer.WriteIntValue("confidence", Confidence);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteStringValue("description", Description);
            writer.WriteCollectionOfPrimitiveValues<string>("detectionIds", DetectionIds);
            writer.WriteDateTimeOffsetValue("eventDateTime", EventDateTime);
            writer.WriteEnumValue<Microsoft.Graph.Beta.Models.AlertFeedback>("feedback", Feedback);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.FileSecurityState>("fileStates", FileStates);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.AlertHistoryState>("historyStates", HistoryStates);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.HostSecurityState>("hostStates", HostStates);
            writer.WriteCollectionOfPrimitiveValues<string>("incidentIds", IncidentIds);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.InvestigationSecurityState>("investigationSecurityStates", InvestigationSecurityStates);
            writer.WriteDateTimeOffsetValue("lastEventDateTime", LastEventDateTime);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.MalwareState>("malwareStates", MalwareStates);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.MessageSecurityState>("messageSecurityStates", MessageSecurityStates);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.NetworkConnection>("networkConnections", NetworkConnections);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.Process>("processes", Processes);
            writer.WriteCollectionOfPrimitiveValues<string>("recommendedActions", RecommendedActions);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.RegistryKeyState>("registryKeyStates", RegistryKeyStates);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.SecurityResource>("securityResources", SecurityResources);
            writer.WriteEnumValue<Microsoft.Graph.Beta.Models.AlertSeverity>("severity", Severity);
            writer.WriteCollectionOfPrimitiveValues<string>("sourceMaterials", SourceMaterials);
            writer.WriteEnumValue<Microsoft.Graph.Beta.Models.AlertStatus>("status", Status);
            writer.WriteCollectionOfPrimitiveValues<string>("tags", Tags);
            writer.WriteStringValue("title", Title);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.AlertTrigger>("triggers", Triggers);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.UriClickSecurityState>("uriClickSecurityStates", UriClickSecurityStates);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.UserSecurityState>("userStates", UserStates);
            writer.WriteObjectValue<Microsoft.Graph.Beta.Models.SecurityVendorInformation>("vendorInformation", VendorInformation);
            writer.WriteCollectionOfObjectValues<Microsoft.Graph.Beta.Models.VulnerabilityState>("vulnerabilityStates", VulnerabilityStates);
        }
    }
}
