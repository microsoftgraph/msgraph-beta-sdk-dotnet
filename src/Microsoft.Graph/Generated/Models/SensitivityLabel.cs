// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class SensitivityLabel : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The actionSource property</summary>
        public global::Microsoft.Graph.Beta.Models.LabelActionSource? ActionSource
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.LabelActionSource?>("actionSource"); }
            set { BackingStore?.Set("actionSource", value); }
        }
        /// <summary>The applicableTo property</summary>
        public global::Microsoft.Graph.Beta.Models.SensitivityLabelTarget? ApplicableTo
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.SensitivityLabelTarget?>("applicableTo"); }
            set { BackingStore?.Set("applicableTo", value); }
        }
        /// <summary>The applicationMode property</summary>
        public global::Microsoft.Graph.Beta.Models.ApplicationMode? ApplicationMode
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.ApplicationMode?>("applicationMode"); }
            set { BackingStore?.Set("applicationMode", value); }
        }
        /// <summary>The autoTooltip property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AutoTooltip
        {
            get { return BackingStore?.Get<string?>("autoTooltip"); }
            set { BackingStore?.Set("autoTooltip", value); }
        }
#nullable restore
#else
        public string AutoTooltip
        {
            get { return BackingStore?.Get<string>("autoTooltip"); }
            set { BackingStore?.Set("autoTooltip", value); }
        }
#endif
        /// <summary>The color property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Color
        {
            get { return BackingStore?.Get<string?>("color"); }
            set { BackingStore?.Set("color", value); }
        }
#nullable restore
#else
        public string Color
        {
            get { return BackingStore?.Get<string>("color"); }
            set { BackingStore?.Set("color", value); }
        }
#endif
        /// <summary>The description property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description
        {
            get { return BackingStore?.Get<string?>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#nullable restore
#else
        public string Description
        {
            get { return BackingStore?.Get<string>("description"); }
            set { BackingStore?.Set("description", value); }
        }
#endif
        /// <summary>The displayName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName
        {
            get { return BackingStore?.Get<string?>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#nullable restore
#else
        public string DisplayName
        {
            get { return BackingStore?.Get<string>("displayName"); }
            set { BackingStore?.Set("displayName", value); }
        }
#endif
        /// <summary>The isDefault property</summary>
        public bool? IsDefault
        {
            get { return BackingStore?.Get<bool?>("isDefault"); }
            set { BackingStore?.Set("isDefault", value); }
        }
        /// <summary>The isEnabled property</summary>
        public bool? IsEnabled
        {
            get { return BackingStore?.Get<bool?>("isEnabled"); }
            set { BackingStore?.Set("isEnabled", value); }
        }
        /// <summary>The isEndpointProtectionEnabled property</summary>
        public bool? IsEndpointProtectionEnabled
        {
            get { return BackingStore?.Get<bool?>("isEndpointProtectionEnabled"); }
            set { BackingStore?.Set("isEndpointProtectionEnabled", value); }
        }
        /// <summary>The isScopedToUser property</summary>
        public bool? IsScopedToUser
        {
            get { return BackingStore?.Get<bool?>("isScopedToUser"); }
            set { BackingStore?.Set("isScopedToUser", value); }
        }
        /// <summary>The locale property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Locale
        {
            get { return BackingStore?.Get<string?>("locale"); }
            set { BackingStore?.Set("locale", value); }
        }
#nullable restore
#else
        public string Locale
        {
            get { return BackingStore?.Get<string>("locale"); }
            set { BackingStore?.Set("locale", value); }
        }
#endif
        /// <summary>The name property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name
        {
            get { return BackingStore?.Get<string?>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#nullable restore
#else
        public string Name
        {
            get { return BackingStore?.Get<string>("name"); }
            set { BackingStore?.Set("name", value); }
        }
#endif
        /// <summary>The priority property</summary>
        public int? Priority
        {
            get { return BackingStore?.Get<int?>("priority"); }
            set { BackingStore?.Set("priority", value); }
        }
        /// <summary>The rights property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.UsageRightsIncluded? Rights
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.UsageRightsIncluded?>("rights"); }
            set { BackingStore?.Set("rights", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.UsageRightsIncluded Rights
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.UsageRightsIncluded>("rights"); }
            set { BackingStore?.Set("rights", value); }
        }
#endif
        /// <summary>The sublabels property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.SensitivityLabel>? Sublabels
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SensitivityLabel>?>("sublabels"); }
            set { BackingStore?.Set("sublabels", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.SensitivityLabel> Sublabels
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.SensitivityLabel>>("sublabels"); }
            set { BackingStore?.Set("sublabels", value); }
        }
#endif
        /// <summary>The toolTip property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ToolTip
        {
            get { return BackingStore?.Get<string?>("toolTip"); }
            set { BackingStore?.Set("toolTip", value); }
        }
#nullable restore
#else
        public string ToolTip
        {
            get { return BackingStore?.Get<string>("toolTip"); }
            set { BackingStore?.Set("toolTip", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.SensitivityLabel"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.SensitivityLabel CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.SensitivityLabel();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "actionSource", n => { ActionSource = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.LabelActionSource>(); } },
                { "applicableTo", n => { ApplicableTo = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.SensitivityLabelTarget>(); } },
                { "applicationMode", n => { ApplicationMode = n.GetEnumValue<global::Microsoft.Graph.Beta.Models.ApplicationMode>(); } },
                { "autoTooltip", n => { AutoTooltip = n.GetStringValue(); } },
                { "color", n => { Color = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "isDefault", n => { IsDefault = n.GetBoolValue(); } },
                { "isEnabled", n => { IsEnabled = n.GetBoolValue(); } },
                { "isEndpointProtectionEnabled", n => { IsEndpointProtectionEnabled = n.GetBoolValue(); } },
                { "isScopedToUser", n => { IsScopedToUser = n.GetBoolValue(); } },
                { "locale", n => { Locale = n.GetStringValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "priority", n => { Priority = n.GetIntValue(); } },
                { "rights", n => { Rights = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.UsageRightsIncluded>(global::Microsoft.Graph.Beta.Models.UsageRightsIncluded.CreateFromDiscriminatorValue); } },
                { "sublabels", n => { Sublabels = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SensitivityLabel>(global::Microsoft.Graph.Beta.Models.SensitivityLabel.CreateFromDiscriminatorValue)?.AsList(); } },
                { "toolTip", n => { ToolTip = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.LabelActionSource>("actionSource", ActionSource);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.SensitivityLabelTarget>("applicableTo", ApplicableTo);
            writer.WriteEnumValue<global::Microsoft.Graph.Beta.Models.ApplicationMode>("applicationMode", ApplicationMode);
            writer.WriteStringValue("autoTooltip", AutoTooltip);
            writer.WriteStringValue("color", Color);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteBoolValue("isDefault", IsDefault);
            writer.WriteBoolValue("isEnabled", IsEnabled);
            writer.WriteBoolValue("isEndpointProtectionEnabled", IsEndpointProtectionEnabled);
            writer.WriteBoolValue("isScopedToUser", IsScopedToUser);
            writer.WriteStringValue("locale", Locale);
            writer.WriteStringValue("name", Name);
            writer.WriteIntValue("priority", Priority);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.UsageRightsIncluded>("rights", Rights);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.SensitivityLabel>("sublabels", Sublabels);
            writer.WriteStringValue("toolTip", ToolTip);
        }
    }
}
#pragma warning restore CS0618
