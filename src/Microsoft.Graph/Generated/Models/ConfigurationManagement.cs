// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ConfigurationManagement : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The configurationApplications property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ConfigurationApplication>? ConfigurationApplications
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ConfigurationApplication>?>("configurationApplications"); }
            set { BackingStore?.Set("configurationApplications", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ConfigurationApplication> ConfigurationApplications
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ConfigurationApplication>>("configurationApplications"); }
            set { BackingStore?.Set("configurationApplications", value); }
        }
#endif
        /// <summary>The configurationDrifts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ConfigurationDrift>? ConfigurationDrifts
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ConfigurationDrift>?>("configurationDrifts"); }
            set { BackingStore?.Set("configurationDrifts", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ConfigurationDrift> ConfigurationDrifts
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ConfigurationDrift>>("configurationDrifts"); }
            set { BackingStore?.Set("configurationDrifts", value); }
        }
#endif
        /// <summary>The configurationMonitoringResults property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ConfigurationMonitoringResult>? ConfigurationMonitoringResults
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ConfigurationMonitoringResult>?>("configurationMonitoringResults"); }
            set { BackingStore?.Set("configurationMonitoringResults", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ConfigurationMonitoringResult> ConfigurationMonitoringResults
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ConfigurationMonitoringResult>>("configurationMonitoringResults"); }
            set { BackingStore?.Set("configurationMonitoringResults", value); }
        }
#endif
        /// <summary>The configurationMonitors property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ConfigurationMonitor>? ConfigurationMonitors
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ConfigurationMonitor>?>("configurationMonitors"); }
            set { BackingStore?.Set("configurationMonitors", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ConfigurationMonitor> ConfigurationMonitors
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ConfigurationMonitor>>("configurationMonitors"); }
            set { BackingStore?.Set("configurationMonitors", value); }
        }
#endif
        /// <summary>The configurationSnapshotJobs property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ConfigurationSnapshotJob>? ConfigurationSnapshotJobs
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ConfigurationSnapshotJob>?>("configurationSnapshotJobs"); }
            set { BackingStore?.Set("configurationSnapshotJobs", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ConfigurationSnapshotJob> ConfigurationSnapshotJobs
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ConfigurationSnapshotJob>>("configurationSnapshotJobs"); }
            set { BackingStore?.Set("configurationSnapshotJobs", value); }
        }
#endif
        /// <summary>The configurationSnapshots property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.ConfigurationBaseline>? ConfigurationSnapshots
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ConfigurationBaseline>?>("configurationSnapshots"); }
            set { BackingStore?.Set("configurationSnapshots", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.ConfigurationBaseline> ConfigurationSnapshots
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.ConfigurationBaseline>>("configurationSnapshots"); }
            set { BackingStore?.Set("configurationSnapshots", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.ConfigurationManagement"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.ConfigurationManagement CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.ConfigurationManagement();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "configurationApplications", n => { ConfigurationApplications = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ConfigurationApplication>(global::Microsoft.Graph.Beta.Models.ConfigurationApplication.CreateFromDiscriminatorValue)?.AsList(); } },
                { "configurationDrifts", n => { ConfigurationDrifts = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ConfigurationDrift>(global::Microsoft.Graph.Beta.Models.ConfigurationDrift.CreateFromDiscriminatorValue)?.AsList(); } },
                { "configurationMonitoringResults", n => { ConfigurationMonitoringResults = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ConfigurationMonitoringResult>(global::Microsoft.Graph.Beta.Models.ConfigurationMonitoringResult.CreateFromDiscriminatorValue)?.AsList(); } },
                { "configurationMonitors", n => { ConfigurationMonitors = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ConfigurationMonitor>(global::Microsoft.Graph.Beta.Models.ConfigurationMonitor.CreateFromDiscriminatorValue)?.AsList(); } },
                { "configurationSnapshotJobs", n => { ConfigurationSnapshotJobs = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ConfigurationSnapshotJob>(global::Microsoft.Graph.Beta.Models.ConfigurationSnapshotJob.CreateFromDiscriminatorValue)?.AsList(); } },
                { "configurationSnapshots", n => { ConfigurationSnapshots = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ConfigurationBaseline>(global::Microsoft.Graph.Beta.Models.ConfigurationBaseline.CreateFromDiscriminatorValue)?.AsList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ConfigurationApplication>("configurationApplications", ConfigurationApplications);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ConfigurationDrift>("configurationDrifts", ConfigurationDrifts);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ConfigurationMonitoringResult>("configurationMonitoringResults", ConfigurationMonitoringResults);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ConfigurationMonitor>("configurationMonitors", ConfigurationMonitors);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ConfigurationSnapshotJob>("configurationSnapshotJobs", ConfigurationSnapshotJobs);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.ConfigurationBaseline>("configurationSnapshots", ConfigurationSnapshots);
        }
    }
}
#pragma warning restore CS0618
