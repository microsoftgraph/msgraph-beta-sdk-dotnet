// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AccessReviewDataUploadTriggerCallbackData : global::Microsoft.Graph.Beta.Models.CustomExtensionData, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The permissionDescription property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PermissionDescription
        {
            get { return BackingStore?.Get<string?>("permissionDescription"); }
            set { BackingStore?.Set("permissionDescription", value); }
        }
#nullable restore
#else
        public string PermissionDescription
        {
            get { return BackingStore?.Get<string>("permissionDescription"); }
            set { BackingStore?.Set("permissionDescription", value); }
        }
#endif
        /// <summary>The permissionId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PermissionId
        {
            get { return BackingStore?.Get<string?>("permissionId"); }
            set { BackingStore?.Set("permissionId", value); }
        }
#nullable restore
#else
        public string PermissionId
        {
            get { return BackingStore?.Get<string>("permissionId"); }
            set { BackingStore?.Set("permissionId", value); }
        }
#endif
        /// <summary>The permissionName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PermissionName
        {
            get { return BackingStore?.Get<string?>("permissionName"); }
            set { BackingStore?.Set("permissionName", value); }
        }
#nullable restore
#else
        public string PermissionName
        {
            get { return BackingStore?.Get<string>("permissionName"); }
            set { BackingStore?.Set("permissionName", value); }
        }
#endif
        /// <summary>The permissionType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PermissionType
        {
            get { return BackingStore?.Get<string?>("permissionType"); }
            set { BackingStore?.Set("permissionType", value); }
        }
#nullable restore
#else
        public string PermissionType
        {
            get { return BackingStore?.Get<string>("permissionType"); }
            set { BackingStore?.Set("permissionType", value); }
        }
#endif
        /// <summary>The principalAADId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PrincipalAADId
        {
            get { return BackingStore?.Get<string?>("principalAADId"); }
            set { BackingStore?.Set("principalAADId", value); }
        }
#nullable restore
#else
        public string PrincipalAADId
        {
            get { return BackingStore?.Get<string>("principalAADId"); }
            set { BackingStore?.Set("principalAADId", value); }
        }
#endif
        /// <summary>The resourceDescription property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResourceDescription
        {
            get { return BackingStore?.Get<string?>("resourceDescription"); }
            set { BackingStore?.Set("resourceDescription", value); }
        }
#nullable restore
#else
        public string ResourceDescription
        {
            get { return BackingStore?.Get<string>("resourceDescription"); }
            set { BackingStore?.Set("resourceDescription", value); }
        }
#endif
        /// <summary>The resourceId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResourceId
        {
            get { return BackingStore?.Get<string?>("resourceId"); }
            set { BackingStore?.Set("resourceId", value); }
        }
#nullable restore
#else
        public string ResourceId
        {
            get { return BackingStore?.Get<string>("resourceId"); }
            set { BackingStore?.Set("resourceId", value); }
        }
#endif
        /// <summary>The resourceName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResourceName
        {
            get { return BackingStore?.Get<string?>("resourceName"); }
            set { BackingStore?.Set("resourceName", value); }
        }
#nullable restore
#else
        public string ResourceName
        {
            get { return BackingStore?.Get<string>("resourceName"); }
            set { BackingStore?.Set("resourceName", value); }
        }
#endif
        /// <summary>The resourceOwners property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ResourceOwners
        {
            get { return BackingStore?.Get<List<string>?>("resourceOwners"); }
            set { BackingStore?.Set("resourceOwners", value); }
        }
#nullable restore
#else
        public List<string> ResourceOwners
        {
            get { return BackingStore?.Get<List<string>>("resourceOwners"); }
            set { BackingStore?.Set("resourceOwners", value); }
        }
#endif
        /// <summary>The resourceType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResourceType
        {
            get { return BackingStore?.Get<string?>("resourceType"); }
            set { BackingStore?.Set("resourceType", value); }
        }
#nullable restore
#else
        public string ResourceType
        {
            get { return BackingStore?.Get<string>("resourceType"); }
            set { BackingStore?.Set("resourceType", value); }
        }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Models.AccessReviewDataUploadTriggerCallbackData"/> and sets the default values.
        /// </summary>
        public AccessReviewDataUploadTriggerCallbackData() : base()
        {
            OdataType = "#microsoft.graph.accessReviewDataUploadTriggerCallbackData";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.AccessReviewDataUploadTriggerCallbackData"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.AccessReviewDataUploadTriggerCallbackData CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.AccessReviewDataUploadTriggerCallbackData();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "permissionDescription", n => { PermissionDescription = n.GetStringValue(); } },
                { "permissionId", n => { PermissionId = n.GetStringValue(); } },
                { "permissionName", n => { PermissionName = n.GetStringValue(); } },
                { "permissionType", n => { PermissionType = n.GetStringValue(); } },
                { "principalAADId", n => { PrincipalAADId = n.GetStringValue(); } },
                { "resourceDescription", n => { ResourceDescription = n.GetStringValue(); } },
                { "resourceId", n => { ResourceId = n.GetStringValue(); } },
                { "resourceName", n => { ResourceName = n.GetStringValue(); } },
                { "resourceOwners", n => { ResourceOwners = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "resourceType", n => { ResourceType = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("permissionDescription", PermissionDescription);
            writer.WriteStringValue("permissionId", PermissionId);
            writer.WriteStringValue("permissionName", PermissionName);
            writer.WriteStringValue("permissionType", PermissionType);
            writer.WriteStringValue("principalAADId", PrincipalAADId);
            writer.WriteStringValue("resourceDescription", ResourceDescription);
            writer.WriteStringValue("resourceId", ResourceId);
            writer.WriteStringValue("resourceName", ResourceName);
            writer.WriteCollectionOfPrimitiveValues<string>("resourceOwners", ResourceOwners);
            writer.WriteStringValue("resourceType", ResourceType);
        }
    }
}
#pragma warning restore CS0618
