// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AccessPackageAssignmentResourceRole : global::Microsoft.Graph.Beta.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The access package assignments resulting in this role assignment. Read-only. Nullable.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Microsoft.Graph.Beta.Models.AccessPackageAssignment>? AccessPackageAssignments
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AccessPackageAssignment>?>("accessPackageAssignments"); }
            set { BackingStore?.Set("accessPackageAssignments", value); }
        }
#nullable restore
#else
        public List<global::Microsoft.Graph.Beta.Models.AccessPackageAssignment> AccessPackageAssignments
        {
            get { return BackingStore?.Get<List<global::Microsoft.Graph.Beta.Models.AccessPackageAssignment>>("accessPackageAssignments"); }
            set { BackingStore?.Set("accessPackageAssignments", value); }
        }
#endif
        /// <summary>The accessPackageResourceRole property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.AccessPackageResourceRole? AccessPackageResourceRole
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.AccessPackageResourceRole?>("accessPackageResourceRole"); }
            set { BackingStore?.Set("accessPackageResourceRole", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.AccessPackageResourceRole AccessPackageResourceRole
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.AccessPackageResourceRole>("accessPackageResourceRole"); }
            set { BackingStore?.Set("accessPackageResourceRole", value); }
        }
#endif
        /// <summary>The accessPackageResourceScope property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.AccessPackageResourceScope? AccessPackageResourceScope
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.AccessPackageResourceScope?>("accessPackageResourceScope"); }
            set { BackingStore?.Set("accessPackageResourceScope", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.AccessPackageResourceScope AccessPackageResourceScope
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.AccessPackageResourceScope>("accessPackageResourceScope"); }
            set { BackingStore?.Set("accessPackageResourceScope", value); }
        }
#endif
        /// <summary>Read-only. Nullable. Supports $filter (eq) on objectId and $expand query parameters.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Microsoft.Graph.Beta.Models.AccessPackageSubject? AccessPackageSubject
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.AccessPackageSubject?>("accessPackageSubject"); }
            set { BackingStore?.Set("accessPackageSubject", value); }
        }
#nullable restore
#else
        public global::Microsoft.Graph.Beta.Models.AccessPackageSubject AccessPackageSubject
        {
            get { return BackingStore?.Get<global::Microsoft.Graph.Beta.Models.AccessPackageSubject>("accessPackageSubject"); }
            set { BackingStore?.Set("accessPackageSubject", value); }
        }
#endif
        /// <summary>A unique identifier relative to the origin system, corresponding to the originId property of the accessPackageResourceRole.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginId
        {
            get { return BackingStore?.Get<string?>("originId"); }
            set { BackingStore?.Set("originId", value); }
        }
#nullable restore
#else
        public string OriginId
        {
            get { return BackingStore?.Get<string>("originId"); }
            set { BackingStore?.Set("originId", value); }
        }
#endif
        /// <summary>The system where the role assignment is to be created or has been created for an access package assignment, such as SharePointOnline, AadGroup, or AadApplication, corresponding to the originSystem property of the accessPackageResourceRole.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OriginSystem
        {
            get { return BackingStore?.Get<string?>("originSystem"); }
            set { BackingStore?.Set("originSystem", value); }
        }
#nullable restore
#else
        public string OriginSystem
        {
            get { return BackingStore?.Get<string>("originSystem"); }
            set { BackingStore?.Set("originSystem", value); }
        }
#endif
        /// <summary>The value is PendingFulfillment before the access package assignment is delivered to the origin system, and Fulfilled after the access package assignment is delivered to the origin system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Status
        {
            get { return BackingStore?.Get<string?>("status"); }
            set { BackingStore?.Set("status", value); }
        }
#nullable restore
#else
        public string Status
        {
            get { return BackingStore?.Get<string>("status"); }
            set { BackingStore?.Set("status", value); }
        }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.AccessPackageAssignmentResourceRole"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::Microsoft.Graph.Beta.Models.AccessPackageAssignmentResourceRole CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Models.AccessPackageAssignmentResourceRole();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "accessPackageAssignments", n => { AccessPackageAssignments = n.GetCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AccessPackageAssignment>(global::Microsoft.Graph.Beta.Models.AccessPackageAssignment.CreateFromDiscriminatorValue)?.AsList(); } },
                { "accessPackageResourceRole", n => { AccessPackageResourceRole = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.AccessPackageResourceRole>(global::Microsoft.Graph.Beta.Models.AccessPackageResourceRole.CreateFromDiscriminatorValue); } },
                { "accessPackageResourceScope", n => { AccessPackageResourceScope = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.AccessPackageResourceScope>(global::Microsoft.Graph.Beta.Models.AccessPackageResourceScope.CreateFromDiscriminatorValue); } },
                { "accessPackageSubject", n => { AccessPackageSubject = n.GetObjectValue<global::Microsoft.Graph.Beta.Models.AccessPackageSubject>(global::Microsoft.Graph.Beta.Models.AccessPackageSubject.CreateFromDiscriminatorValue); } },
                { "originId", n => { OriginId = n.GetStringValue(); } },
                { "originSystem", n => { OriginSystem = n.GetStringValue(); } },
                { "status", n => { Status = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::Microsoft.Graph.Beta.Models.AccessPackageAssignment>("accessPackageAssignments", AccessPackageAssignments);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.AccessPackageResourceRole>("accessPackageResourceRole", AccessPackageResourceRole);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.AccessPackageResourceScope>("accessPackageResourceScope", AccessPackageResourceScope);
            writer.WriteObjectValue<global::Microsoft.Graph.Beta.Models.AccessPackageSubject>("accessPackageSubject", AccessPackageSubject);
            writer.WriteStringValue("originId", OriginId);
            writer.WriteStringValue("originSystem", OriginSystem);
            writer.WriteStringValue("status", Status);
        }
    }
}
#pragma warning restore CS0618
