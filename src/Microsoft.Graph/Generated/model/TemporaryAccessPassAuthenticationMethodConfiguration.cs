// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Temporary Access Pass Authentication Method Configuration.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class TemporaryAccessPassAuthenticationMethodConfiguration : AuthenticationMethodConfiguration
    {
    
		///<summary>
		/// The TemporaryAccessPassAuthenticationMethodConfiguration constructor
		///</summary>
        public TemporaryAccessPassAuthenticationMethodConfiguration()
        {
            this.ODataType = "microsoft.graph.temporaryAccessPassAuthenticationMethodConfiguration";
        }
	
        /// <summary>
        /// Gets or sets default length.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "defaultLength", Required = Newtonsoft.Json.Required.Default)]
        public Int32? DefaultLength { get; set; }
    
        /// <summary>
        /// Gets or sets default lifetime in minutes.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "defaultLifetimeInMinutes", Required = Newtonsoft.Json.Required.Default)]
        public Int32? DefaultLifetimeInMinutes { get; set; }
    
        /// <summary>
        /// Gets or sets is usable once.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "isUsableOnce", Required = Newtonsoft.Json.Required.Default)]
        public bool? IsUsableOnce { get; set; }
    
        /// <summary>
        /// Gets or sets maximum lifetime in minutes.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "maximumLifetimeInMinutes", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MaximumLifetimeInMinutes { get; set; }
    
        /// <summary>
        /// Gets or sets minimum lifetime in minutes.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "minimumLifetimeInMinutes", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MinimumLifetimeInMinutes { get; set; }
    
        /// <summary>
        /// Gets or sets include targets.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "includeTargets", Required = Newtonsoft.Json.Required.Default)]
        public ITemporaryAccessPassAuthenticationMethodConfigurationIncludeTargetsCollectionPage IncludeTargets { get; set; }
    
    }
}

