// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type StatusDetails.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class StatusDetails : StatusBase
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="StatusDetails"/> class.
        /// </summary>
        public StatusDetails()
        {
            this.ODataType = "microsoft.graph.statusDetails";
        }

        /// <summary>
        /// Gets or sets additionalDetails.
        /// Additional details in case of error.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "additionalDetails", Required = Newtonsoft.Json.Required.Default)]
        public string AdditionalDetails { get; set; }
    
        /// <summary>
        /// Gets or sets errorCategory.
        /// Categorizes the error code. Possible values are Failure, NonServiceFailure, Success.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "errorCategory", Required = Newtonsoft.Json.Required.Default)]
        public string ErrorCategory { get; set; }
    
        /// <summary>
        /// Gets or sets errorCode.
        /// Unique error code if any occurred. Learn more
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "errorCode", Required = Newtonsoft.Json.Required.Default)]
        public string ErrorCode { get; set; }
    
        /// <summary>
        /// Gets or sets reason.
        /// Summarizes the status and describes why the status happened.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "reason", Required = Newtonsoft.Json.Required.Default)]
        public string Reason { get; set; }
    
        /// <summary>
        /// Gets or sets recommendedAction.
        /// Provides the resolution for the corresponding error.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "recommendedAction", Required = Newtonsoft.Json.Required.Default)]
        public string RecommendedAction { get; set; }
    
    }
}
