// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type User Experience Analytics Resource Performance.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class UserExperienceAnalyticsResourcePerformance : Entity
    {
    
		///<summary>
		/// The UserExperienceAnalyticsResourcePerformance constructor
		///</summary>
        public UserExperienceAnalyticsResourcePerformance()
        {
            this.ODataType = "microsoft.graph.userExperienceAnalyticsResourcePerformance";
        }
	
        /// <summary>
        /// Gets or sets cpu spike time percentage.
        /// CPU spike time in percentage. Valid values 0 to 100
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "cpuSpikeTimePercentage", Required = Newtonsoft.Json.Required.Default)]
        public double? CpuSpikeTimePercentage { get; set; }
    
        /// <summary>
        /// Gets or sets cpu spike time percentage threshold.
        /// Threshold of cpuSpikeTimeScore. Valid values 0 to 100
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "cpuSpikeTimePercentageThreshold", Required = Newtonsoft.Json.Required.Default)]
        public double? CpuSpikeTimePercentageThreshold { get; set; }
    
        /// <summary>
        /// Gets or sets cpu spike time score.
        /// The user experience analytics device CPU spike time score. Valid values 0 to 100
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "cpuSpikeTimeScore", Required = Newtonsoft.Json.Required.Default)]
        public Int32? CpuSpikeTimeScore { get; set; }
    
        /// <summary>
        /// Gets or sets device count.
        /// User experience analytics summarized device count.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceCount", Required = Newtonsoft.Json.Required.Default)]
        public Int64? DeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets device id.
        /// The id of the device.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceId", Required = Newtonsoft.Json.Required.Default)]
        public string DeviceId { get; set; }
    
        /// <summary>
        /// Gets or sets device name.
        /// The name of the device.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceName", Required = Newtonsoft.Json.Required.Default)]
        public string DeviceName { get; set; }
    
        /// <summary>
        /// Gets or sets device resource performance score.
        /// Resource performance score of a specific device. Valid values 0 to 100
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceResourcePerformanceScore", Required = Newtonsoft.Json.Required.Default)]
        public Int32? DeviceResourcePerformanceScore { get; set; }
    
        /// <summary>
        /// Gets or sets manufacturer.
        /// The user experience analytics device manufacturer.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "manufacturer", Required = Newtonsoft.Json.Required.Default)]
        public string Manufacturer { get; set; }
    
        /// <summary>
        /// Gets or sets model.
        /// The user experience analytics device model.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "model", Required = Newtonsoft.Json.Required.Default)]
        public string Model { get; set; }
    
        /// <summary>
        /// Gets or sets ram spike time percentage.
        /// RAM spike time in percentage. Valid values 0 to 100
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "ramSpikeTimePercentage", Required = Newtonsoft.Json.Required.Default)]
        public double? RamSpikeTimePercentage { get; set; }
    
        /// <summary>
        /// Gets or sets ram spike time percentage threshold.
        /// Threshold of ramSpikeTimeScore. Valid values 0 to 100
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "ramSpikeTimePercentageThreshold", Required = Newtonsoft.Json.Required.Default)]
        public double? RamSpikeTimePercentageThreshold { get; set; }
    
        /// <summary>
        /// Gets or sets ram spike time score.
        /// The user experience analytics device RAM spike time score. Valid values 0 to 100
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "ramSpikeTimeScore", Required = Newtonsoft.Json.Required.Default)]
        public Int32? RamSpikeTimeScore { get; set; }
    
    }
}

