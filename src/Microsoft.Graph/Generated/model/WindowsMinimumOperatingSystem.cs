// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type WindowsMinimumOperatingSystem.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class WindowsMinimumOperatingSystem
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="WindowsMinimumOperatingSystem"/> class.
        /// </summary>
        public WindowsMinimumOperatingSystem()
        {
            this.ODataType = "microsoft.graph.windowsMinimumOperatingSystem";
        }

        /// <summary>
        /// Gets or sets v10_0.
        /// Windows version 10.0 or later.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "v10_0", Required = Newtonsoft.Json.Required.Default)]
        public bool? V10_0 { get; set; }
    
        /// <summary>
        /// Gets or sets v10_1607.
        /// Windows 10 1607 or later.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "v10_1607", Required = Newtonsoft.Json.Required.Default)]
        public bool? V10_1607 { get; set; }
    
        /// <summary>
        /// Gets or sets v10_1703.
        /// Windows 10 1703 or later.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "v10_1703", Required = Newtonsoft.Json.Required.Default)]
        public bool? V10_1703 { get; set; }
    
        /// <summary>
        /// Gets or sets v10_1709.
        /// Windows 10 1709 or later.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "v10_1709", Required = Newtonsoft.Json.Required.Default)]
        public bool? V10_1709 { get; set; }
    
        /// <summary>
        /// Gets or sets v10_1803.
        /// Windows 10 1803 or later.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "v10_1803", Required = Newtonsoft.Json.Required.Default)]
        public bool? V10_1803 { get; set; }
    
        /// <summary>
        /// Gets or sets v10_1809.
        /// Windows 10 1809 or later.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "v10_1809", Required = Newtonsoft.Json.Required.Default)]
        public bool? V10_1809 { get; set; }
    
        /// <summary>
        /// Gets or sets v10_1903.
        /// Windows 10 1903 or later.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "v10_1903", Required = Newtonsoft.Json.Required.Default)]
        public bool? V10_1903 { get; set; }
    
        /// <summary>
        /// Gets or sets v10_1909.
        /// Windows 10 1909 or later.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "v10_1909", Required = Newtonsoft.Json.Required.Default)]
        public bool? V10_1909 { get; set; }
    
        /// <summary>
        /// Gets or sets v10_2004.
        /// Windows 10 2004 or later.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "v10_2004", Required = Newtonsoft.Json.Required.Default)]
        public bool? V10_2004 { get; set; }
    
        /// <summary>
        /// Gets or sets v8_0.
        /// Windows version 8.0 or later.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "v8_0", Required = Newtonsoft.Json.Required.Default)]
        public bool? V8_0 { get; set; }
    
        /// <summary>
        /// Gets or sets v8_1.
        /// Windows version 8.1 or later.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "v8_1", Required = Newtonsoft.Json.Required.Default)]
        public bool? V8_1 { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "@odata.type", Required = Newtonsoft.Json.Required.Default)]
        public string ODataType { get; set; }
    
    }
}
