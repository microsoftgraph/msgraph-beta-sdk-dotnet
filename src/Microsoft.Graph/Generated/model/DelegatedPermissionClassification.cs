// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Delegated Permission Classification.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class DelegatedPermissionClassification : Entity
    {
    
		///<summary>
		/// The DelegatedPermissionClassification constructor
		///</summary>
        public DelegatedPermissionClassification()
        {
            this.ODataType = "microsoft.graph.delegatedPermissionClassification";
        }
	
        /// <summary>
        /// Gets or sets classification.
        /// The classification value being given. Possible value: low. Does not support $filter.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "classification", Required = Newtonsoft.Json.Required.Default)]
        public PermissionClassificationType? Classification { get; set; }
    
        /// <summary>
        /// Gets or sets permission id.
        /// The unique identifier (id) for the delegated permission listed in the oauth2PermissionScopes collection of the servicePrincipal. Required on create. Does not support $filter.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "permissionId", Required = Newtonsoft.Json.Required.Default)]
        public string PermissionId { get; set; }
    
        /// <summary>
        /// Gets or sets permission name.
        /// The claim value (value) for the delegated permission listed in the oauth2PermissionScopes collection of the servicePrincipal. Does not support $filter.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "permissionName", Required = Newtonsoft.Json.Required.Default)]
        public string PermissionName { get; set; }
    
    }
}

