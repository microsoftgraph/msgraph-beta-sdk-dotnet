// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type SubjectRightsRequestHistory.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<SubjectRightsRequestHistory>))]
    public partial class SubjectRightsRequestHistory
    {

        /// <summary>
        /// Gets or sets changedBy.
        /// Identity of the user who changed the  subject rights request.
        /// </summary>
        [JsonPropertyName("changedBy")]
        public IdentitySet ChangedBy { get; set; }
    
        /// <summary>
        /// Gets or sets eventDateTime.
        /// Data and time when the entity was changed.
        /// </summary>
        [JsonPropertyName("eventDateTime")]
        public DateTimeOffset? EventDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets stage.
        /// The stage when the entity was changed. Possible values are: contentRetrieval, contentReview, generateReport, contentDeletion, caseResolved, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("stage")]
        public SubjectRightsRequestStage? Stage { get; set; }
    
        /// <summary>
        /// Gets or sets stageStatus.
        /// The status of the stage when the entity was changed. Possible values are: notStarted, current, completed, failed, unknownFutureValue.
        /// </summary>
        [JsonPropertyName("stageStatus")]
        public SubjectRightsRequestStageStatus? StageStatus { get; set; }
    
        /// <summary>
        /// Gets or sets type.
        /// Type of history.
        /// </summary>
        [JsonPropertyName("type")]
        public string Type { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
