// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Mac OSSoftware Update Account Summary.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class MacOSSoftwareUpdateAccountSummary : Entity
    {
    
		///<summary>
		/// The MacOSSoftwareUpdateAccountSummary constructor
		///</summary>
        public MacOSSoftwareUpdateAccountSummary()
        {
            this.ODataType = "microsoft.graph.macOSSoftwareUpdateAccountSummary";
        }
	
        /// <summary>
        /// Gets or sets device id.
        /// The device ID.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceId", Required = Newtonsoft.Json.Required.Default)]
        public string DeviceId { get; set; }
    
        /// <summary>
        /// Gets or sets device name.
        /// The device name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceName", Required = Newtonsoft.Json.Required.Default)]
        public string DeviceName { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// The name of the report
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "displayName", Required = Newtonsoft.Json.Required.Default)]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets failed update count.
        /// Number of failed updates on the device.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "failedUpdateCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? FailedUpdateCount { get; set; }
    
        /// <summary>
        /// Gets or sets last updated date time.
        /// Last date time the report for this device was updated.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastUpdatedDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? LastUpdatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets os version.
        /// The OS version.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "osVersion", Required = Newtonsoft.Json.Required.Default)]
        public string OsVersion { get; set; }
    
        /// <summary>
        /// Gets or sets successful update count.
        /// Number of successful updates on the device.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "successfulUpdateCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? SuccessfulUpdateCount { get; set; }
    
        /// <summary>
        /// Gets or sets total update count.
        /// Number of total updates on the device.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "totalUpdateCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? TotalUpdateCount { get; set; }
    
        /// <summary>
        /// Gets or sets user id.
        /// The user ID.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "userId", Required = Newtonsoft.Json.Required.Default)]
        public string UserId { get; set; }
    
        /// <summary>
        /// Gets or sets user principal name.
        /// The user principal name
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "userPrincipalName", Required = Newtonsoft.Json.Required.Default)]
        public string UserPrincipalName { get; set; }
    
        /// <summary>
        /// Gets or sets category summaries.
        /// Summary of the updates by category.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "categorySummaries", Required = Newtonsoft.Json.Required.Default)]
        public IMacOSSoftwareUpdateAccountSummaryCategorySummariesCollectionPage CategorySummaries { get; set; }
    
    }
}

