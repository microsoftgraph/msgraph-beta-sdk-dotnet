// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type SharingDetail.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class SharingDetail
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SharingDetail"/> class.
        /// </summary>
        public SharingDetail()
        {
            this.ODataType = "microsoft.graph.sharingDetail";
        }

        /// <summary>
        /// Gets or sets sharedBy.
        /// The user who shared the document.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "sharedBy", Required = Newtonsoft.Json.Required.Default)]
        public InsightIdentity SharedBy { get; set; }
    
        /// <summary>
        /// Gets or sets sharedDateTime.
        /// The date and time the file was last shared. The timestamp represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: 2014-01-01T00:00:00Z. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "sharedDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? SharedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets sharingReference.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "sharingReference", Required = Newtonsoft.Json.Required.Default)]
        public ResourceReference SharingReference { get; set; }
    
        /// <summary>
        /// Gets or sets sharingSubject.
        /// The subject with which the document was shared.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "sharingSubject", Required = Newtonsoft.Json.Required.Default)]
        public string SharingSubject { get; set; }
    
        /// <summary>
        /// Gets or sets sharingType.
        /// Determines the way the document was shared, can be by a 'Link', 'Attachment', 'Group', 'Site'.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "sharingType", Required = Newtonsoft.Json.Required.Default)]
        public string SharingType { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "@odata.type", Required = Newtonsoft.Json.Required.Default)]
        public string ODataType { get; set; }
    
    }
}
