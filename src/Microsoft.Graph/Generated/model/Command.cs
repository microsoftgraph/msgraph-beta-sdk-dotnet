// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Command.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class Command : Entity
    {
    
		///<summary>
		/// The Command constructor
		///</summary>
        public Command()
        {
            this.ODataType = "microsoft.graph.command";
        }
	
        /// <summary>
        /// Gets or sets app service name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "appServiceName", Required = Newtonsoft.Json.Required.Default)]
        public string AppServiceName { get; set; }
    
        /// <summary>
        /// Gets or sets error.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "error", Required = Newtonsoft.Json.Required.Default)]
        public string Error { get; set; }
    
        /// <summary>
        /// Gets or sets package family name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "packageFamilyName", Required = Newtonsoft.Json.Required.Default)]
        public string PackageFamilyName { get; set; }
    
        /// <summary>
        /// Gets or sets payload.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "payload", Required = Newtonsoft.Json.Required.Default)]
        public PayloadRequestObject Payload { get; set; }
    
        /// <summary>
        /// Gets or sets permission ticket.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "permissionTicket", Required = Newtonsoft.Json.Required.Default)]
        public string PermissionTicket { get; set; }
    
        /// <summary>
        /// Gets or sets post back uri.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "postBackUri", Required = Newtonsoft.Json.Required.Default)]
        public string PostBackUri { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "status", Required = Newtonsoft.Json.Required.Default)]
        public string Status { get; set; }
    
        /// <summary>
        /// Gets or sets type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "type", Required = Newtonsoft.Json.Required.Default)]
        public string Type { get; set; }
    
        /// <summary>
        /// Gets or sets responsepayload.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "responsepayload", Required = Newtonsoft.Json.Required.Default)]
        public PayloadResponse Responsepayload { get; set; }
    
    }
}

