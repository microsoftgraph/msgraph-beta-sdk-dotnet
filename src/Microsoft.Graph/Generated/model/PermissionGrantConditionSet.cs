// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Permission Grant Condition Set.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class PermissionGrantConditionSet : Entity
    {
    
		///<summary>
		/// The PermissionGrantConditionSet constructor
		///</summary>
        public PermissionGrantConditionSet()
        {
            this.ODataType = "microsoft.graph.permissionGrantConditionSet";
        }
	
        /// <summary>
        /// Gets or sets client application ids.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "clientApplicationIds", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> ClientApplicationIds { get; set; }
    
        /// <summary>
        /// Gets or sets client application publisher ids.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "clientApplicationPublisherIds", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> ClientApplicationPublisherIds { get; set; }
    
        /// <summary>
        /// Gets or sets client applications from verified publisher only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "clientApplicationsFromVerifiedPublisherOnly", Required = Newtonsoft.Json.Required.Default)]
        public bool? ClientApplicationsFromVerifiedPublisherOnly { get; set; }
    
        /// <summary>
        /// Gets or sets client application tenant ids.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "clientApplicationTenantIds", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> ClientApplicationTenantIds { get; set; }
    
        /// <summary>
        /// Gets or sets permission classification.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "permissionClassification", Required = Newtonsoft.Json.Required.Default)]
        public string PermissionClassification { get; set; }
    
        /// <summary>
        /// Gets or sets permissions.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "permissions", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> Permissions { get; set; }
    
        /// <summary>
        /// Gets or sets permission type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "permissionType", Required = Newtonsoft.Json.Required.Default)]
        public PermissionType? PermissionType { get; set; }
    
        /// <summary>
        /// Gets or sets resource application.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "resourceApplication", Required = Newtonsoft.Json.Required.Default)]
        public string ResourceApplication { get; set; }
    
    }
}

