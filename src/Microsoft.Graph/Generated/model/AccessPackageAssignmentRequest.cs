// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Access Package Assignment Request.
    /// </summary>
    public partial class AccessPackageAssignmentRequestObject : Entity
    {
    
        /// <summary>
        /// Gets or sets answers.
        /// Answers provided by the requestor to accessPackageQuestions asked of them at the time of request.
        /// </summary>
        [JsonPropertyName("answers")]
        public IEnumerable<AccessPackageAnswer> Answers { get; set; }
    
        /// <summary>
        /// Gets or sets completed date.
        /// The date of the end of processing, either successful or failure, of a request. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        /// </summary>
        [JsonPropertyName("completedDate")]
        public DateTimeOffset? CompletedDate { get; set; }
    
        /// <summary>
        /// Gets or sets created date time.
        /// The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.
        /// </summary>
        [JsonPropertyName("createdDateTime")]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets expiration date time.
        /// </summary>
        [JsonPropertyName("expirationDateTime")]
        public DateTimeOffset? ExpirationDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets is validation only.
        /// True if the request is not to be processed for assignment.
        /// </summary>
        [JsonPropertyName("isValidationOnly")]
        public bool? IsValidationOnly { get; set; }
    
        /// <summary>
        /// Gets or sets justification.
        /// The requestor's supplied justification.
        /// </summary>
        [JsonPropertyName("justification")]
        public string Justification { get; set; }
    
        /// <summary>
        /// Gets or sets request state.
        /// One of PendingApproval, Canceled,  Denied, Delivering, Delivered, PartiallyDelivered, DeliveryFailed, Submitted or Scheduled. Read-only.
        /// </summary>
        [JsonPropertyName("requestState")]
        public string RequestState { get; set; }
    
        /// <summary>
        /// Gets or sets request status.
        /// More information on the request processing status. Read-only.
        /// </summary>
        [JsonPropertyName("requestStatus")]
        public string RequestStatus { get; set; }
    
        /// <summary>
        /// Gets or sets request type.
        /// The type of the request. The possible values are: notSpecified, userAdd, userUpdate, userRemove, adminAdd, adminUpdate, adminRemove, systemAdd, systemUpdate, systemRemove, onBehalfAdd, unknownFutureValue. A request from the user themselves would have requestType of UserAdd or UserRemove. This property cannot be changed once set.
        /// </summary>
        [JsonPropertyName("requestType")]
        public string RequestType { get; set; }
    
        /// <summary>
        /// Gets or sets schedule.
        /// The range of dates that access is to be assigned to the requestor. This property cannot be changed once set.
        /// </summary>
        [JsonPropertyName("schedule")]
        public RequestSchedule Schedule { get; set; }
    
        /// <summary>
        /// Gets or sets access package.
        /// The access package associated with the accessPackageAssignmentRequest. An access package defines the collections of resource roles and the policies for how one or more users can get access to those resources. Read-only. Nullable.  Supports $expand.
        /// </summary>
        [JsonPropertyName("accessPackage")]
        public AccessPackage AccessPackage { get; set; }
    
        /// <summary>
        /// Gets or sets access package assignment.
        /// For a requestType of UserAdd or AdminAdd, this is an access package assignment requested to be created.  For a requestType of UserRemove, AdminRemove or SystemRemove, this has the id property of an existing assignment to be removed.   Supports $expand.
        /// </summary>
        [JsonPropertyName("accessPackageAssignment")]
        public AccessPackageAssignment AccessPackageAssignment { get; set; }
    
        /// <summary>
        /// Gets or sets requestor.
        /// The subject who requested or, if a direct assignment, was assigned. Read-only. Nullable. Supports $expand.
        /// </summary>
        [JsonPropertyName("requestor")]
        public AccessPackageSubject Requestor { get; set; }
    
    }
}

