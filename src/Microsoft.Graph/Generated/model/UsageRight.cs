// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Usage Right.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class UsageRight : Entity
    {
    
		///<summary>
		/// The UsageRight constructor
		///</summary>
        public UsageRight()
        {
            this.ODataType = "microsoft.graph.usageRight";
        }
	
        /// <summary>
        /// Gets or sets catalog id.
        /// Product id corresponding to the usage right.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "catalogId", Required = Newtonsoft.Json.Required.Default)]
        public string CatalogId { get; set; }
    
        /// <summary>
        /// Gets or sets service identifier.
        /// Identifier of the service corresponding to the usage right.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "serviceIdentifier", Required = Newtonsoft.Json.Required.Default)]
        public string ServiceIdentifier { get; set; }
    
        /// <summary>
        /// Gets or sets state.
        /// The state of the usage right. Possible values are: active, inactive, warning, suspended.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "state", Required = Newtonsoft.Json.Required.Default)]
        public UsageRightState? State { get; set; }
    
    }
}

