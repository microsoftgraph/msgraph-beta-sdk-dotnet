// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Office365Groups Activity Counts.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class Office365GroupsActivityCounts : Entity
    {
    
		///<summary>
		/// The Office365GroupsActivityCounts constructor
		///</summary>
        public Office365GroupsActivityCounts()
        {
            this.ODataType = "microsoft.graph.office365GroupsActivityCounts";
        }
	
        /// <summary>
        /// Gets or sets exchange emails received.
        /// The number of emails received by Group mailboxes.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "exchangeEmailsReceived", Required = Newtonsoft.Json.Required.Default)]
        public Int64? ExchangeEmailsReceived { get; set; }
    
        /// <summary>
        /// Gets or sets report date.
        /// The date on which a number of emails were sent to a group mailbox or a number of messages were posted, read, or liked in a Yammer group
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "reportDate", Required = Newtonsoft.Json.Required.Default)]
        public Date ReportDate { get; set; }
    
        /// <summary>
        /// Gets or sets report period.
        /// The number of days the report covers.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "reportPeriod", Required = Newtonsoft.Json.Required.Default)]
        public string ReportPeriod { get; set; }
    
        /// <summary>
        /// Gets or sets report refresh date.
        /// The latest date of the content.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "reportRefreshDate", Required = Newtonsoft.Json.Required.Default)]
        public Date ReportRefreshDate { get; set; }
    
        /// <summary>
        /// Gets or sets yammer messages liked.
        /// The number of messages liked in Yammer groups.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "yammerMessagesLiked", Required = Newtonsoft.Json.Required.Default)]
        public Int64? YammerMessagesLiked { get; set; }
    
        /// <summary>
        /// Gets or sets yammer messages posted.
        /// The number of messages posted to Yammer groups.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "yammerMessagesPosted", Required = Newtonsoft.Json.Required.Default)]
        public Int64? YammerMessagesPosted { get; set; }
    
        /// <summary>
        /// Gets or sets yammer messages read.
        /// The number of messages read in Yammer groups.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "yammerMessagesRead", Required = Newtonsoft.Json.Required.Default)]
        public Int64? YammerMessagesRead { get; set; }
    
    }
}

