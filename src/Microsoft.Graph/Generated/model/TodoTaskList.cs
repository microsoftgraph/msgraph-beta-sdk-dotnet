// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Todo Task List.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class TodoTaskList : Entity
    {
    
		///<summary>
		/// The TodoTaskList constructor
		///</summary>
        public TodoTaskList()
        {
            this.ODataType = "microsoft.graph.todoTaskList";
        }
	
        /// <summary>
        /// Gets or sets display name.
        /// The name of the task list.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "displayName", Required = Newtonsoft.Json.Required.Default)]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets is owner.
        /// True if the user is owner of the given task list.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "isOwner", Required = Newtonsoft.Json.Required.Default)]
        public bool? IsOwner { get; set; }
    
        /// <summary>
        /// Gets or sets is shared.
        /// True if the task list is shared with other users
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "isShared", Required = Newtonsoft.Json.Required.Default)]
        public bool? IsShared { get; set; }
    
        /// <summary>
        /// Gets or sets wellknown list name.
        /// Property indicating the list name if the given list is a well-known list. Possible values are: none, defaultList, flaggedEmails, unknownFutureValue.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "wellknownListName", Required = Newtonsoft.Json.Required.Default)]
        public WellknownListName? WellknownListName { get; set; }
    
        /// <summary>
        /// Gets or sets extensions.
        /// The collection of open extensions defined for the task list. Nullable.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "extensions", Required = Newtonsoft.Json.Required.Default)]
        public ITodoTaskListExtensionsCollectionPage Extensions { get; set; }
    
        /// <summary>
        /// Gets or sets tasks.
        /// The tasks in this task list. Read-only. Nullable.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "tasks", Required = Newtonsoft.Json.Required.Default)]
        public ITodoTaskListTasksCollectionPage Tasks { get; set; }
    
    }
}

