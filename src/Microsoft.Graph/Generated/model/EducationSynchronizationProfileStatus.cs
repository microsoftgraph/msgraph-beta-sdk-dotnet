// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Education Synchronization Profile Status.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<EducationSynchronizationProfileStatus>))]
    public partial class EducationSynchronizationProfileStatus : Entity
    {
    
        /// <summary>
        /// Gets or sets last activity date time.
        /// Represents the time when most recent changes were observed in profile.
        /// </summary>
        [JsonPropertyName("lastActivityDateTime")]
        public DateTimeOffset? LastActivityDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last synchronization date time.
        /// Represents the time of the most recent successful  synchronization.
        /// </summary>
        [JsonPropertyName("lastSynchronizationDateTime")]
        public DateTimeOffset? LastSynchronizationDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets status.
        /// The status of a sync. Possible values are: paused, inProgress, success, error, quarantined, validationError, extracting, validating.
        /// </summary>
        [JsonPropertyName("status")]
        public EducationSynchronizationStatus? Status { get; set; }
    
    }
}

