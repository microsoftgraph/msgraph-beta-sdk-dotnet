// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type MalwareState.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class MalwareState
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MalwareState"/> class.
        /// </summary>
        public MalwareState()
        {
            this.ODataType = "microsoft.graph.malwareState";
        }

        /// <summary>
        /// Gets or sets category.
        /// Provider-generated malware category (for example, trojan, ransomware, etc.).
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "category", Required = Newtonsoft.Json.Required.Default)]
        public string Category { get; set; }
    
        /// <summary>
        /// Gets or sets family.
        /// Provider-generated malware family (for example, 'wannacry', 'notpetya', etc.).
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "family", Required = Newtonsoft.Json.Required.Default)]
        public string Family { get; set; }
    
        /// <summary>
        /// Gets or sets name.
        /// Provider-generated malware variant name (for example, Trojan:Win32/Powessere.H).
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "name", Required = Newtonsoft.Json.Required.Default)]
        public string Name { get; set; }
    
        /// <summary>
        /// Gets or sets severity.
        /// Provider-determined severity of this malware.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "severity", Required = Newtonsoft.Json.Required.Default)]
        public string Severity { get; set; }
    
        /// <summary>
        /// Gets or sets wasRunning.
        /// Indicates whether the detected file (malware/vulnerability) was running at the time of detection or was detected at rest on the disk.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "wasRunning", Required = Newtonsoft.Json.Required.Default)]
        public bool? WasRunning { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "@odata.type", Required = Newtonsoft.Json.Required.Default)]
        public string ODataType { get; set; }
    
    }
}
