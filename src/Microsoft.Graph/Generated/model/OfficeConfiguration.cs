// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Office Configuration.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class OfficeConfiguration
    {
    
		///<summary>
		/// The OfficeConfiguration constructor
		///</summary>
        public OfficeConfiguration()
        {
            this.ODataType = "microsoft.graph.officeConfiguration";
        }
	
        /// <summary>
        /// Gets or sets tenant checkin statuses.
        /// List of office Client check-in status.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "tenantCheckinStatuses", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<OfficeClientCheckinStatus> TenantCheckinStatuses { get; set; }
    
        /// <summary>
        /// Gets or sets tenant user checkin summary.
        /// Entity that describes tenant check-in statues
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "tenantUserCheckinSummary", Required = Newtonsoft.Json.Required.Default)]
        public OfficeUserCheckinSummary TenantUserCheckinSummary { get; set; }
    
        /// <summary>
        /// Gets or sets client configurations.
        /// List of office Client configuration.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "clientConfigurations", Required = Newtonsoft.Json.Required.Default)]
        public IOfficeConfigurationClientConfigurationsCollectionPage ClientConfigurations { get; set; }
    
        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "@odata.type", Required = Newtonsoft.Json.Required.Default)]
        public string ODataType { get; set; }

        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true, WriteData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }
    
    }
}

