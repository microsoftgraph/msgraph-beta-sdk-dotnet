// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: MethodRequestBody.cs.tt

namespace Microsoft.Graph
{
    using Newtonsoft.Json;
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;

    /// <summary>
    /// The type PrinterCreateRequestBody.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class PrinterCreateRequestBody
    {
    
        /// <summary>
        /// Gets or sets DisplayName.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "displayName", Required = Newtonsoft.Json.Required.Default)]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets Manufacturer.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "manufacturer", Required = Newtonsoft.Json.Required.Default)]
        public string Manufacturer { get; set; }
    
        /// <summary>
        /// Gets or sets Model.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "model", Required = Newtonsoft.Json.Required.Default)]
        public string Model { get; set; }
    
        /// <summary>
        /// Gets or sets PhysicalDeviceId.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "physicalDeviceId", Required = Newtonsoft.Json.Required.Default)]
        public string PhysicalDeviceId { get; set; }
    
        /// <summary>
        /// Gets or sets HasPhysicalDevice.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "hasPhysicalDevice", Required = Newtonsoft.Json.Required.Default)]
        public bool? HasPhysicalDevice { get; set; }
    
        /// <summary>
        /// Gets or sets CertificateSigningRequest.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "certificateSigningRequest", Required = Newtonsoft.Json.Required.Default)]
        public PrintCertificateSigningRequestObject CertificateSigningRequest { get; set; }
    
        /// <summary>
        /// Gets or sets ConnectorId.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "connectorId", Required = Newtonsoft.Json.Required.Default)]
        public string ConnectorId { get; set; }
    
    }
}
