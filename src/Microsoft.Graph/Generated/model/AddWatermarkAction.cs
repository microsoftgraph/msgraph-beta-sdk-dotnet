// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type AddWatermarkAction.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class AddWatermarkAction : InformationProtectionAction
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AddWatermarkAction"/> class.
        /// </summary>
        public AddWatermarkAction()
        {
            this.ODataType = "microsoft.graph.addWatermarkAction";
        }

        /// <summary>
        /// Gets or sets fontColor.
        /// Color of the font to use for the watermark.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "fontColor", Required = Newtonsoft.Json.Required.Default)]
        public string FontColor { get; set; }
    
        /// <summary>
        /// Gets or sets fontName.
        /// Name of the font to use for the watermark.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "fontName", Required = Newtonsoft.Json.Required.Default)]
        public string FontName { get; set; }
    
        /// <summary>
        /// Gets or sets fontSize.
        /// Font size to use for the watermark.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "fontSize", Required = Newtonsoft.Json.Required.Default)]
        public Int32? FontSize { get; set; }
    
        /// <summary>
        /// Gets or sets layout.
        /// Possible values are: horizontal, diagonal.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "layout", Required = Newtonsoft.Json.Required.Default)]
        public WatermarkLayout? Layout { get; set; }
    
        /// <summary>
        /// Gets or sets text.
        /// The contents of the watermark itself.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "text", Required = Newtonsoft.Json.Required.Default)]
        public string Text { get; set; }
    
        /// <summary>
        /// Gets or sets uiElementName.
        /// The name of the UI element where the watermark should be placed.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "uiElementName", Required = Newtonsoft.Json.Required.Default)]
        public string UiElementName { get; set; }
    
    }
}
