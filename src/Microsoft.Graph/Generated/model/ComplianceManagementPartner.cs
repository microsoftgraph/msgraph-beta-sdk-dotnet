// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Compliance Management Partner.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class ComplianceManagementPartner : Entity
    {
    
		///<summary>
		/// The ComplianceManagementPartner constructor
		///</summary>
        public ComplianceManagementPartner()
        {
            this.ODataType = "microsoft.graph.complianceManagementPartner";
        }
	
        /// <summary>
        /// Gets or sets android enrollment assignments.
        /// User groups which enroll Android devices through partner.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "androidEnrollmentAssignments", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<ComplianceManagementPartnerAssignment> AndroidEnrollmentAssignments { get; set; }
    
        /// <summary>
        /// Gets or sets android onboarded.
        /// Partner onboarded for Android devices.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "androidOnboarded", Required = Newtonsoft.Json.Required.Default)]
        public bool? AndroidOnboarded { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// Partner display name
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "displayName", Required = Newtonsoft.Json.Required.Default)]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets ios enrollment assignments.
        /// User groups which enroll ios devices through partner.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "iosEnrollmentAssignments", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<ComplianceManagementPartnerAssignment> IosEnrollmentAssignments { get; set; }
    
        /// <summary>
        /// Gets or sets ios onboarded.
        /// Partner onboarded for ios devices.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "iosOnboarded", Required = Newtonsoft.Json.Required.Default)]
        public bool? IosOnboarded { get; set; }
    
        /// <summary>
        /// Gets or sets last heartbeat date time.
        /// Timestamp of last heartbeat after admin onboarded to the compliance management partner
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastHeartbeatDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? LastHeartbeatDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets mac os enrollment assignments.
        /// User groups which enroll Mac devices through partner.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "macOsEnrollmentAssignments", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<ComplianceManagementPartnerAssignment> MacOsEnrollmentAssignments { get; set; }
    
        /// <summary>
        /// Gets or sets mac os onboarded.
        /// Partner onboarded for Mac devices.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "macOsOnboarded", Required = Newtonsoft.Json.Required.Default)]
        public bool? MacOsOnboarded { get; set; }
    
        /// <summary>
        /// Gets or sets partner state.
        /// Partner state of this tenant. Possible values are: unknown, unavailable, enabled, terminated, rejected, unresponsive.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "partnerState", Required = Newtonsoft.Json.Required.Default)]
        public DeviceManagementPartnerTenantState? PartnerState { get; set; }
    
        /// <summary>
        /// Gets or sets windows enrollment assignments.
        /// User groups which enroll Windows devices through partner.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "windowsEnrollmentAssignments", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<ComplianceManagementPartnerAssignment> WindowsEnrollmentAssignments { get; set; }
    
        /// <summary>
        /// Gets or sets windows onboarded.
        /// Partner onboarded for Windows devices.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "windowsOnboarded", Required = Newtonsoft.Json.Required.Default)]
        public bool? WindowsOnboarded { get; set; }
    
    }
}

