// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type PlannerTeamsPublicationInfo.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class PlannerTeamsPublicationInfo
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PlannerTeamsPublicationInfo"/> class.
        /// </summary>
        public PlannerTeamsPublicationInfo()
        {
            this.ODataType = "microsoft.graph.plannerTeamsPublicationInfo";
        }

        /// <summary>
        /// Gets or sets lastModifiedDateTime.
        /// The date and time when this task was last modified by the publication process. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastModifiedDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? LastModifiedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets publicationId.
        /// The identifier of the publication. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "publicationId", Required = Newtonsoft.Json.Required.Default)]
        public string PublicationId { get; set; }
    
        /// <summary>
        /// Gets or sets publishedToPlanId.
        /// The identifier of the plannerPlan this task was originally placed in. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "publishedToPlanId", Required = Newtonsoft.Json.Required.Default)]
        public string PublishedToPlanId { get; set; }
    
        /// <summary>
        /// Gets or sets publishingTeamId.
        /// The identifier of the team that initiated the publication process. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "publishingTeamId", Required = Newtonsoft.Json.Required.Default)]
        public string PublishingTeamId { get; set; }
    
        /// <summary>
        /// Gets or sets publishingTeamName.
        /// The display name of the team that initiated the publication process. This display name is for reference only, and might not represent the most up-to-date name of the team. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "publishingTeamName", Required = Newtonsoft.Json.Required.Default)]
        public string PublishingTeamName { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "@odata.type", Required = Newtonsoft.Json.Required.Default)]
        public string ODataType { get; set; }
    
    }
}
