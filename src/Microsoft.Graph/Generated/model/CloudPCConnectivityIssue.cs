// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Cloud PCConnectivity Issue.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class CloudPCConnectivityIssue : Entity
    {
    
		///<summary>
		/// The CloudPCConnectivityIssue constructor
		///</summary>
        public CloudPCConnectivityIssue()
        {
            this.ODataType = "microsoft.graph.cloudPCConnectivityIssue";
        }
	
        /// <summary>
        /// Gets or sets device id.
        /// The Intune DeviceId of the device the connection is associated with.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceId", Required = Newtonsoft.Json.Required.Default)]
        public string DeviceId { get; set; }
    
        /// <summary>
        /// Gets or sets error code.
        /// The error code of the connectivity issue.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "errorCode", Required = Newtonsoft.Json.Required.Default)]
        public string ErrorCode { get; set; }
    
        /// <summary>
        /// Gets or sets error date time.
        /// The time that the connection initiated. The time is shown in ISO 8601 format and Coordinated Universal Time (UTC) time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "errorDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? ErrorDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets error description.
        /// The detailed description of what went wrong.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "errorDescription", Required = Newtonsoft.Json.Required.Default)]
        public string ErrorDescription { get; set; }
    
        /// <summary>
        /// Gets or sets recommended action.
        /// The recommended action to fix the corresponding error.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "recommendedAction", Required = Newtonsoft.Json.Required.Default)]
        public string RecommendedAction { get; set; }
    
        /// <summary>
        /// Gets or sets user id.
        /// The unique id of user who initialize the connection.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "userId", Required = Newtonsoft.Json.Required.Default)]
        public string UserId { get; set; }
    
    }
}

