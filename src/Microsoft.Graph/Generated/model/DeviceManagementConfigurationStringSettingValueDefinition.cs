// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type DeviceManagementConfigurationStringSettingValueDefinition.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<DeviceManagementConfigurationStringSettingValueDefinition>))]
    public partial class DeviceManagementConfigurationStringSettingValueDefinition : DeviceManagementConfigurationSettingValueDefinition
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="DeviceManagementConfigurationStringSettingValueDefinition"/> class.
        /// </summary>
        public DeviceManagementConfigurationStringSettingValueDefinition()
        {
            this.ODataType = "microsoft.graph.deviceManagementConfigurationStringSettingValueDefinition";
        }

        /// <summary>
        /// Gets or sets fileTypes.
        /// Supported file types for this setting.
        /// </summary>
        [JsonPropertyName("fileTypes")]
        public IEnumerable<string> FileTypes { get; set; }
    
        /// <summary>
        /// Gets or sets format.
        /// Pre-defined format of the string. Possible values are: none, email, guid, ip, base64, url, version, xml, date, time, binary, regEx, json, dateTime, surfaceHub.
        /// </summary>
        [JsonPropertyName("format")]
        public DeviceManagementConfigurationStringFormat? Format { get; set; }
    
        /// <summary>
        /// Gets or sets inputValidationSchema.
        /// Regular expression or any xml or json schema that the input string should match
        /// </summary>
        [JsonPropertyName("inputValidationSchema")]
        public string InputValidationSchema { get; set; }
    
        /// <summary>
        /// Gets or sets isSecret.
        /// Specifies whether the setting needs to be treated as a secret. Settings marked as yes will be encrypted in transit and at rest and will be displayed as asterisks when represented in the UX.
        /// </summary>
        [JsonPropertyName("isSecret")]
        public bool? IsSecret { get; set; }
    
        /// <summary>
        /// Gets or sets maximumLength.
        /// Maximum length of string
        /// </summary>
        [JsonPropertyName("maximumLength")]
        public Int64? MaximumLength { get; set; }
    
        /// <summary>
        /// Gets or sets minimumLength.
        /// Minimum length of string
        /// </summary>
        [JsonPropertyName("minimumLength")]
        public Int64? MinimumLength { get; set; }
    
    }
}
