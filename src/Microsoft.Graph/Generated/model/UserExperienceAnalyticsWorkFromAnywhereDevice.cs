// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type User Experience Analytics Work From Anywhere Device.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class UserExperienceAnalyticsWorkFromAnywhereDevice : Entity
    {
    
		///<summary>
		/// The UserExperienceAnalyticsWorkFromAnywhereDevice constructor
		///</summary>
        public UserExperienceAnalyticsWorkFromAnywhereDevice()
        {
            this.ODataType = "microsoft.graph.userExperienceAnalyticsWorkFromAnywhereDevice";
        }
	
        /// <summary>
        /// Gets or sets auto pilot profile assigned.
        /// The user experience analytics work from anywhere intune device's autopilotProfileAssigned.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "autoPilotProfileAssigned", Required = Newtonsoft.Json.Required.Default)]
        public bool? AutoPilotProfileAssigned { get; set; }
    
        /// <summary>
        /// Gets or sets auto pilot registered.
        /// The user experience work from anywhere intune device's autopilotRegistered.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "autoPilotRegistered", Required = Newtonsoft.Json.Required.Default)]
        public bool? AutoPilotRegistered { get; set; }
    
        /// <summary>
        /// Gets or sets azure ad device id.
        /// The user experience work from anywhere azure Ad device Id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "azureAdDeviceId", Required = Newtonsoft.Json.Required.Default)]
        public string AzureAdDeviceId { get; set; }
    
        /// <summary>
        /// Gets or sets azure ad join type.
        /// The user experience work from anywhere device's azure Ad joinType.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "azureAdJoinType", Required = Newtonsoft.Json.Required.Default)]
        public string AzureAdJoinType { get; set; }
    
        /// <summary>
        /// Gets or sets azure ad registered.
        /// The user experience work from anywhere device's azureAdRegistered.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "azureAdRegistered", Required = Newtonsoft.Json.Required.Default)]
        public bool? AzureAdRegistered { get; set; }
    
        /// <summary>
        /// Gets or sets device name.
        /// The work from anywhere device's name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceName", Required = Newtonsoft.Json.Required.Default)]
        public string DeviceName { get; set; }
    
        /// <summary>
        /// Gets or sets managed by.
        /// The user experience work from anywhere management agent of the device.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "managedBy", Required = Newtonsoft.Json.Required.Default)]
        public string ManagedBy { get; set; }
    
        /// <summary>
        /// Gets or sets manufacturer.
        /// The user experience work from anywhere device's manufacturer.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "manufacturer", Required = Newtonsoft.Json.Required.Default)]
        public string Manufacturer { get; set; }
    
        /// <summary>
        /// Gets or sets model.
        /// The user experience work from anywhere device's model.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "model", Required = Newtonsoft.Json.Required.Default)]
        public string Model { get; set; }
    
        /// <summary>
        /// Gets or sets os description.
        /// The user experience work from anywhere device's OS Description.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "osDescription", Required = Newtonsoft.Json.Required.Default)]
        public string OsDescription { get; set; }
    
        /// <summary>
        /// Gets or sets os version.
        /// The user experience work from anywhere device's OS Version.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "osVersion", Required = Newtonsoft.Json.Required.Default)]
        public string OsVersion { get; set; }
    
        /// <summary>
        /// Gets or sets ownership.
        /// The user experience work from anywhere device's ownership.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "ownership", Required = Newtonsoft.Json.Required.Default)]
        public string Ownership { get; set; }
    
        /// <summary>
        /// Gets or sets serial number.
        /// The user experience work from anywhere device's serial number.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "serialNumber", Required = Newtonsoft.Json.Required.Default)]
        public string SerialNumber { get; set; }
    
    }
}

