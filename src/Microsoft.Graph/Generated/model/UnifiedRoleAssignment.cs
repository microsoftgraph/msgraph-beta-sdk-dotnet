// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Unified Role Assignment.
    /// </summary>
    public partial class UnifiedRoleAssignment : Entity
    {
    
        /// <summary>
        /// Gets or sets app scope id.
        /// Identifier of the app specific scope when the assignment scope is app specific. The scope of an assignment determines the set of resources for which the principal has been granted access. Directory scopes are shared scopes stored in the directory that are understood by multiple applications. Use / for tenant-wide scope. App scopes are scopes that are defined and understood by this application only.  For the entitlement management provider, use app scopes to specify a catalog, for example /AccessPackageCatalog/beedadfe-01d5-4025-910b-84abb9369997.
        /// </summary>
        [JsonPropertyName("appScopeId")]
        public string AppScopeId { get; set; }
    
        /// <summary>
        /// Gets or sets condition.
        /// </summary>
        [JsonPropertyName("condition")]
        public string Condition { get; set; }
    
        /// <summary>
        /// Gets or sets directory scope id.
        /// Identifier of the directory object representing the scope of the assignment. The scope of an assignment determines the set of resources for which the principal has been granted access. Directory scopes are shared scopes stored in the directory that are understood by multiple applications. App scopes are scopes that are defined and understood by this application only.
        /// </summary>
        [JsonPropertyName("directoryScopeId")]
        public string DirectoryScopeId { get; set; }
    
        /// <summary>
        /// Gets or sets principal id.
        /// Identifier of the principal to which the assignment is granted. Supports $filter (eq operator only).
        /// </summary>
        [JsonPropertyName("principalId")]
        public string PrincipalId { get; set; }
    
        /// <summary>
        /// Gets or sets resource scope.
        /// The scope at which the unifiedRoleAssignment applies. This is / for service-wide. DO NOT USE. This property will be deprecated soon.
        /// </summary>
        [JsonPropertyName("resourceScope")]
        public string ResourceScope { get; set; }
    
        /// <summary>
        /// Gets or sets role definition id.
        /// Identifier of the unifiedRoleDefinition the assignment is for. Read-only. Supports $filter (eq operator only).
        /// </summary>
        [JsonPropertyName("roleDefinitionId")]
        public string RoleDefinitionId { get; set; }
    
        /// <summary>
        /// Gets or sets app scope.
        /// Details of the app specific scope when the assignment scope is app specific. Containment entity.
        /// </summary>
        [JsonPropertyName("appScope")]
        public AppScope AppScope { get; set; }
    
        /// <summary>
        /// Gets or sets directory scope.
        /// The directory object that is the scope of the assignment. Provided so that callers can get the directory object using $expand at the same time as getting the role assignment. Read-only. Supports $expand.
        /// </summary>
        [JsonPropertyName("directoryScope")]
        public DirectoryObject DirectoryScope { get; set; }
    
        /// <summary>
        /// Gets or sets principal.
        /// The assigned principal. Provided so that callers can get the principal using $expand at the same time as getting the role assignment. Read-only. Supports $expand.
        /// </summary>
        [JsonPropertyName("principal")]
        public DirectoryObject Principal { get; set; }
    
        /// <summary>
        /// Gets or sets role definition.
        /// The roleDefinition the assignment is for. Provided so that callers can get the role definition using $expand at the same time as getting the role assignment. roleDefinition.id will be auto expanded. Supports $expand.
        /// </summary>
        [JsonPropertyName("roleDefinition")]
        public UnifiedRoleDefinition RoleDefinition { get; set; }
    
    }
}

