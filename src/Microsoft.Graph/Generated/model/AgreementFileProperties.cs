// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Agreement File Properties.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<AgreementFileProperties>))]
    public partial class AgreementFileProperties : Entity
    {
    
        /// <summary>
        /// Gets or sets created date time.
        /// The date time representing when the file was created.The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.
        /// </summary>
        [JsonPropertyName("createdDateTime")]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// Localized display name of the policy file of an agreement. The localized display name is shown to end users who view the agreement.
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets file data.
        /// Data that represents the terms of use PDF document. Read-only.
        /// </summary>
        [JsonPropertyName("fileData")]
        public AgreementFileData FileData { get; set; }
    
        /// <summary>
        /// Gets or sets file name.
        /// Name of the agreement file (for example, TOU.pdf). Read-only.
        /// </summary>
        [JsonPropertyName("fileName")]
        public string FileName { get; set; }
    
        /// <summary>
        /// Gets or sets is default.
        /// If none of the languages matches the client preference, indicates whether this is the default agreement file . If none of the files are marked as default, the first one is treated as the default. Read-only.
        /// </summary>
        [JsonPropertyName("isDefault")]
        public bool? IsDefault { get; set; }
    
        /// <summary>
        /// Gets or sets is major version.
        /// Indicates whether the agreement file is a major version update. Major version updates invalidate the agreement's acceptances on the corresponding language.
        /// </summary>
        [JsonPropertyName("isMajorVersion")]
        public bool? IsMajorVersion { get; set; }
    
        /// <summary>
        /// Gets or sets language.
        /// The language of the agreement file in the format 'languagecode2-country/regioncode2'. 'languagecode2' is a lowercase two-letter code derived from ISO 639-1, while 'country/regioncode2' is derived from ISO 3166 and usually consists of two uppercase letters, or a BCP-47 language tag. For example, U.S. English is en-US. Read-only.
        /// </summary>
        [JsonPropertyName("language")]
        public string Language { get; set; }
    
    }
}

