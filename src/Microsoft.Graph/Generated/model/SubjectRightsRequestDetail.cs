// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type SubjectRightsRequestDetail.
    /// </summary>
    [JsonConverter(typeof(DerivedTypeConverter<SubjectRightsRequestDetail>))]
    public partial class SubjectRightsRequestDetail
    {

        /// <summary>
        /// Gets or sets excludedItemCount.
        /// Count of items that are excluded from the request.
        /// </summary>
        [JsonPropertyName("excludedItemCount")]
        public Int64? ExcludedItemCount { get; set; }
    
        /// <summary>
        /// Gets or sets insightCounts.
        /// Count of items per insight.
        /// </summary>
        [JsonPropertyName("insightCounts")]
        public IEnumerable<KeyValuePair> InsightCounts { get; set; }
    
        /// <summary>
        /// Gets or sets itemCount.
        /// Count of items found.
        /// </summary>
        [JsonPropertyName("itemCount")]
        public Int64? ItemCount { get; set; }
    
        /// <summary>
        /// Gets or sets itemNeedReview.
        /// Count of item that need review.
        /// </summary>
        [JsonPropertyName("itemNeedReview")]
        public Int64? ItemNeedReview { get; set; }
    
        /// <summary>
        /// Gets or sets productItemCounts.
        /// Count of items per product, such as Exchange, SharePoint, OneDrive, and Teams.
        /// </summary>
        [JsonPropertyName("productItemCounts")]
        public IEnumerable<KeyValuePair> ProductItemCounts { get; set; }
    
        /// <summary>
        /// Gets or sets signedOffItemCount.
        /// Count of items signed off by the administrator.
        /// </summary>
        [JsonPropertyName("signedOffItemCount")]
        public Int64? SignedOffItemCount { get; set; }
    
        /// <summary>
        /// Gets or sets totalItemSize.
        /// Total item size in bytes.
        /// </summary>
        [JsonPropertyName("totalItemSize")]
        public Int64? TotalItemSize { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
