// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type User Experience Analytics App Health Device Performance.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class UserExperienceAnalyticsAppHealthDevicePerformance : Entity
    {
    
		///<summary>
		/// The UserExperienceAnalyticsAppHealthDevicePerformance constructor
		///</summary>
        public UserExperienceAnalyticsAppHealthDevicePerformance()
        {
            this.ODataType = "microsoft.graph.userExperienceAnalyticsAppHealthDevicePerformance";
        }
	
        /// <summary>
        /// Gets or sets app crash count.
        /// The number of app crashes for the device. Valid values -2147483648 to 2147483647
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "appCrashCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? AppCrashCount { get; set; }
    
        /// <summary>
        /// Gets or sets app hang count.
        /// The number of app hangs for the device. Valid values -2147483648 to 2147483647
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "appHangCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? AppHangCount { get; set; }
    
        /// <summary>
        /// Gets or sets crashed app count.
        /// The number of distinct app crashes for the device. Valid values -2147483648 to 2147483647
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "crashedAppCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? CrashedAppCount { get; set; }
    
        /// <summary>
        /// Gets or sets device app health score.
        /// The app health score of the device. Valid values -1.79769313486232E+308 to 1.79769313486232E+308
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceAppHealthScore", Required = Newtonsoft.Json.Required.Default)]
        public double? DeviceAppHealthScore { get; set; }
    
        /// <summary>
        /// Gets or sets device app health status.
        /// The overall app health status of the device.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceAppHealthStatus", Required = Newtonsoft.Json.Required.Default)]
        public string DeviceAppHealthStatus { get; set; }
    
        /// <summary>
        /// Gets or sets device display name.
        /// The name of the device.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceDisplayName", Required = Newtonsoft.Json.Required.Default)]
        public string DeviceDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets device id.
        /// The id of the device.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceId", Required = Newtonsoft.Json.Required.Default)]
        public string DeviceId { get; set; }
    
        /// <summary>
        /// Gets or sets device manufacturer.
        /// The manufacturer name of the device.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceManufacturer", Required = Newtonsoft.Json.Required.Default)]
        public string DeviceManufacturer { get; set; }
    
        /// <summary>
        /// Gets or sets device model.
        /// The model name of the device.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceModel", Required = Newtonsoft.Json.Required.Default)]
        public string DeviceModel { get; set; }
    
        /// <summary>
        /// Gets or sets mean time to failure in minutes.
        /// The mean time to failure for the device in minutes. Valid values -2147483648 to 2147483647
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "meanTimeToFailureInMinutes", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MeanTimeToFailureInMinutes { get; set; }
    
    }
}

