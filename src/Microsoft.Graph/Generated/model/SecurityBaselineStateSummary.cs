// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Security Baseline State Summary.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class SecurityBaselineStateSummary : Entity
    {
    
		///<summary>
		/// The SecurityBaselineStateSummary constructor
		///</summary>
        public SecurityBaselineStateSummary()
        {
            this.ODataType = "microsoft.graph.securityBaselineStateSummary";
        }
	
        /// <summary>
        /// Gets or sets conflict count.
        /// Number of conflict devices
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "conflictCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? ConflictCount { get; set; }
    
        /// <summary>
        /// Gets or sets error count.
        /// Number of error devices
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "errorCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? ErrorCount { get; set; }
    
        /// <summary>
        /// Gets or sets not applicable count.
        /// Number of not applicable devices
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "notApplicableCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NotApplicableCount { get; set; }
    
        /// <summary>
        /// Gets or sets not secure count.
        /// Number of not secure devices
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "notSecureCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NotSecureCount { get; set; }
    
        /// <summary>
        /// Gets or sets secure count.
        /// Number of secure devices
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "secureCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? SecureCount { get; set; }
    
        /// <summary>
        /// Gets or sets unknown count.
        /// Number of unknown devices
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "unknownCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? UnknownCount { get; set; }
    
    }
}

