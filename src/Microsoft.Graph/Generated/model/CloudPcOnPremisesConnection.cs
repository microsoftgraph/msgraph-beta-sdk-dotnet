// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Cloud Pc On Premises Connection.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class CloudPcOnPremisesConnection : Entity
    {
    
		///<summary>
		/// The CloudPcOnPremisesConnection constructor
		///</summary>
        public CloudPcOnPremisesConnection()
        {
            this.ODataType = "microsoft.graph.cloudPcOnPremisesConnection";
        }
	
        /// <summary>
        /// Gets or sets ad domain name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "adDomainName", Required = Newtonsoft.Json.Required.Default)]
        public string AdDomainName { get; set; }
    
        /// <summary>
        /// Gets or sets ad domain password.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "adDomainPassword", Required = Newtonsoft.Json.Required.Default)]
        public string AdDomainPassword { get; set; }
    
        /// <summary>
        /// Gets or sets ad domain username.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "adDomainUsername", Required = Newtonsoft.Json.Required.Default)]
        public string AdDomainUsername { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "displayName", Required = Newtonsoft.Json.Required.Default)]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets health check status.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "healthCheckStatus", Required = Newtonsoft.Json.Required.Default)]
        public CloudPcOnPremisesConnectionStatus? HealthCheckStatus { get; set; }
    
        /// <summary>
        /// Gets or sets health check status details.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "healthCheckStatusDetails", Required = Newtonsoft.Json.Required.Default)]
        public CloudPcOnPremisesConnectionStatusDetails HealthCheckStatusDetails { get; set; }
    
        /// <summary>
        /// Gets or sets in use.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "inUse", Required = Newtonsoft.Json.Required.Default)]
        public bool? InUse { get; set; }
    
        /// <summary>
        /// Gets or sets organizational unit.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "organizationalUnit", Required = Newtonsoft.Json.Required.Default)]
        public string OrganizationalUnit { get; set; }
    
        /// <summary>
        /// Gets or sets resource group id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "resourceGroupId", Required = Newtonsoft.Json.Required.Default)]
        public string ResourceGroupId { get; set; }
    
        /// <summary>
        /// Gets or sets subnet id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "subnetId", Required = Newtonsoft.Json.Required.Default)]
        public string SubnetId { get; set; }
    
        /// <summary>
        /// Gets or sets subscription id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "subscriptionId", Required = Newtonsoft.Json.Required.Default)]
        public string SubscriptionId { get; set; }
    
        /// <summary>
        /// Gets or sets subscription name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "subscriptionName", Required = Newtonsoft.Json.Required.Default)]
        public string SubscriptionName { get; set; }
    
        /// <summary>
        /// Gets or sets virtual network id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "virtualNetworkId", Required = Newtonsoft.Json.Required.Default)]
        public string VirtualNetworkId { get; set; }
    
    }
}

