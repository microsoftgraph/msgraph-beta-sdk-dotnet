// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Open Id Connect Provider.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class OpenIdConnectProvider : IdentityProvider
    {
    
		///<summary>
		/// The OpenIdConnectProvider constructor
		///</summary>
        public OpenIdConnectProvider()
        {
            this.ODataType = "microsoft.graph.openIdConnectProvider";
        }
	
        /// <summary>
        /// Gets or sets claims mapping.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "claimsMapping", Required = Newtonsoft.Json.Required.Default)]
        public ClaimsMapping ClaimsMapping { get; set; }
    
        /// <summary>
        /// Gets or sets domain hint.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "domainHint", Required = Newtonsoft.Json.Required.Default)]
        public string DomainHint { get; set; }
    
        /// <summary>
        /// Gets or sets metadata url.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "metadataUrl", Required = Newtonsoft.Json.Required.Default)]
        public string MetadataUrl { get; set; }
    
        /// <summary>
        /// Gets or sets response mode.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "responseMode", Required = Newtonsoft.Json.Required.Default)]
        public OpenIdConnectResponseMode? ResponseMode { get; set; }
    
        /// <summary>
        /// Gets or sets response type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "responseType", Required = Newtonsoft.Json.Required.Default)]
        public OpenIdConnectResponseTypes? ResponseType { get; set; }
    
        /// <summary>
        /// Gets or sets scope.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "scope", Required = Newtonsoft.Json.Required.Default)]
        public string Scope { get; set; }
    
    }
}

