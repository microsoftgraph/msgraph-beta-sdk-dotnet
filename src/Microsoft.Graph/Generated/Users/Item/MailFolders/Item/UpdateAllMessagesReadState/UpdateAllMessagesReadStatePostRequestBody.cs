// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions.Store;
using System.Collections.Generic;
using System.IO;
using System;
namespace Microsoft.Graph.Beta.Users.Item.MailFolders.Item.UpdateAllMessagesReadState
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class UpdateAllMessagesReadStatePostRequestBody : IAdditionalDataHolder, IBackedModel, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData
        {
            get { return BackingStore.Get<IDictionary<string, object>>("AdditionalData") ?? new Dictionary<string, object>(); }
            set { BackingStore.Set("AdditionalData", value); }
        }
        /// <summary>Stores model information.</summary>
        public IBackingStore BackingStore { get; private set; }
        /// <summary>The isRead property</summary>
        public bool? IsRead
        {
            get { return BackingStore?.Get<bool?>("isRead"); }
            set { BackingStore?.Set("isRead", value); }
        }
        /// <summary>The suppressReadReceipts property</summary>
        public bool? SuppressReadReceipts
        {
            get { return BackingStore?.Get<bool?>("suppressReadReceipts"); }
            set { BackingStore?.Set("suppressReadReceipts", value); }
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Users.Item.MailFolders.Item.UpdateAllMessagesReadState.UpdateAllMessagesReadStatePostRequestBody"/> and sets the default values.
        /// </summary>
        public UpdateAllMessagesReadStatePostRequestBody()
        {
            BackingStore = BackingStoreFactorySingleton.Instance.CreateBackingStore();
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Users.Item.MailFolders.Item.UpdateAllMessagesReadState.UpdateAllMessagesReadStatePostRequestBody"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Microsoft.Graph.Beta.Users.Item.MailFolders.Item.UpdateAllMessagesReadState.UpdateAllMessagesReadStatePostRequestBody CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            if(ReferenceEquals(parseNode, null)) throw new ArgumentNullException(nameof(parseNode));
            return new global::Microsoft.Graph.Beta.Users.Item.MailFolders.Item.UpdateAllMessagesReadState.UpdateAllMessagesReadStatePostRequestBody();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "isRead", n => { IsRead = n.GetBoolValue(); } },
                { "suppressReadReceipts", n => { SuppressReadReceipts = n.GetBoolValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            if(ReferenceEquals(writer, null)) throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("isRead", IsRead);
            writer.WriteBoolValue("suppressReadReceipts", SuppressReadReceipts);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
