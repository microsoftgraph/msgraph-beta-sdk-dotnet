// <auto-generated/>
using Microsoft.Graph.Beta.Models.ODataErrors;
using Microsoft.Graph.Beta.Models;
using Microsoft.Graph.Beta.Users.Item.Activities;
using Microsoft.Graph.Beta.Users.Item.AgreementAcceptances;
using Microsoft.Graph.Beta.Users.Item.Analytics;
using Microsoft.Graph.Beta.Users.Item.AppConsentRequestsForApproval;
using Microsoft.Graph.Beta.Users.Item.AppRoleAssignedResources;
using Microsoft.Graph.Beta.Users.Item.AppRoleAssignedResourcesWithAppId;
using Microsoft.Graph.Beta.Users.Item.AppRoleAssignments;
using Microsoft.Graph.Beta.Users.Item.Approvals;
using Microsoft.Graph.Beta.Users.Item.AssignLicense;
using Microsoft.Graph.Beta.Users.Item.Authentication;
using Microsoft.Graph.Beta.Users.Item.Calendar;
using Microsoft.Graph.Beta.Users.Item.CalendarGroups;
using Microsoft.Graph.Beta.Users.Item.CalendarView;
using Microsoft.Graph.Beta.Users.Item.Calendars;
using Microsoft.Graph.Beta.Users.Item.ChangePassword;
using Microsoft.Graph.Beta.Users.Item.Chats;
using Microsoft.Graph.Beta.Users.Item.CheckMemberGroups;
using Microsoft.Graph.Beta.Users.Item.CheckMemberObjects;
using Microsoft.Graph.Beta.Users.Item.CloudClipboard;
using Microsoft.Graph.Beta.Users.Item.CloudPCs;
using Microsoft.Graph.Beta.Users.Item.ContactFolders;
using Microsoft.Graph.Beta.Users.Item.Contacts;
using Microsoft.Graph.Beta.Users.Item.ConvertExternalToInternalMemberUser;
using Microsoft.Graph.Beta.Users.Item.CreatedObjects;
using Microsoft.Graph.Beta.Users.Item.DeletePasswordSingleSignOnCredentials;
using Microsoft.Graph.Beta.Users.Item.DeviceEnrollmentConfigurations;
using Microsoft.Graph.Beta.Users.Item.DeviceManagementTroubleshootingEvents;
using Microsoft.Graph.Beta.Users.Item.Devices;
using Microsoft.Graph.Beta.Users.Item.DevicesWithDeviceId;
using Microsoft.Graph.Beta.Users.Item.DirectReports;
using Microsoft.Graph.Beta.Users.Item.Drive;
using Microsoft.Graph.Beta.Users.Item.Drives;
using Microsoft.Graph.Beta.Users.Item.EmployeeExperience;
using Microsoft.Graph.Beta.Users.Item.Events;
using Microsoft.Graph.Beta.Users.Item.ExportDeviceAndAppManagementData;
using Microsoft.Graph.Beta.Users.Item.ExportDeviceAndAppManagementDataWithSkipWithTop;
using Microsoft.Graph.Beta.Users.Item.ExportPersonalData;
using Microsoft.Graph.Beta.Users.Item.Extensions;
using Microsoft.Graph.Beta.Users.Item.FindMeetingTimes;
using Microsoft.Graph.Beta.Users.Item.FindRoomLists;
using Microsoft.Graph.Beta.Users.Item.FindRooms;
using Microsoft.Graph.Beta.Users.Item.FindRoomsWithRoomList;
using Microsoft.Graph.Beta.Users.Item.FollowedSites;
using Microsoft.Graph.Beta.Users.Item.GetEffectiveDeviceEnrollmentConfigurations;
using Microsoft.Graph.Beta.Users.Item.GetLoggedOnManagedDevices;
using Microsoft.Graph.Beta.Users.Item.GetMailTips;
using Microsoft.Graph.Beta.Users.Item.GetManagedAppDiagnosticStatuses;
using Microsoft.Graph.Beta.Users.Item.GetManagedAppPolicies;
using Microsoft.Graph.Beta.Users.Item.GetManagedDevicesWithAppFailures;
using Microsoft.Graph.Beta.Users.Item.GetManagedDevicesWithFailedOrPendingApps;
using Microsoft.Graph.Beta.Users.Item.GetMemberGroups;
using Microsoft.Graph.Beta.Users.Item.GetMemberObjects;
using Microsoft.Graph.Beta.Users.Item.GetPasswordSingleSignOnCredentials;
using Microsoft.Graph.Beta.Users.Item.InferenceClassification;
using Microsoft.Graph.Beta.Users.Item.InformationProtection;
using Microsoft.Graph.Beta.Users.Item.Insights;
using Microsoft.Graph.Beta.Users.Item.InvalidateAllRefreshTokens;
using Microsoft.Graph.Beta.Users.Item.InvitedBy;
using Microsoft.Graph.Beta.Users.Item.IsManagedAppUserBlocked;
using Microsoft.Graph.Beta.Users.Item.JoinedGroups;
using Microsoft.Graph.Beta.Users.Item.JoinedTeams;
using Microsoft.Graph.Beta.Users.Item.LicenseDetails;
using Microsoft.Graph.Beta.Users.Item.MailFolders;
using Microsoft.Graph.Beta.Users.Item.MailboxSettings;
using Microsoft.Graph.Beta.Users.Item.ManagedAppLogCollectionRequests;
using Microsoft.Graph.Beta.Users.Item.ManagedAppRegistrations;
using Microsoft.Graph.Beta.Users.Item.ManagedDevices;
using Microsoft.Graph.Beta.Users.Item.Manager;
using Microsoft.Graph.Beta.Users.Item.MemberOf;
using Microsoft.Graph.Beta.Users.Item.Messages;
using Microsoft.Graph.Beta.Users.Item.MobileAppIntentAndStates;
using Microsoft.Graph.Beta.Users.Item.MobileAppTroubleshootingEvents;
using Microsoft.Graph.Beta.Users.Item.Notifications;
using Microsoft.Graph.Beta.Users.Item.Oauth2PermissionGrants;
using Microsoft.Graph.Beta.Users.Item.Onenote;
using Microsoft.Graph.Beta.Users.Item.OnlineMeetings;
using Microsoft.Graph.Beta.Users.Item.OnlineMeetingsWithJoinWebUrl;
using Microsoft.Graph.Beta.Users.Item.Outlook;
using Microsoft.Graph.Beta.Users.Item.OwnedDevices;
using Microsoft.Graph.Beta.Users.Item.OwnedObjects;
using Microsoft.Graph.Beta.Users.Item.PendingAccessReviewInstances;
using Microsoft.Graph.Beta.Users.Item.People;
using Microsoft.Graph.Beta.Users.Item.PermissionGrants;
using Microsoft.Graph.Beta.Users.Item.Photo;
using Microsoft.Graph.Beta.Users.Item.Photos;
using Microsoft.Graph.Beta.Users.Item.Planner;
using Microsoft.Graph.Beta.Users.Item.Presence;
using Microsoft.Graph.Beta.Users.Item.Profile;
using Microsoft.Graph.Beta.Users.Item.RegisteredDevices;
using Microsoft.Graph.Beta.Users.Item.ReminderViewWithStartDateTimeWithEndDateTime;
using Microsoft.Graph.Beta.Users.Item.RemoveAllDevicesFromManagement;
using Microsoft.Graph.Beta.Users.Item.ReprocessLicenseAssignment;
using Microsoft.Graph.Beta.Users.Item.Restore;
using Microsoft.Graph.Beta.Users.Item.RetryServiceProvisioning;
using Microsoft.Graph.Beta.Users.Item.RevokeSignInSessions;
using Microsoft.Graph.Beta.Users.Item.ScopedRoleMemberOf;
using Microsoft.Graph.Beta.Users.Item.Security;
using Microsoft.Graph.Beta.Users.Item.SendMail;
using Microsoft.Graph.Beta.Users.Item.ServiceProvisioningErrors;
using Microsoft.Graph.Beta.Users.Item.Settings;
using Microsoft.Graph.Beta.Users.Item.Sponsors;
using Microsoft.Graph.Beta.Users.Item.Teamwork;
using Microsoft.Graph.Beta.Users.Item.Todo;
using Microsoft.Graph.Beta.Users.Item.TransitiveMemberOf;
using Microsoft.Graph.Beta.Users.Item.TransitiveReports;
using Microsoft.Graph.Beta.Users.Item.TranslateExchangeIds;
using Microsoft.Graph.Beta.Users.Item.UnblockManagedApps;
using Microsoft.Graph.Beta.Users.Item.UsageRights;
using Microsoft.Graph.Beta.Users.Item.VirtualEvents;
using Microsoft.Graph.Beta.Users.Item.WindowsInformationProtectionDeviceRegistrations;
using Microsoft.Graph.Beta.Users.Item.WipeAndBlockManagedApps;
using Microsoft.Graph.Beta.Users.Item.WipeManagedAppRegistrationByDeviceTag;
using Microsoft.Graph.Beta.Users.Item.WipeManagedAppRegistrationsByAzureAdDeviceId;
using Microsoft.Graph.Beta.Users.Item.WipeManagedAppRegistrationsByDeviceTag;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Microsoft.Graph.Beta.Users.Item
{
    /// <summary>
    /// Provides operations to manage the collection of user entities.
    /// </summary>
    public class UserItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Provides operations to manage the activities property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Activities.ActivitiesRequestBuilder Activities
        {
            get => new Microsoft.Graph.Beta.Users.Item.Activities.ActivitiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the agreementAcceptances property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.AgreementAcceptances.AgreementAcceptancesRequestBuilder AgreementAcceptances
        {
            get => new Microsoft.Graph.Beta.Users.Item.AgreementAcceptances.AgreementAcceptancesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the analytics property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Analytics.AnalyticsRequestBuilder Analytics
        {
            get => new Microsoft.Graph.Beta.Users.Item.Analytics.AnalyticsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the appConsentRequestsForApproval property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.AppConsentRequestsForApproval.AppConsentRequestsForApprovalRequestBuilder AppConsentRequestsForApproval
        {
            get => new Microsoft.Graph.Beta.Users.Item.AppConsentRequestsForApproval.AppConsentRequestsForApprovalRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the appRoleAssignedResources property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.AppRoleAssignedResources.AppRoleAssignedResourcesRequestBuilder AppRoleAssignedResources
        {
            get => new Microsoft.Graph.Beta.Users.Item.AppRoleAssignedResources.AppRoleAssignedResourcesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the appRoleAssignments property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.AppRoleAssignments.AppRoleAssignmentsRequestBuilder AppRoleAssignments
        {
            get => new Microsoft.Graph.Beta.Users.Item.AppRoleAssignments.AppRoleAssignmentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the approvals property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Approvals.ApprovalsRequestBuilder Approvals
        {
            get => new Microsoft.Graph.Beta.Users.Item.Approvals.ApprovalsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the assignLicense method.</summary>
        public Microsoft.Graph.Beta.Users.Item.AssignLicense.AssignLicenseRequestBuilder AssignLicense
        {
            get => new Microsoft.Graph.Beta.Users.Item.AssignLicense.AssignLicenseRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the authentication property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Authentication.AuthenticationRequestBuilder Authentication
        {
            get => new Microsoft.Graph.Beta.Users.Item.Authentication.AuthenticationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the calendar property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Calendar.CalendarRequestBuilder Calendar
        {
            get => new Microsoft.Graph.Beta.Users.Item.Calendar.CalendarRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the calendarGroups property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.CalendarGroups.CalendarGroupsRequestBuilder CalendarGroups
        {
            get => new Microsoft.Graph.Beta.Users.Item.CalendarGroups.CalendarGroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the calendars property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Calendars.CalendarsRequestBuilder Calendars
        {
            get => new Microsoft.Graph.Beta.Users.Item.Calendars.CalendarsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the calendarView property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.CalendarView.CalendarViewRequestBuilder CalendarView
        {
            get => new Microsoft.Graph.Beta.Users.Item.CalendarView.CalendarViewRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the changePassword method.</summary>
        public Microsoft.Graph.Beta.Users.Item.ChangePassword.ChangePasswordRequestBuilder ChangePassword
        {
            get => new Microsoft.Graph.Beta.Users.Item.ChangePassword.ChangePasswordRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the chats property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Chats.ChatsRequestBuilder Chats
        {
            get => new Microsoft.Graph.Beta.Users.Item.Chats.ChatsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the checkMemberGroups method.</summary>
        public Microsoft.Graph.Beta.Users.Item.CheckMemberGroups.CheckMemberGroupsRequestBuilder CheckMemberGroups
        {
            get => new Microsoft.Graph.Beta.Users.Item.CheckMemberGroups.CheckMemberGroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the checkMemberObjects method.</summary>
        public Microsoft.Graph.Beta.Users.Item.CheckMemberObjects.CheckMemberObjectsRequestBuilder CheckMemberObjects
        {
            get => new Microsoft.Graph.Beta.Users.Item.CheckMemberObjects.CheckMemberObjectsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the cloudClipboard property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.CloudClipboard.CloudClipboardRequestBuilder CloudClipboard
        {
            get => new Microsoft.Graph.Beta.Users.Item.CloudClipboard.CloudClipboardRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the cloudPCs property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.CloudPCs.CloudPCsRequestBuilder CloudPCs
        {
            get => new Microsoft.Graph.Beta.Users.Item.CloudPCs.CloudPCsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the contactFolders property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.ContactFolders.ContactFoldersRequestBuilder ContactFolders
        {
            get => new Microsoft.Graph.Beta.Users.Item.ContactFolders.ContactFoldersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the contacts property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Contacts.ContactsRequestBuilder Contacts
        {
            get => new Microsoft.Graph.Beta.Users.Item.Contacts.ContactsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the convertExternalToInternalMemberUser method.</summary>
        public Microsoft.Graph.Beta.Users.Item.ConvertExternalToInternalMemberUser.ConvertExternalToInternalMemberUserRequestBuilder ConvertExternalToInternalMemberUser
        {
            get => new Microsoft.Graph.Beta.Users.Item.ConvertExternalToInternalMemberUser.ConvertExternalToInternalMemberUserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the createdObjects property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.CreatedObjects.CreatedObjectsRequestBuilder CreatedObjects
        {
            get => new Microsoft.Graph.Beta.Users.Item.CreatedObjects.CreatedObjectsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the deletePasswordSingleSignOnCredentials method.</summary>
        public Microsoft.Graph.Beta.Users.Item.DeletePasswordSingleSignOnCredentials.DeletePasswordSingleSignOnCredentialsRequestBuilder DeletePasswordSingleSignOnCredentials
        {
            get => new Microsoft.Graph.Beta.Users.Item.DeletePasswordSingleSignOnCredentials.DeletePasswordSingleSignOnCredentialsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the deviceEnrollmentConfigurations property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.DeviceEnrollmentConfigurations.DeviceEnrollmentConfigurationsRequestBuilder DeviceEnrollmentConfigurations
        {
            get => new Microsoft.Graph.Beta.Users.Item.DeviceEnrollmentConfigurations.DeviceEnrollmentConfigurationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the deviceManagementTroubleshootingEvents property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.DeviceManagementTroubleshootingEvents.DeviceManagementTroubleshootingEventsRequestBuilder DeviceManagementTroubleshootingEvents
        {
            get => new Microsoft.Graph.Beta.Users.Item.DeviceManagementTroubleshootingEvents.DeviceManagementTroubleshootingEventsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the devices property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Devices.DevicesRequestBuilder Devices
        {
            get => new Microsoft.Graph.Beta.Users.Item.Devices.DevicesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the directReports property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.DirectReports.DirectReportsRequestBuilder DirectReports
        {
            get => new Microsoft.Graph.Beta.Users.Item.DirectReports.DirectReportsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the drive property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Drive.DriveRequestBuilder Drive
        {
            get => new Microsoft.Graph.Beta.Users.Item.Drive.DriveRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the drives property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Drives.DrivesRequestBuilder Drives
        {
            get => new Microsoft.Graph.Beta.Users.Item.Drives.DrivesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the employeeExperience property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.EmployeeExperience.EmployeeExperienceRequestBuilder EmployeeExperience
        {
            get => new Microsoft.Graph.Beta.Users.Item.EmployeeExperience.EmployeeExperienceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the events property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Events.EventsRequestBuilder Events
        {
            get => new Microsoft.Graph.Beta.Users.Item.Events.EventsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the exportDeviceAndAppManagementData method.</summary>
        public Microsoft.Graph.Beta.Users.Item.ExportDeviceAndAppManagementData.ExportDeviceAndAppManagementDataRequestBuilder ExportDeviceAndAppManagementData
        {
            get => new Microsoft.Graph.Beta.Users.Item.ExportDeviceAndAppManagementData.ExportDeviceAndAppManagementDataRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the exportPersonalData method.</summary>
        public Microsoft.Graph.Beta.Users.Item.ExportPersonalData.ExportPersonalDataRequestBuilder ExportPersonalData
        {
            get => new Microsoft.Graph.Beta.Users.Item.ExportPersonalData.ExportPersonalDataRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the extensions property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Extensions.ExtensionsRequestBuilder Extensions
        {
            get => new Microsoft.Graph.Beta.Users.Item.Extensions.ExtensionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the findMeetingTimes method.</summary>
        public Microsoft.Graph.Beta.Users.Item.FindMeetingTimes.FindMeetingTimesRequestBuilder FindMeetingTimes
        {
            get => new Microsoft.Graph.Beta.Users.Item.FindMeetingTimes.FindMeetingTimesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the findRoomLists method.</summary>
        public Microsoft.Graph.Beta.Users.Item.FindRoomLists.FindRoomListsRequestBuilder FindRoomLists
        {
            get => new Microsoft.Graph.Beta.Users.Item.FindRoomLists.FindRoomListsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the findRooms method.</summary>
        public Microsoft.Graph.Beta.Users.Item.FindRooms.FindRoomsRequestBuilder FindRooms
        {
            get => new Microsoft.Graph.Beta.Users.Item.FindRooms.FindRoomsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the followedSites property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.FollowedSites.FollowedSitesRequestBuilder FollowedSites
        {
            get => new Microsoft.Graph.Beta.Users.Item.FollowedSites.FollowedSitesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getEffectiveDeviceEnrollmentConfigurations method.</summary>
        public Microsoft.Graph.Beta.Users.Item.GetEffectiveDeviceEnrollmentConfigurations.GetEffectiveDeviceEnrollmentConfigurationsRequestBuilder GetEffectiveDeviceEnrollmentConfigurations
        {
            get => new Microsoft.Graph.Beta.Users.Item.GetEffectiveDeviceEnrollmentConfigurations.GetEffectiveDeviceEnrollmentConfigurationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getLoggedOnManagedDevices method.</summary>
        public Microsoft.Graph.Beta.Users.Item.GetLoggedOnManagedDevices.GetLoggedOnManagedDevicesRequestBuilder GetLoggedOnManagedDevices
        {
            get => new Microsoft.Graph.Beta.Users.Item.GetLoggedOnManagedDevices.GetLoggedOnManagedDevicesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getMailTips method.</summary>
        public Microsoft.Graph.Beta.Users.Item.GetMailTips.GetMailTipsRequestBuilder GetMailTips
        {
            get => new Microsoft.Graph.Beta.Users.Item.GetMailTips.GetMailTipsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getManagedAppDiagnosticStatuses method.</summary>
        public Microsoft.Graph.Beta.Users.Item.GetManagedAppDiagnosticStatuses.GetManagedAppDiagnosticStatusesRequestBuilder GetManagedAppDiagnosticStatuses
        {
            get => new Microsoft.Graph.Beta.Users.Item.GetManagedAppDiagnosticStatuses.GetManagedAppDiagnosticStatusesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getManagedAppPolicies method.</summary>
        public Microsoft.Graph.Beta.Users.Item.GetManagedAppPolicies.GetManagedAppPoliciesRequestBuilder GetManagedAppPolicies
        {
            get => new Microsoft.Graph.Beta.Users.Item.GetManagedAppPolicies.GetManagedAppPoliciesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getManagedDevicesWithAppFailures method.</summary>
        public Microsoft.Graph.Beta.Users.Item.GetManagedDevicesWithAppFailures.GetManagedDevicesWithAppFailuresRequestBuilder GetManagedDevicesWithAppFailures
        {
            get => new Microsoft.Graph.Beta.Users.Item.GetManagedDevicesWithAppFailures.GetManagedDevicesWithAppFailuresRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getManagedDevicesWithFailedOrPendingApps method.</summary>
        public Microsoft.Graph.Beta.Users.Item.GetManagedDevicesWithFailedOrPendingApps.GetManagedDevicesWithFailedOrPendingAppsRequestBuilder GetManagedDevicesWithFailedOrPendingApps
        {
            get => new Microsoft.Graph.Beta.Users.Item.GetManagedDevicesWithFailedOrPendingApps.GetManagedDevicesWithFailedOrPendingAppsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getMemberGroups method.</summary>
        public Microsoft.Graph.Beta.Users.Item.GetMemberGroups.GetMemberGroupsRequestBuilder GetMemberGroups
        {
            get => new Microsoft.Graph.Beta.Users.Item.GetMemberGroups.GetMemberGroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getMemberObjects method.</summary>
        public Microsoft.Graph.Beta.Users.Item.GetMemberObjects.GetMemberObjectsRequestBuilder GetMemberObjects
        {
            get => new Microsoft.Graph.Beta.Users.Item.GetMemberObjects.GetMemberObjectsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getPasswordSingleSignOnCredentials method.</summary>
        public Microsoft.Graph.Beta.Users.Item.GetPasswordSingleSignOnCredentials.GetPasswordSingleSignOnCredentialsRequestBuilder GetPasswordSingleSignOnCredentials
        {
            get => new Microsoft.Graph.Beta.Users.Item.GetPasswordSingleSignOnCredentials.GetPasswordSingleSignOnCredentialsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the inferenceClassification property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.InferenceClassification.InferenceClassificationRequestBuilder InferenceClassification
        {
            get => new Microsoft.Graph.Beta.Users.Item.InferenceClassification.InferenceClassificationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the informationProtection property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.InformationProtection.InformationProtectionRequestBuilder InformationProtection
        {
            get => new Microsoft.Graph.Beta.Users.Item.InformationProtection.InformationProtectionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the insights property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Insights.InsightsRequestBuilder Insights
        {
            get => new Microsoft.Graph.Beta.Users.Item.Insights.InsightsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the invalidateAllRefreshTokens method.</summary>
        public Microsoft.Graph.Beta.Users.Item.InvalidateAllRefreshTokens.InvalidateAllRefreshTokensRequestBuilder InvalidateAllRefreshTokens
        {
            get => new Microsoft.Graph.Beta.Users.Item.InvalidateAllRefreshTokens.InvalidateAllRefreshTokensRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the invitedBy property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.InvitedBy.InvitedByRequestBuilder InvitedBy
        {
            get => new Microsoft.Graph.Beta.Users.Item.InvitedBy.InvitedByRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the isManagedAppUserBlocked method.</summary>
        public Microsoft.Graph.Beta.Users.Item.IsManagedAppUserBlocked.IsManagedAppUserBlockedRequestBuilder IsManagedAppUserBlocked
        {
            get => new Microsoft.Graph.Beta.Users.Item.IsManagedAppUserBlocked.IsManagedAppUserBlockedRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the joinedGroups property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.JoinedGroups.JoinedGroupsRequestBuilder JoinedGroups
        {
            get => new Microsoft.Graph.Beta.Users.Item.JoinedGroups.JoinedGroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the joinedTeams property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.JoinedTeams.JoinedTeamsRequestBuilder JoinedTeams
        {
            get => new Microsoft.Graph.Beta.Users.Item.JoinedTeams.JoinedTeamsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the licenseDetails property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.LicenseDetails.LicenseDetailsRequestBuilder LicenseDetails
        {
            get => new Microsoft.Graph.Beta.Users.Item.LicenseDetails.LicenseDetailsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The mailboxSettings property</summary>
        public Microsoft.Graph.Beta.Users.Item.MailboxSettings.MailboxSettingsRequestBuilder MailboxSettings
        {
            get => new Microsoft.Graph.Beta.Users.Item.MailboxSettings.MailboxSettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the mailFolders property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.MailFolders.MailFoldersRequestBuilder MailFolders
        {
            get => new Microsoft.Graph.Beta.Users.Item.MailFolders.MailFoldersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedAppLogCollectionRequests property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.ManagedAppLogCollectionRequests.ManagedAppLogCollectionRequestsRequestBuilder ManagedAppLogCollectionRequests
        {
            get => new Microsoft.Graph.Beta.Users.Item.ManagedAppLogCollectionRequests.ManagedAppLogCollectionRequestsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedAppRegistrations property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.ManagedAppRegistrations.ManagedAppRegistrationsRequestBuilder ManagedAppRegistrations
        {
            get => new Microsoft.Graph.Beta.Users.Item.ManagedAppRegistrations.ManagedAppRegistrationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedDevices property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.ManagedDevices.ManagedDevicesRequestBuilder ManagedDevices
        {
            get => new Microsoft.Graph.Beta.Users.Item.ManagedDevices.ManagedDevicesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the manager property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Manager.ManagerRequestBuilder Manager
        {
            get => new Microsoft.Graph.Beta.Users.Item.Manager.ManagerRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the memberOf property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.MemberOf.MemberOfRequestBuilder MemberOf
        {
            get => new Microsoft.Graph.Beta.Users.Item.MemberOf.MemberOfRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the messages property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Messages.MessagesRequestBuilder Messages
        {
            get => new Microsoft.Graph.Beta.Users.Item.Messages.MessagesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the mobileAppIntentAndStates property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.MobileAppIntentAndStates.MobileAppIntentAndStatesRequestBuilder MobileAppIntentAndStates
        {
            get => new Microsoft.Graph.Beta.Users.Item.MobileAppIntentAndStates.MobileAppIntentAndStatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the mobileAppTroubleshootingEvents property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.MobileAppTroubleshootingEvents.MobileAppTroubleshootingEventsRequestBuilder MobileAppTroubleshootingEvents
        {
            get => new Microsoft.Graph.Beta.Users.Item.MobileAppTroubleshootingEvents.MobileAppTroubleshootingEventsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the notifications property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Notifications.NotificationsRequestBuilder Notifications
        {
            get => new Microsoft.Graph.Beta.Users.Item.Notifications.NotificationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the oauth2PermissionGrants property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Oauth2PermissionGrants.Oauth2PermissionGrantsRequestBuilder Oauth2PermissionGrants
        {
            get => new Microsoft.Graph.Beta.Users.Item.Oauth2PermissionGrants.Oauth2PermissionGrantsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the onenote property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Onenote.OnenoteRequestBuilder Onenote
        {
            get => new Microsoft.Graph.Beta.Users.Item.Onenote.OnenoteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the onlineMeetings property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.OnlineMeetings.OnlineMeetingsRequestBuilder OnlineMeetings
        {
            get => new Microsoft.Graph.Beta.Users.Item.OnlineMeetings.OnlineMeetingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the outlook property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Outlook.OutlookRequestBuilder Outlook
        {
            get => new Microsoft.Graph.Beta.Users.Item.Outlook.OutlookRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the ownedDevices property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.OwnedDevices.OwnedDevicesRequestBuilder OwnedDevices
        {
            get => new Microsoft.Graph.Beta.Users.Item.OwnedDevices.OwnedDevicesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the ownedObjects property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.OwnedObjects.OwnedObjectsRequestBuilder OwnedObjects
        {
            get => new Microsoft.Graph.Beta.Users.Item.OwnedObjects.OwnedObjectsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the pendingAccessReviewInstances property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.PendingAccessReviewInstances.PendingAccessReviewInstancesRequestBuilder PendingAccessReviewInstances
        {
            get => new Microsoft.Graph.Beta.Users.Item.PendingAccessReviewInstances.PendingAccessReviewInstancesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the people property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.People.PeopleRequestBuilder People
        {
            get => new Microsoft.Graph.Beta.Users.Item.People.PeopleRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the permissionGrants property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.PermissionGrants.PermissionGrantsRequestBuilder PermissionGrants
        {
            get => new Microsoft.Graph.Beta.Users.Item.PermissionGrants.PermissionGrantsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the photo property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Photo.PhotoRequestBuilder Photo
        {
            get => new Microsoft.Graph.Beta.Users.Item.Photo.PhotoRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the photos property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Photos.PhotosRequestBuilder Photos
        {
            get => new Microsoft.Graph.Beta.Users.Item.Photos.PhotosRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the planner property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Planner.PlannerRequestBuilder Planner
        {
            get => new Microsoft.Graph.Beta.Users.Item.Planner.PlannerRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the presence property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Presence.PresenceRequestBuilder Presence
        {
            get => new Microsoft.Graph.Beta.Users.Item.Presence.PresenceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the profile property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Profile.ProfileRequestBuilder Profile
        {
            get => new Microsoft.Graph.Beta.Users.Item.Profile.ProfileRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the registeredDevices property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.RegisteredDevices.RegisteredDevicesRequestBuilder RegisteredDevices
        {
            get => new Microsoft.Graph.Beta.Users.Item.RegisteredDevices.RegisteredDevicesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the removeAllDevicesFromManagement method.</summary>
        public Microsoft.Graph.Beta.Users.Item.RemoveAllDevicesFromManagement.RemoveAllDevicesFromManagementRequestBuilder RemoveAllDevicesFromManagement
        {
            get => new Microsoft.Graph.Beta.Users.Item.RemoveAllDevicesFromManagement.RemoveAllDevicesFromManagementRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the reprocessLicenseAssignment method.</summary>
        public Microsoft.Graph.Beta.Users.Item.ReprocessLicenseAssignment.ReprocessLicenseAssignmentRequestBuilder ReprocessLicenseAssignment
        {
            get => new Microsoft.Graph.Beta.Users.Item.ReprocessLicenseAssignment.ReprocessLicenseAssignmentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the restore method.</summary>
        public Microsoft.Graph.Beta.Users.Item.Restore.RestoreRequestBuilder Restore
        {
            get => new Microsoft.Graph.Beta.Users.Item.Restore.RestoreRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the retryServiceProvisioning method.</summary>
        public Microsoft.Graph.Beta.Users.Item.RetryServiceProvisioning.RetryServiceProvisioningRequestBuilder RetryServiceProvisioning
        {
            get => new Microsoft.Graph.Beta.Users.Item.RetryServiceProvisioning.RetryServiceProvisioningRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the revokeSignInSessions method.</summary>
        public Microsoft.Graph.Beta.Users.Item.RevokeSignInSessions.RevokeSignInSessionsRequestBuilder RevokeSignInSessions
        {
            get => new Microsoft.Graph.Beta.Users.Item.RevokeSignInSessions.RevokeSignInSessionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the scopedRoleMemberOf property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.ScopedRoleMemberOf.ScopedRoleMemberOfRequestBuilder ScopedRoleMemberOf
        {
            get => new Microsoft.Graph.Beta.Users.Item.ScopedRoleMemberOf.ScopedRoleMemberOfRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the security property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Security.SecurityRequestBuilder Security
        {
            get => new Microsoft.Graph.Beta.Users.Item.Security.SecurityRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the sendMail method.</summary>
        public Microsoft.Graph.Beta.Users.Item.SendMail.SendMailRequestBuilder SendMail
        {
            get => new Microsoft.Graph.Beta.Users.Item.SendMail.SendMailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The serviceProvisioningErrors property</summary>
        public Microsoft.Graph.Beta.Users.Item.ServiceProvisioningErrors.ServiceProvisioningErrorsRequestBuilder ServiceProvisioningErrors
        {
            get => new Microsoft.Graph.Beta.Users.Item.ServiceProvisioningErrors.ServiceProvisioningErrorsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the settings property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Settings.SettingsRequestBuilder Settings
        {
            get => new Microsoft.Graph.Beta.Users.Item.Settings.SettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the sponsors property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Sponsors.SponsorsRequestBuilder Sponsors
        {
            get => new Microsoft.Graph.Beta.Users.Item.Sponsors.SponsorsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the teamwork property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Teamwork.TeamworkRequestBuilder Teamwork
        {
            get => new Microsoft.Graph.Beta.Users.Item.Teamwork.TeamworkRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the todo property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.Todo.TodoRequestBuilder Todo
        {
            get => new Microsoft.Graph.Beta.Users.Item.Todo.TodoRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the transitiveMemberOf property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.TransitiveMemberOf.TransitiveMemberOfRequestBuilder TransitiveMemberOf
        {
            get => new Microsoft.Graph.Beta.Users.Item.TransitiveMemberOf.TransitiveMemberOfRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the transitiveReports property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.TransitiveReports.TransitiveReportsRequestBuilder TransitiveReports
        {
            get => new Microsoft.Graph.Beta.Users.Item.TransitiveReports.TransitiveReportsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the translateExchangeIds method.</summary>
        public Microsoft.Graph.Beta.Users.Item.TranslateExchangeIds.TranslateExchangeIdsRequestBuilder TranslateExchangeIds
        {
            get => new Microsoft.Graph.Beta.Users.Item.TranslateExchangeIds.TranslateExchangeIdsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the unblockManagedApps method.</summary>
        public Microsoft.Graph.Beta.Users.Item.UnblockManagedApps.UnblockManagedAppsRequestBuilder UnblockManagedApps
        {
            get => new Microsoft.Graph.Beta.Users.Item.UnblockManagedApps.UnblockManagedAppsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the usageRights property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.UsageRights.UsageRightsRequestBuilder UsageRights
        {
            get => new Microsoft.Graph.Beta.Users.Item.UsageRights.UsageRightsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the virtualEvents property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.VirtualEvents.VirtualEventsRequestBuilder VirtualEvents
        {
            get => new Microsoft.Graph.Beta.Users.Item.VirtualEvents.VirtualEventsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the windowsInformationProtectionDeviceRegistrations property of the microsoft.graph.user entity.</summary>
        public Microsoft.Graph.Beta.Users.Item.WindowsInformationProtectionDeviceRegistrations.WindowsInformationProtectionDeviceRegistrationsRequestBuilder WindowsInformationProtectionDeviceRegistrations
        {
            get => new Microsoft.Graph.Beta.Users.Item.WindowsInformationProtectionDeviceRegistrations.WindowsInformationProtectionDeviceRegistrationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the wipeAndBlockManagedApps method.</summary>
        public Microsoft.Graph.Beta.Users.Item.WipeAndBlockManagedApps.WipeAndBlockManagedAppsRequestBuilder WipeAndBlockManagedApps
        {
            get => new Microsoft.Graph.Beta.Users.Item.WipeAndBlockManagedApps.WipeAndBlockManagedAppsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the wipeManagedAppRegistrationByDeviceTag method.</summary>
        public Microsoft.Graph.Beta.Users.Item.WipeManagedAppRegistrationByDeviceTag.WipeManagedAppRegistrationByDeviceTagRequestBuilder WipeManagedAppRegistrationByDeviceTag
        {
            get => new Microsoft.Graph.Beta.Users.Item.WipeManagedAppRegistrationByDeviceTag.WipeManagedAppRegistrationByDeviceTagRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the wipeManagedAppRegistrationsByAzureAdDeviceId method.</summary>
        public Microsoft.Graph.Beta.Users.Item.WipeManagedAppRegistrationsByAzureAdDeviceId.WipeManagedAppRegistrationsByAzureAdDeviceIdRequestBuilder WipeManagedAppRegistrationsByAzureAdDeviceId
        {
            get => new Microsoft.Graph.Beta.Users.Item.WipeManagedAppRegistrationsByAzureAdDeviceId.WipeManagedAppRegistrationsByAzureAdDeviceIdRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the wipeManagedAppRegistrationsByDeviceTag method.</summary>
        public Microsoft.Graph.Beta.Users.Item.WipeManagedAppRegistrationsByDeviceTag.WipeManagedAppRegistrationsByDeviceTagRequestBuilder WipeManagedAppRegistrationsByDeviceTag
        {
            get => new Microsoft.Graph.Beta.Users.Item.WipeManagedAppRegistrationsByDeviceTag.WipeManagedAppRegistrationsByDeviceTagRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Provides operations to manage the appRoleAssignedResources property of the microsoft.graph.user entity.
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Users.Item.AppRoleAssignedResourcesWithAppId.AppRoleAssignedResourcesWithAppIdRequestBuilder"/></returns>
        /// <param name="appId">Alternate key of servicePrincipal</param>
        public Microsoft.Graph.Beta.Users.Item.AppRoleAssignedResourcesWithAppId.AppRoleAssignedResourcesWithAppIdRequestBuilder AppRoleAssignedResourcesWithAppId(string appId)
        {
            if(string.IsNullOrEmpty(appId)) throw new ArgumentNullException(nameof(appId));
            return new Microsoft.Graph.Beta.Users.Item.AppRoleAssignedResourcesWithAppId.AppRoleAssignedResourcesWithAppIdRequestBuilder(PathParameters, RequestAdapter, appId);
        }
        /// <summary>
        /// Instantiates a new <see cref="Microsoft.Graph.Beta.Users.Item.UserItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UserItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/users/{user%2Did}{?%24expand,%24select}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="Microsoft.Graph.Beta.Users.Item.UserItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public UserItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/users/{user%2Did}{?%24expand,%24select}", rawUrl)
        {
        }
        /// <summary>
        /// Delete user.   When deleted, user resources are moved to a temporary container and can be restored within 30 days.  After that time, they are permanently deleted.  To learn more, see deletedItems.
        /// Find more info here <see href="https://learn.microsoft.com/graph/api/user-delete?view=graph-rest-beta" />
        /// </summary>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task DeleteAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task DeleteAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToDeleteRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            await RequestAdapter.SendNoContentAsync(requestInfo, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Provides operations to manage the devices property of the microsoft.graph.user entity.
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Users.Item.DevicesWithDeviceId.DevicesWithDeviceIdRequestBuilder"/></returns>
        /// <param name="deviceId">Alternate key of device</param>
        public Microsoft.Graph.Beta.Users.Item.DevicesWithDeviceId.DevicesWithDeviceIdRequestBuilder DevicesWithDeviceId(string deviceId)
        {
            if(string.IsNullOrEmpty(deviceId)) throw new ArgumentNullException(nameof(deviceId));
            return new Microsoft.Graph.Beta.Users.Item.DevicesWithDeviceId.DevicesWithDeviceIdRequestBuilder(PathParameters, RequestAdapter, deviceId);
        }
        /// <summary>
        /// Provides operations to call the exportDeviceAndAppManagementData method.
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Users.Item.ExportDeviceAndAppManagementDataWithSkipWithTop.ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilder"/></returns>
        /// <param name="skip">Usage: skip={skip}</param>
        /// <param name="top">Usage: top={top}</param>
        public Microsoft.Graph.Beta.Users.Item.ExportDeviceAndAppManagementDataWithSkipWithTop.ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilder ExportDeviceAndAppManagementDataWithSkipWithTop(int? skip, int? top)
        {
            _ = skip ?? throw new ArgumentNullException(nameof(skip));
            _ = top ?? throw new ArgumentNullException(nameof(top));
            return new Microsoft.Graph.Beta.Users.Item.ExportDeviceAndAppManagementDataWithSkipWithTop.ExportDeviceAndAppManagementDataWithSkipWithTopRequestBuilder(PathParameters, RequestAdapter, skip, top);
        }
        /// <summary>
        /// Provides operations to call the findRooms method.
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Users.Item.FindRoomsWithRoomList.FindRoomsWithRoomListRequestBuilder"/></returns>
        /// <param name="roomList">Usage: RoomList=&apos;{RoomList}&apos;</param>
        public Microsoft.Graph.Beta.Users.Item.FindRoomsWithRoomList.FindRoomsWithRoomListRequestBuilder FindRoomsWithRoomList(string roomList)
        {
            if(string.IsNullOrEmpty(roomList)) throw new ArgumentNullException(nameof(roomList));
            return new Microsoft.Graph.Beta.Users.Item.FindRoomsWithRoomList.FindRoomsWithRoomListRequestBuilder(PathParameters, RequestAdapter, roomList);
        }
        /// <summary>
        /// Retrieve the properties and relationships of user object. This operation returns by default only a subset of the more commonly used properties for each user. These default properties are noted in the Properties section. To get properties that are not returned by default, do a GET operation for the user and specify the properties in a $select OData query option. Because the user resource supports extensions, you can also use the GET operation to get custom properties and extension data in a user instance. Customers through Microsoft Entra ID for customers can also use this API operation to retrieve their details.
        /// Find more info here <see href="https://learn.microsoft.com/graph/api/user-get?view=graph-rest-beta" />
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.User"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<Microsoft.Graph.Beta.Models.User?> GetAsync(Action<RequestConfiguration<Microsoft.Graph.Beta.Users.Item.UserItemRequestBuilder.UserItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<Microsoft.Graph.Beta.Models.User> GetAsync(Action<RequestConfiguration<Microsoft.Graph.Beta.Users.Item.UserItemRequestBuilder.UserItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<Microsoft.Graph.Beta.Models.User>(requestInfo, Microsoft.Graph.Beta.Models.User.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Provides operations to manage the onlineMeetings property of the microsoft.graph.user entity.
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Users.Item.OnlineMeetingsWithJoinWebUrl.OnlineMeetingsWithJoinWebUrlRequestBuilder"/></returns>
        /// <param name="joinWebUrl">Alternate key of onlineMeeting</param>
        public Microsoft.Graph.Beta.Users.Item.OnlineMeetingsWithJoinWebUrl.OnlineMeetingsWithJoinWebUrlRequestBuilder OnlineMeetingsWithJoinWebUrl(string joinWebUrl)
        {
            if(string.IsNullOrEmpty(joinWebUrl)) throw new ArgumentNullException(nameof(joinWebUrl));
            return new Microsoft.Graph.Beta.Users.Item.OnlineMeetingsWithJoinWebUrl.OnlineMeetingsWithJoinWebUrlRequestBuilder(PathParameters, RequestAdapter, joinWebUrl);
        }
        /// <summary>
        /// Update the properties of a user object. Not all properties can be updated by Member or Guest users with their default permissions without Administrator roles. Compare member and guest default permissions to see properties they can manage. Customers through Microsoft Entra ID for customers can also use this API operation to update their details. See Default user permissions in customer tenants for the list of properties they can update.
        /// Find more info here <see href="https://learn.microsoft.com/graph/api/user-update?view=graph-rest-beta" />
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.User"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<Microsoft.Graph.Beta.Models.User?> PatchAsync(Microsoft.Graph.Beta.Models.User body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<Microsoft.Graph.Beta.Models.User> PatchAsync(Microsoft.Graph.Beta.Models.User body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPatchRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<Microsoft.Graph.Beta.Models.User>(requestInfo, Microsoft.Graph.Beta.Models.User.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Provides operations to call the reminderView method.
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Users.Item.ReminderViewWithStartDateTimeWithEndDateTime.ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilder"/></returns>
        /// <param name="endDateTime">Usage: EndDateTime=&apos;{EndDateTime}&apos;</param>
        /// <param name="startDateTime">Usage: StartDateTime=&apos;{StartDateTime}&apos;</param>
        public Microsoft.Graph.Beta.Users.Item.ReminderViewWithStartDateTimeWithEndDateTime.ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilder ReminderViewWithStartDateTimeWithEndDateTime(string endDateTime, string startDateTime)
        {
            if(string.IsNullOrEmpty(endDateTime)) throw new ArgumentNullException(nameof(endDateTime));
            if(string.IsNullOrEmpty(startDateTime)) throw new ArgumentNullException(nameof(startDateTime));
            return new Microsoft.Graph.Beta.Users.Item.ReminderViewWithStartDateTimeWithEndDateTime.ReminderViewWithStartDateTimeWithEndDateTimeRequestBuilder(PathParameters, RequestAdapter, endDateTime, startDateTime);
        }
        /// <summary>
        /// Delete user.   When deleted, user resources are moved to a temporary container and can be restored within 30 days.  After that time, they are permanently deleted.  To learn more, see deletedItems.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.DELETE, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Retrieve the properties and relationships of user object. This operation returns by default only a subset of the more commonly used properties for each user. These default properties are noted in the Properties section. To get properties that are not returned by default, do a GET operation for the user and specify the properties in a $select OData query option. Because the user resource supports extensions, you can also use the GET operation to get custom properties and extension data in a user instance. Customers through Microsoft Entra ID for customers can also use this API operation to retrieve their details.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<Microsoft.Graph.Beta.Users.Item.UserItemRequestBuilder.UserItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<Microsoft.Graph.Beta.Users.Item.UserItemRequestBuilder.UserItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Update the properties of a user object. Not all properties can be updated by Member or Guest users with their default permissions without Administrator roles. Compare member and guest default permissions to see properties they can manage. Customers through Microsoft Entra ID for customers can also use this API operation to update their details. See Default user permissions in customer tenants for the list of properties they can update.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPatchRequestInformation(Microsoft.Graph.Beta.Models.User body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPatchRequestInformation(Microsoft.Graph.Beta.Models.User body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PATCH, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Users.Item.UserItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public Microsoft.Graph.Beta.Users.Item.UserItemRequestBuilder WithUrl(string rawUrl)
        {
            return new Microsoft.Graph.Beta.Users.Item.UserItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class UserItemRequestBuilderDeleteRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Retrieve the properties and relationships of user object. This operation returns by default only a subset of the more commonly used properties for each user. These default properties are noted in the Properties section. To get properties that are not returned by default, do a GET operation for the user and specify the properties in a $select OData query option. Because the user resource supports extensions, you can also use the GET operation to get custom properties and extension data in a user instance. Customers through Microsoft Entra ID for customers can also use this API operation to retrieve their details.
        /// </summary>
        public class UserItemRequestBuilderGetQueryParameters 
        {
            /// <summary>Expand related entities</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("%24expand")]
            public string[]? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("%24expand")]
            public string[] Expand { get; set; }
#endif
            /// <summary>Select properties to be returned</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("%24select")]
            public string[]? Select { get; set; }
#nullable restore
#else
            [QueryParameter("%24select")]
            public string[] Select { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class UserItemRequestBuilderGetRequestConfiguration : RequestConfiguration<Microsoft.Graph.Beta.Users.Item.UserItemRequestBuilder.UserItemRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class UserItemRequestBuilderPatchRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
