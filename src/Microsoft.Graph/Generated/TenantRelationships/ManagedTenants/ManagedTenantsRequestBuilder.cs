// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Graph.Beta.Models.ManagedTenants;
using Microsoft.Graph.Beta.Models.ODataErrors;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.AggregatedPolicyCompliances;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.AppPerformances;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.AuditEvents;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.CloudPcConnections;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.CloudPcDevices;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.CloudPcsOverview;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ConditionalAccessPolicyCoverages;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.CredentialUserRegistrationsSummaries;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.DeviceAppPerformances;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.DeviceCompliancePolicySettingStateSummaries;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.DeviceHealthStatuses;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedDeviceComplianceTrends;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedDeviceCompliances;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantAlertLogs;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantAlertRuleDefinitions;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantAlertRules;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantAlerts;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantApiNotifications;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantEmailNotifications;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantTicketingEndpoints;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementActionTenantDeploymentStatuses;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementActions;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementIntents;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateCollectionTenantSummaries;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateCollections;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateStepTenantSummaries;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateStepVersions;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateSteps;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplates;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.MyRoles;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.TenantGroups;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.TenantTags;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.Tenants;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.TenantsCustomizedInformation;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.TenantsDetailedInformation;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.WindowsDeviceMalwareStates;
using Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.WindowsProtectionStates;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Microsoft.Graph.Beta.TenantRelationships.ManagedTenants
{
    /// <summary>
    /// Provides operations to manage the managedTenants property of the microsoft.graph.tenantRelationship entity.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class ManagedTenantsRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Provides operations to manage the aggregatedPolicyCompliances property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.AggregatedPolicyCompliances.AggregatedPolicyCompliancesRequestBuilder AggregatedPolicyCompliances
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.AggregatedPolicyCompliances.AggregatedPolicyCompliancesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the appPerformances property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.AppPerformances.AppPerformancesRequestBuilder AppPerformances
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.AppPerformances.AppPerformancesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the auditEvents property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.AuditEvents.AuditEventsRequestBuilder AuditEvents
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.AuditEvents.AuditEventsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the cloudPcConnections property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.CloudPcConnections.CloudPcConnectionsRequestBuilder CloudPcConnections
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.CloudPcConnections.CloudPcConnectionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the cloudPcDevices property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.CloudPcDevices.CloudPcDevicesRequestBuilder CloudPcDevices
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.CloudPcDevices.CloudPcDevicesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the cloudPcsOverview property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.CloudPcsOverview.CloudPcsOverviewRequestBuilder CloudPcsOverview
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.CloudPcsOverview.CloudPcsOverviewRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the conditionalAccessPolicyCoverages property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ConditionalAccessPolicyCoverages.ConditionalAccessPolicyCoveragesRequestBuilder ConditionalAccessPolicyCoverages
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ConditionalAccessPolicyCoverages.ConditionalAccessPolicyCoveragesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the credentialUserRegistrationsSummaries property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.CredentialUserRegistrationsSummaries.CredentialUserRegistrationsSummariesRequestBuilder CredentialUserRegistrationsSummaries
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.CredentialUserRegistrationsSummaries.CredentialUserRegistrationsSummariesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the deviceAppPerformances property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.DeviceAppPerformances.DeviceAppPerformancesRequestBuilder DeviceAppPerformances
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.DeviceAppPerformances.DeviceAppPerformancesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the deviceCompliancePolicySettingStateSummaries property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.DeviceCompliancePolicySettingStateSummaries.DeviceCompliancePolicySettingStateSummariesRequestBuilder DeviceCompliancePolicySettingStateSummaries
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.DeviceCompliancePolicySettingStateSummaries.DeviceCompliancePolicySettingStateSummariesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the deviceHealthStatuses property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.DeviceHealthStatuses.DeviceHealthStatusesRequestBuilder DeviceHealthStatuses
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.DeviceHealthStatuses.DeviceHealthStatusesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedDeviceCompliances property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedDeviceCompliances.ManagedDeviceCompliancesRequestBuilder ManagedDeviceCompliances
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedDeviceCompliances.ManagedDeviceCompliancesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedDeviceComplianceTrends property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedDeviceComplianceTrends.ManagedDeviceComplianceTrendsRequestBuilder ManagedDeviceComplianceTrends
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedDeviceComplianceTrends.ManagedDeviceComplianceTrendsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedTenantAlertLogs property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantAlertLogs.ManagedTenantAlertLogsRequestBuilder ManagedTenantAlertLogs
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantAlertLogs.ManagedTenantAlertLogsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedTenantAlertRuleDefinitions property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantAlertRuleDefinitions.ManagedTenantAlertRuleDefinitionsRequestBuilder ManagedTenantAlertRuleDefinitions
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantAlertRuleDefinitions.ManagedTenantAlertRuleDefinitionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedTenantAlertRules property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantAlertRules.ManagedTenantAlertRulesRequestBuilder ManagedTenantAlertRules
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantAlertRules.ManagedTenantAlertRulesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedTenantAlerts property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantAlerts.ManagedTenantAlertsRequestBuilder ManagedTenantAlerts
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantAlerts.ManagedTenantAlertsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedTenantApiNotifications property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantApiNotifications.ManagedTenantApiNotificationsRequestBuilder ManagedTenantApiNotifications
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantApiNotifications.ManagedTenantApiNotificationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedTenantEmailNotifications property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantEmailNotifications.ManagedTenantEmailNotificationsRequestBuilder ManagedTenantEmailNotifications
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantEmailNotifications.ManagedTenantEmailNotificationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedTenantTicketingEndpoints property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantTicketingEndpoints.ManagedTenantTicketingEndpointsRequestBuilder ManagedTenantTicketingEndpoints
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantTicketingEndpoints.ManagedTenantTicketingEndpointsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managementActions property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementActions.ManagementActionsRequestBuilder ManagementActions
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementActions.ManagementActionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managementActionTenantDeploymentStatuses property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementActionTenantDeploymentStatuses.ManagementActionTenantDeploymentStatusesRequestBuilder ManagementActionTenantDeploymentStatuses
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementActionTenantDeploymentStatuses.ManagementActionTenantDeploymentStatusesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managementIntents property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementIntents.ManagementIntentsRequestBuilder ManagementIntents
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementIntents.ManagementIntentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managementTemplateCollections property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateCollections.ManagementTemplateCollectionsRequestBuilder ManagementTemplateCollections
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateCollections.ManagementTemplateCollectionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managementTemplateCollectionTenantSummaries property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateCollectionTenantSummaries.ManagementTemplateCollectionTenantSummariesRequestBuilder ManagementTemplateCollectionTenantSummaries
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateCollectionTenantSummaries.ManagementTemplateCollectionTenantSummariesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managementTemplates property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplates.ManagementTemplatesRequestBuilder ManagementTemplates
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplates.ManagementTemplatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managementTemplateSteps property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateSteps.ManagementTemplateStepsRequestBuilder ManagementTemplateSteps
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateSteps.ManagementTemplateStepsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managementTemplateStepTenantSummaries property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateStepTenantSummaries.ManagementTemplateStepTenantSummariesRequestBuilder ManagementTemplateStepTenantSummaries
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateStepTenantSummaries.ManagementTemplateStepTenantSummariesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managementTemplateStepVersions property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateStepVersions.ManagementTemplateStepVersionsRequestBuilder ManagementTemplateStepVersions
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagementTemplateStepVersions.ManagementTemplateStepVersionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the myRoles property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.MyRoles.MyRolesRequestBuilder MyRoles
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.MyRoles.MyRolesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the tenantGroups property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.TenantGroups.TenantGroupsRequestBuilder TenantGroups
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.TenantGroups.TenantGroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the tenants property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.Tenants.TenantsRequestBuilder Tenants
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.Tenants.TenantsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the tenantsCustomizedInformation property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.TenantsCustomizedInformation.TenantsCustomizedInformationRequestBuilder TenantsCustomizedInformation
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.TenantsCustomizedInformation.TenantsCustomizedInformationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the tenantsDetailedInformation property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.TenantsDetailedInformation.TenantsDetailedInformationRequestBuilder TenantsDetailedInformation
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.TenantsDetailedInformation.TenantsDetailedInformationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the tenantTags property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.TenantTags.TenantTagsRequestBuilder TenantTags
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.TenantTags.TenantTagsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the windowsDeviceMalwareStates property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.WindowsDeviceMalwareStates.WindowsDeviceMalwareStatesRequestBuilder WindowsDeviceMalwareStates
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.WindowsDeviceMalwareStates.WindowsDeviceMalwareStatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the windowsProtectionStates property of the microsoft.graph.managedTenants.managedTenant entity.</summary>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.WindowsProtectionStates.WindowsProtectionStatesRequestBuilder WindowsProtectionStates
        {
            get => new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.WindowsProtectionStates.WindowsProtectionStatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ManagedTenantsRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/tenantRelationships/managedTenants{?%24expand,%24select}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantsRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ManagedTenantsRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/tenantRelationships/managedTenants{?%24expand,%24select}", rawUrl)
        {
        }
        /// <summary>
        /// Delete navigation property managedTenants for tenantRelationships
        /// </summary>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task DeleteAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task DeleteAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToDeleteRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            await RequestAdapter.SendNoContentAsync(requestInfo, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// The operations available to interact with the multi-tenant management platform.
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant?> GetAsync(Action<RequestConfiguration<global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantsRequestBuilder.ManagedTenantsRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant> GetAsync(Action<RequestConfiguration<global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantsRequestBuilder.ManagedTenantsRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant>(requestInfo, global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Update the navigation property managedTenants in tenantRelationships
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant?> PatchAsync(global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant> PatchAsync(global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPatchRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant>(requestInfo, global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Delete navigation property managedTenants for tenantRelationships
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.DELETE, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// The operations available to interact with the multi-tenant management platform.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantsRequestBuilder.ManagedTenantsRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantsRequestBuilder.ManagedTenantsRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Update the navigation property managedTenants in tenantRelationships
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPatchRequestInformation(global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPatchRequestInformation(global::Microsoft.Graph.Beta.Models.ManagedTenants.ManagedTenant body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PATCH, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantsRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantsRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantsRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ManagedTenantsRequestBuilderDeleteRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// The operations available to interact with the multi-tenant management platform.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ManagedTenantsRequestBuilderGetQueryParameters 
        {
            /// <summary>Expand related entities</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("%24expand")]
            public string[]? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("%24expand")]
            public string[] Expand { get; set; }
#endif
            /// <summary>Select properties to be returned</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("%24select")]
            public string[]? Select { get; set; }
#nullable restore
#else
            [QueryParameter("%24select")]
            public string[] Select { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ManagedTenantsRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Microsoft.Graph.Beta.TenantRelationships.ManagedTenants.ManagedTenantsRequestBuilder.ManagedTenantsRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class ManagedTenantsRequestBuilderPatchRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
