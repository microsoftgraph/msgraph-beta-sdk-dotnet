// <auto-generated/>
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ActivateDeviceEsim;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.AssignmentFilterEvaluationStatusDetails;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.BypassActivationLock;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.CleanWindowsDevice;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.CreateDeviceLogCollectionRequest;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeleteUserFromSharedAppleDevice;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Deprovision;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DetectedApps;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeviceCategory;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeviceCompliancePolicyStates;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeviceConfigurationStates;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeviceHealthScriptStates;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Disable;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DisableLostMode;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.EnableLostMode;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.EnrollNowAction;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.GetCloudPcRemoteActionResults;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.GetCloudPcReviewStatus;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.GetFileVaultKey;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.GetNonCompliantSettings;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.InitiateDeviceAttestation;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.InitiateMobileDeviceManagementKeyRecovery;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.InitiateOnDemandProactiveRemediation;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.LocateDevice;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.LogCollectionRequests;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.LogoutSharedAppleDeviceActiveUser;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceMobileAppConfigurationStates;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.OverrideComplianceState;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.PauseConfigurationRefresh;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.PlayLostModeSound;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RebootNow;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RecoverPasscode;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Reenable;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RemoteLock;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RemoveDeviceFirmwareConfigurationInterfaceManagement;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ReprovisionCloudPc;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RequestRemoteAssistance;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ResetPasscode;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ResizeCloudPc;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RestoreCloudPc;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Retire;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RevokeAppleVppLicenses;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RotateBitLockerKeys;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RotateFileVaultKey;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RotateLocalAdminPassword;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SecurityBaselineStates;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SendCustomNotificationToCompanyPortal;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SetCloudPcReviewStatus;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SetDeviceName;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ShutDown;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SyncDevice;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.TriggerConfigurationManagerAction;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.UpdateWindowsDeviceAccount;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Users;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.WindowsDefenderScan;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.WindowsDefenderUpdateSignatures;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.WindowsProtectionState;
using Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Wipe;
using Microsoft.Graph.Beta.Models.ODataErrors;
using Microsoft.Graph.Beta.Models;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item
{
    /// <summary>
    /// Provides operations to manage the comanagedDevices property of the microsoft.graph.deviceManagement entity.
    /// </summary>
    public class ManagedDeviceItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Provides operations to call the activateDeviceEsim method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ActivateDeviceEsim.ActivateDeviceEsimRequestBuilder ActivateDeviceEsim
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ActivateDeviceEsim.ActivateDeviceEsimRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the assignmentFilterEvaluationStatusDetails property of the microsoft.graph.managedDevice entity.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.AssignmentFilterEvaluationStatusDetails.AssignmentFilterEvaluationStatusDetailsRequestBuilder AssignmentFilterEvaluationStatusDetails
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.AssignmentFilterEvaluationStatusDetails.AssignmentFilterEvaluationStatusDetailsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the bypassActivationLock method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.BypassActivationLock.BypassActivationLockRequestBuilder BypassActivationLock
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.BypassActivationLock.BypassActivationLockRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the cleanWindowsDevice method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.CleanWindowsDevice.CleanWindowsDeviceRequestBuilder CleanWindowsDevice
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.CleanWindowsDevice.CleanWindowsDeviceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the createDeviceLogCollectionRequest method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.CreateDeviceLogCollectionRequest.CreateDeviceLogCollectionRequestRequestBuilder CreateDeviceLogCollectionRequest
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.CreateDeviceLogCollectionRequest.CreateDeviceLogCollectionRequestRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the deleteUserFromSharedAppleDevice method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeleteUserFromSharedAppleDevice.DeleteUserFromSharedAppleDeviceRequestBuilder DeleteUserFromSharedAppleDevice
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeleteUserFromSharedAppleDevice.DeleteUserFromSharedAppleDeviceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the deprovision method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Deprovision.DeprovisionRequestBuilder Deprovision
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Deprovision.DeprovisionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the detectedApps property of the microsoft.graph.managedDevice entity.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DetectedApps.DetectedAppsRequestBuilder DetectedApps
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DetectedApps.DetectedAppsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the deviceCategory property of the microsoft.graph.managedDevice entity.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeviceCategory.DeviceCategoryRequestBuilder DeviceCategory
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeviceCategory.DeviceCategoryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the deviceCompliancePolicyStates property of the microsoft.graph.managedDevice entity.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeviceCompliancePolicyStates.DeviceCompliancePolicyStatesRequestBuilder DeviceCompliancePolicyStates
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeviceCompliancePolicyStates.DeviceCompliancePolicyStatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the deviceConfigurationStates property of the microsoft.graph.managedDevice entity.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeviceConfigurationStates.DeviceConfigurationStatesRequestBuilder DeviceConfigurationStates
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeviceConfigurationStates.DeviceConfigurationStatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the deviceHealthScriptStates property of the microsoft.graph.managedDevice entity.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeviceHealthScriptStates.DeviceHealthScriptStatesRequestBuilder DeviceHealthScriptStates
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DeviceHealthScriptStates.DeviceHealthScriptStatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the disable method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Disable.DisableRequestBuilder Disable
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Disable.DisableRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the disableLostMode method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DisableLostMode.DisableLostModeRequestBuilder DisableLostMode
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.DisableLostMode.DisableLostModeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the enableLostMode method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.EnableLostMode.EnableLostModeRequestBuilder EnableLostMode
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.EnableLostMode.EnableLostModeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the enrollNowAction method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.EnrollNowAction.EnrollNowActionRequestBuilder EnrollNowAction
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.EnrollNowAction.EnrollNowActionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getCloudPcRemoteActionResults method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.GetCloudPcRemoteActionResults.GetCloudPcRemoteActionResultsRequestBuilder GetCloudPcRemoteActionResults
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.GetCloudPcRemoteActionResults.GetCloudPcRemoteActionResultsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getCloudPcReviewStatus method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.GetCloudPcReviewStatus.GetCloudPcReviewStatusRequestBuilder GetCloudPcReviewStatus
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.GetCloudPcReviewStatus.GetCloudPcReviewStatusRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getFileVaultKey method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.GetFileVaultKey.GetFileVaultKeyRequestBuilder GetFileVaultKey
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.GetFileVaultKey.GetFileVaultKeyRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getNonCompliantSettings method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.GetNonCompliantSettings.GetNonCompliantSettingsRequestBuilder GetNonCompliantSettings
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.GetNonCompliantSettings.GetNonCompliantSettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the initiateDeviceAttestation method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.InitiateDeviceAttestation.InitiateDeviceAttestationRequestBuilder InitiateDeviceAttestation
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.InitiateDeviceAttestation.InitiateDeviceAttestationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the initiateMobileDeviceManagementKeyRecovery method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.InitiateMobileDeviceManagementKeyRecovery.InitiateMobileDeviceManagementKeyRecoveryRequestBuilder InitiateMobileDeviceManagementKeyRecovery
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.InitiateMobileDeviceManagementKeyRecovery.InitiateMobileDeviceManagementKeyRecoveryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the initiateOnDemandProactiveRemediation method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.InitiateOnDemandProactiveRemediation.InitiateOnDemandProactiveRemediationRequestBuilder InitiateOnDemandProactiveRemediation
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.InitiateOnDemandProactiveRemediation.InitiateOnDemandProactiveRemediationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the locateDevice method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.LocateDevice.LocateDeviceRequestBuilder LocateDevice
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.LocateDevice.LocateDeviceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the logCollectionRequests property of the microsoft.graph.managedDevice entity.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.LogCollectionRequests.LogCollectionRequestsRequestBuilder LogCollectionRequests
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.LogCollectionRequests.LogCollectionRequestsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the logoutSharedAppleDeviceActiveUser method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.LogoutSharedAppleDeviceActiveUser.LogoutSharedAppleDeviceActiveUserRequestBuilder LogoutSharedAppleDeviceActiveUser
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.LogoutSharedAppleDeviceActiveUser.LogoutSharedAppleDeviceActiveUserRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the managedDeviceMobileAppConfigurationStates property of the microsoft.graph.managedDevice entity.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceMobileAppConfigurationStates.ManagedDeviceMobileAppConfigurationStatesRequestBuilder ManagedDeviceMobileAppConfigurationStates
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceMobileAppConfigurationStates.ManagedDeviceMobileAppConfigurationStatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the overrideComplianceState method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.OverrideComplianceState.OverrideComplianceStateRequestBuilder OverrideComplianceState
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.OverrideComplianceState.OverrideComplianceStateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the pauseConfigurationRefresh method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.PauseConfigurationRefresh.PauseConfigurationRefreshRequestBuilder PauseConfigurationRefresh
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.PauseConfigurationRefresh.PauseConfigurationRefreshRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the playLostModeSound method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.PlayLostModeSound.PlayLostModeSoundRequestBuilder PlayLostModeSound
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.PlayLostModeSound.PlayLostModeSoundRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the rebootNow method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RebootNow.RebootNowRequestBuilder RebootNow
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RebootNow.RebootNowRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the recoverPasscode method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RecoverPasscode.RecoverPasscodeRequestBuilder RecoverPasscode
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RecoverPasscode.RecoverPasscodeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the reenable method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Reenable.ReenableRequestBuilder Reenable
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Reenable.ReenableRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the remoteLock method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RemoteLock.RemoteLockRequestBuilder RemoteLock
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RemoteLock.RemoteLockRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the removeDeviceFirmwareConfigurationInterfaceManagement method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RemoveDeviceFirmwareConfigurationInterfaceManagement.RemoveDeviceFirmwareConfigurationInterfaceManagementRequestBuilder RemoveDeviceFirmwareConfigurationInterfaceManagement
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RemoveDeviceFirmwareConfigurationInterfaceManagement.RemoveDeviceFirmwareConfigurationInterfaceManagementRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the reprovisionCloudPc method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ReprovisionCloudPc.ReprovisionCloudPcRequestBuilder ReprovisionCloudPc
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ReprovisionCloudPc.ReprovisionCloudPcRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the requestRemoteAssistance method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RequestRemoteAssistance.RequestRemoteAssistanceRequestBuilder RequestRemoteAssistance
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RequestRemoteAssistance.RequestRemoteAssistanceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the resetPasscode method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ResetPasscode.ResetPasscodeRequestBuilder ResetPasscode
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ResetPasscode.ResetPasscodeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the resizeCloudPc method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ResizeCloudPc.ResizeCloudPcRequestBuilder ResizeCloudPc
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ResizeCloudPc.ResizeCloudPcRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the restoreCloudPc method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RestoreCloudPc.RestoreCloudPcRequestBuilder RestoreCloudPc
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RestoreCloudPc.RestoreCloudPcRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the retire method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Retire.RetireRequestBuilder Retire
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Retire.RetireRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the revokeAppleVppLicenses method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RevokeAppleVppLicenses.RevokeAppleVppLicensesRequestBuilder RevokeAppleVppLicenses
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RevokeAppleVppLicenses.RevokeAppleVppLicensesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the rotateBitLockerKeys method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RotateBitLockerKeys.RotateBitLockerKeysRequestBuilder RotateBitLockerKeys
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RotateBitLockerKeys.RotateBitLockerKeysRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the rotateFileVaultKey method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RotateFileVaultKey.RotateFileVaultKeyRequestBuilder RotateFileVaultKey
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RotateFileVaultKey.RotateFileVaultKeyRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the rotateLocalAdminPassword method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RotateLocalAdminPassword.RotateLocalAdminPasswordRequestBuilder RotateLocalAdminPassword
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.RotateLocalAdminPassword.RotateLocalAdminPasswordRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the securityBaselineStates property of the microsoft.graph.managedDevice entity.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SecurityBaselineStates.SecurityBaselineStatesRequestBuilder SecurityBaselineStates
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SecurityBaselineStates.SecurityBaselineStatesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the sendCustomNotificationToCompanyPortal method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SendCustomNotificationToCompanyPortal.SendCustomNotificationToCompanyPortalRequestBuilder SendCustomNotificationToCompanyPortal
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SendCustomNotificationToCompanyPortal.SendCustomNotificationToCompanyPortalRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the setCloudPcReviewStatus method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SetCloudPcReviewStatus.SetCloudPcReviewStatusRequestBuilder SetCloudPcReviewStatus
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SetCloudPcReviewStatus.SetCloudPcReviewStatusRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the setDeviceName method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SetDeviceName.SetDeviceNameRequestBuilder SetDeviceName
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SetDeviceName.SetDeviceNameRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the shutDown method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ShutDown.ShutDownRequestBuilder ShutDown
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ShutDown.ShutDownRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the syncDevice method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SyncDevice.SyncDeviceRequestBuilder SyncDevice
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.SyncDevice.SyncDeviceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the triggerConfigurationManagerAction method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.TriggerConfigurationManagerAction.TriggerConfigurationManagerActionRequestBuilder TriggerConfigurationManagerAction
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.TriggerConfigurationManagerAction.TriggerConfigurationManagerActionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the updateWindowsDeviceAccount method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.UpdateWindowsDeviceAccount.UpdateWindowsDeviceAccountRequestBuilder UpdateWindowsDeviceAccount
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.UpdateWindowsDeviceAccount.UpdateWindowsDeviceAccountRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the users property of the microsoft.graph.managedDevice entity.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Users.UsersRequestBuilder Users
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Users.UsersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the windowsDefenderScan method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.WindowsDefenderScan.WindowsDefenderScanRequestBuilder WindowsDefenderScan
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.WindowsDefenderScan.WindowsDefenderScanRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the windowsDefenderUpdateSignatures method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.WindowsDefenderUpdateSignatures.WindowsDefenderUpdateSignaturesRequestBuilder WindowsDefenderUpdateSignatures
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.WindowsDefenderUpdateSignatures.WindowsDefenderUpdateSignaturesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the windowsProtectionState property of the microsoft.graph.managedDevice entity.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.WindowsProtectionState.WindowsProtectionStateRequestBuilder WindowsProtectionState
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.WindowsProtectionState.WindowsProtectionStateRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the wipe method.</summary>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Wipe.WipeRequestBuilder Wipe
        {
            get => new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.Wipe.WipeRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ManagedDeviceItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/deviceManagement/comanagedDevices/{managedDevice%2Did}{?%24expand,%24select}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public ManagedDeviceItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/deviceManagement/comanagedDevices/{managedDevice%2Did}{?%24expand,%24select}", rawUrl)
        {
        }
        /// <summary>
        /// Delete navigation property comanagedDevices for deviceManagement
        /// </summary>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task DeleteAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task DeleteAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToDeleteRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            await RequestAdapter.SendNoContentAsync(requestInfo, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// The list of co-managed devices report
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.ManagedDevice"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<Microsoft.Graph.Beta.Models.ManagedDevice?> GetAsync(Action<RequestConfiguration<Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceItemRequestBuilder.ManagedDeviceItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<Microsoft.Graph.Beta.Models.ManagedDevice> GetAsync(Action<RequestConfiguration<Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceItemRequestBuilder.ManagedDeviceItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<Microsoft.Graph.Beta.Models.ManagedDevice>(requestInfo, Microsoft.Graph.Beta.Models.ManagedDevice.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Update the navigation property comanagedDevices in deviceManagement
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.Models.ManagedDevice"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<Microsoft.Graph.Beta.Models.ManagedDevice?> PatchAsync(Microsoft.Graph.Beta.Models.ManagedDevice body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<Microsoft.Graph.Beta.Models.ManagedDevice> PatchAsync(Microsoft.Graph.Beta.Models.ManagedDevice body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPatchRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<Microsoft.Graph.Beta.Models.ManagedDevice>(requestInfo, Microsoft.Graph.Beta.Models.ManagedDevice.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Delete navigation property comanagedDevices for deviceManagement
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.DELETE, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// The list of co-managed devices report
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceItemRequestBuilder.ManagedDeviceItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceItemRequestBuilder.ManagedDeviceItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Update the navigation property comanagedDevices in deviceManagement
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPatchRequestInformation(Microsoft.Graph.Beta.Models.ManagedDevice body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPatchRequestInformation(Microsoft.Graph.Beta.Models.ManagedDevice body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PATCH, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceItemRequestBuilder WithUrl(string rawUrl)
        {
            return new Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class ManagedDeviceItemRequestBuilderDeleteRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// The list of co-managed devices report
        /// </summary>
        public class ManagedDeviceItemRequestBuilderGetQueryParameters 
        {
            /// <summary>Expand related entities</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("%24expand")]
            public string[]? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("%24expand")]
            public string[] Expand { get; set; }
#endif
            /// <summary>Select properties to be returned</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("%24select")]
            public string[]? Select { get; set; }
#nullable restore
#else
            [QueryParameter("%24select")]
            public string[] Select { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class ManagedDeviceItemRequestBuilderGetRequestConfiguration : RequestConfiguration<Microsoft.Graph.Beta.DeviceManagement.ComanagedDevices.Item.ManagedDeviceItemRequestBuilder.ManagedDeviceItemRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        public class ManagedDeviceItemRequestBuilderPatchRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
