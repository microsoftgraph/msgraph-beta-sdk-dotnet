// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.ManagedTenants
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Windows Device Malware State.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class WindowsDeviceMalwareState : Microsoft.Graph.Entity
    {
    
		///<summary>
		/// The WindowsDeviceMalwareState constructor
		///</summary>
        public WindowsDeviceMalwareState()
        {
            this.ODataType = "microsoft.graph.managedTenants.windowsDeviceMalwareState";
        }
	
        /// <summary>
        /// Gets or sets additional information url.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "additionalInformationUrl", Required = Newtonsoft.Json.Required.Default)]
        public string AdditionalInformationUrl { get; set; }
    
        /// <summary>
        /// Gets or sets detection count.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "detectionCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? DetectionCount { get; set; }
    
        /// <summary>
        /// Gets or sets device deleted.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceDeleted", Required = Newtonsoft.Json.Required.Default)]
        public bool? DeviceDeleted { get; set; }
    
        /// <summary>
        /// Gets or sets initial detection date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "initialDetectionDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? InitialDetectionDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last refreshed date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastRefreshedDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? LastRefreshedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last state change date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastStateChangeDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? LastStateChangeDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets malware category.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "malwareCategory", Required = Newtonsoft.Json.Required.Default)]
        public string MalwareCategory { get; set; }
    
        /// <summary>
        /// Gets or sets malware display name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "malwareDisplayName", Required = Newtonsoft.Json.Required.Default)]
        public string MalwareDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets malware execution state.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "malwareExecutionState", Required = Newtonsoft.Json.Required.Default)]
        public string MalwareExecutionState { get; set; }
    
        /// <summary>
        /// Gets or sets malware id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "malwareId", Required = Newtonsoft.Json.Required.Default)]
        public string MalwareId { get; set; }
    
        /// <summary>
        /// Gets or sets malware severity.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "malwareSeverity", Required = Newtonsoft.Json.Required.Default)]
        public string MalwareSeverity { get; set; }
    
        /// <summary>
        /// Gets or sets malware threat state.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "malwareThreatState", Required = Newtonsoft.Json.Required.Default)]
        public string MalwareThreatState { get; set; }
    
        /// <summary>
        /// Gets or sets managed device id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "managedDeviceId", Required = Newtonsoft.Json.Required.Default)]
        public string ManagedDeviceId { get; set; }
    
        /// <summary>
        /// Gets or sets managed device name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "managedDeviceName", Required = Newtonsoft.Json.Required.Default)]
        public string ManagedDeviceName { get; set; }
    
        /// <summary>
        /// Gets or sets tenant display name.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "tenantDisplayName", Required = Newtonsoft.Json.Required.Default)]
        public string TenantDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets tenant id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "tenantId", Required = Newtonsoft.Json.Required.Default)]
        public string TenantId { get; set; }
    
    }
}

