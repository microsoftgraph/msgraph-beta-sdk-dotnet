// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: ComplexType.cs.tt

namespace Microsoft.Graph.ManagedTenants
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Text.Json.Serialization;

    /// <summary>
    /// The type Setting.
    /// </summary>
    [JsonConverter(typeof(Microsoft.Graph.DerivedTypeConverter<Setting>))]
    public partial class Setting
    {

        /// <summary>
        /// Gets or sets displayName.
        /// The display name for the setting. Required. Read-only.
        /// </summary>
        [JsonPropertyName("displayName")]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets jsonValue.
        /// The value for the setting serialized as string of JSON. Required. Read-only.
        /// </summary>
        [JsonPropertyName("jsonValue")]
        public string JsonValue { get; set; }
    
        /// <summary>
        /// Gets or sets overwriteAllowed.
        /// A flag indicating whether the setting can be override existing configurations when applied. Required. Read-only.
        /// </summary>
        [JsonPropertyName("overwriteAllowed")]
        public bool? OverwriteAllowed { get; set; }
    
        /// <summary>
        /// Gets or sets valueType.
        /// The data type for the setting. Possible values are: string, integer, boolean, guid, stringCollection, integerCollection, booleanCollection, guidCollection, unknownFutureValue. Required. Read-only.
        /// </summary>
        [JsonPropertyName("valueType")]
        public ManagementParameterValueType? ValueType { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonPropertyName("@odata.type")]
        public string ODataType { get; set; }
    
    }
}
