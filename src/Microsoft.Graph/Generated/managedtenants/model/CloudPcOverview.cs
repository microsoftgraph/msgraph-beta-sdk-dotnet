// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.ManagedTenants
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Cloud Pc Overview.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class CloudPcOverview : Microsoft.Graph.Entity
    {
    
		///<summary>
		/// The CloudPcOverview constructor
		///</summary>
        public CloudPcOverview()
        {
            this.ODataType = "microsoft.graph.managedTenants.cloudPcOverview";
        }
	
        /// <summary>
        /// Gets or sets last refreshed date time.
        /// Date and time the entity was last updated in the multi-tenant management platform. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastRefreshedDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? LastRefreshedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc connection status failed.
        /// The number of cloud PC connections that have a status of failed. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcConnectionStatusFailed", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcConnectionStatusFailed { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc connection status passed.
        /// The number of cloud PC connections that have a status of passed. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcConnectionStatusPassed", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcConnectionStatusPassed { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc connection status pending.
        /// The number of cloud PC connections that have a status of pending. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcConnectionStatusPending", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcConnectionStatusPending { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc connection status running.
        /// The number of cloud PC connections that have a status of running. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcConnectionStatusRunning", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcConnectionStatusRunning { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc connection status unkown future value.
        /// The number of cloud PC connections that have a status of unknownFutureValue. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcConnectionStatusUnkownFutureValue", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcConnectionStatusUnkownFutureValue { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc status deprovisioning.
        /// The number of cloud PCs that have a status of deprovisioning. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcStatusDeprovisioning", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcStatusDeprovisioning { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc status failed.
        /// The number of cloud PCs that have a status of failed. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcStatusFailed", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcStatusFailed { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc status in grace period.
        /// The number of cloud PCs that have a status of inGracePeriod. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcStatusInGracePeriod", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcStatusInGracePeriod { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc status not provisioned.
        /// The number of cloud PCs that have a status of notProvisioned. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcStatusNotProvisioned", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcStatusNotProvisioned { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc status provisioned.
        /// The number of cloud PCs that have a status of provisioned. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcStatusProvisioned", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcStatusProvisioned { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc status provisioning.
        /// The number of cloud PCs that have a status of provisioning. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcStatusProvisioning", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcStatusProvisioning { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc status unknown.
        /// The number of cloud PCs that have a status of unknown. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcStatusUnknown", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcStatusUnknown { get; set; }
    
        /// <summary>
        /// Gets or sets number of cloud pc status upgrading.
        /// The number of cloud PCs that have a status of upgrading. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "numberOfCloudPcStatusUpgrading", Required = Newtonsoft.Json.Required.Default)]
        public Int32? NumberOfCloudPcStatusUpgrading { get; set; }
    
        /// <summary>
        /// Gets or sets tenant display name.
        /// The display name for the managed tenant. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "tenantDisplayName", Required = Newtonsoft.Json.Required.Default)]
        public string TenantDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets tenant id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "tenantId", Required = Newtonsoft.Json.Required.Default)]
        public string TenantId { get; set; }
    
        /// <summary>
        /// Gets or sets total cloud pc connection status.
        /// The total number of cloud PC connection statuses for the given managed tenant. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "totalCloudPcConnectionStatus", Required = Newtonsoft.Json.Required.Default)]
        public Int32? TotalCloudPcConnectionStatus { get; set; }
    
        /// <summary>
        /// Gets or sets total cloud pc status.
        /// The total number of cloud PC statues for the given managed tenant. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "totalCloudPcStatus", Required = Newtonsoft.Json.Required.Default)]
        public Int32? TotalCloudPcStatus { get; set; }
    
    }
}

