// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.ManagedTenants
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Tenant Tag.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class TenantTag : Microsoft.Graph.Entity
    {
    
		///<summary>
		/// The TenantTag constructor
		///</summary>
        public TenantTag()
        {
            this.ODataType = "microsoft.graph.managedTenants.tenantTag";
        }
	
        /// <summary>
        /// Gets or sets created by user id.
        /// The identifier for the account that created the tenant tag. Required. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "createdByUserId", Required = Newtonsoft.Json.Required.Default)]
        public string CreatedByUserId { get; set; }
    
        /// <summary>
        /// Gets or sets created date time.
        /// The date and time when the tenant tag was created. Required. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "createdDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? CreatedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets deleted date time.
        /// The date and time when the tenant tag was deleted. Required. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deletedDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? DeletedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets description.
        /// The description for the tenant tag. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "description", Required = Newtonsoft.Json.Required.Default)]
        public string Description { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// The display name for the tenant tag. Required. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "displayName", Required = Newtonsoft.Json.Required.Default)]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets last action by user id.
        /// The identifier for the account that lasted on the tenant tag. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastActionByUserId", Required = Newtonsoft.Json.Required.Default)]
        public string LastActionByUserId { get; set; }
    
        /// <summary>
        /// Gets or sets last action date time.
        /// The date and time the last action was performed against the tenant tag. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastActionDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? LastActionDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets tenants.
        /// The collection of managed tenants associated with the tenant tag. Optional.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "tenants", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<TenantInfo> Tenants { get; set; }
    
    }
}

