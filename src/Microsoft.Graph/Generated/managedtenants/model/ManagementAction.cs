// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityType.cs.tt

namespace Microsoft.Graph.ManagedTenants
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Management Action.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class ManagementAction : Microsoft.Graph.Entity
    {
    
		///<summary>
		/// The ManagementAction constructor
		///</summary>
        public ManagementAction()
        {
            this.ODataType = "microsoft.graph.managedTenants.managementAction";
        }
	
        /// <summary>
        /// Gets or sets category.
        /// The category for the management action. Possible values are: custom, devices, identity, unknownFutureValue. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "category", Required = Newtonsoft.Json.Required.Default)]
        public ManagementCategory? Category { get; set; }
    
        /// <summary>
        /// Gets or sets description.
        /// The description for the management action. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "description", Required = Newtonsoft.Json.Required.Default)]
        public string Description { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// The display name for the management action. Optional. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "displayName", Required = Newtonsoft.Json.Required.Default)]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets reference template id.
        /// The reference for the management template used to generate the management action. Required. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "referenceTemplateId", Required = Newtonsoft.Json.Required.Default)]
        public string ReferenceTemplateId { get; set; }
    
        /// <summary>
        /// Gets or sets workload actions.
        /// The collection of workload actions associated with the management action. Required. Read-only.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "workloadActions", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<WorkloadAction> WorkloadActions { get; set; }
    
    }
}

