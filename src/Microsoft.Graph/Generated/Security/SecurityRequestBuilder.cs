// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Graph.Beta.Models.ODataErrors;
using Microsoft.Graph.Beta.Models.Security;
using Microsoft.Graph.Beta.Security.Alerts;
using Microsoft.Graph.Beta.Security.Alerts_v2;
using Microsoft.Graph.Beta.Security.AttackSimulation;
using Microsoft.Graph.Beta.Security.AuditLog;
using Microsoft.Graph.Beta.Security.Cases;
using Microsoft.Graph.Beta.Security.CloudAppSecurityProfiles;
using Microsoft.Graph.Beta.Security.Collaboration;
using Microsoft.Graph.Beta.Security.DomainSecurityProfiles;
using Microsoft.Graph.Beta.Security.FileSecurityProfiles;
using Microsoft.Graph.Beta.Security.HostSecurityProfiles;
using Microsoft.Graph.Beta.Security.Identities;
using Microsoft.Graph.Beta.Security.Incidents;
using Microsoft.Graph.Beta.Security.InformationProtection;
using Microsoft.Graph.Beta.Security.IpSecurityProfiles;
using Microsoft.Graph.Beta.Security.Labels;
using Microsoft.Graph.Beta.Security.MicrosoftGraphSecurityRunHuntingQuery;
using Microsoft.Graph.Beta.Security.Partner;
using Microsoft.Graph.Beta.Security.ProviderTenantSettings;
using Microsoft.Graph.Beta.Security.Rules;
using Microsoft.Graph.Beta.Security.SecureScoreControlProfiles;
using Microsoft.Graph.Beta.Security.SecureScores;
using Microsoft.Graph.Beta.Security.SecurityActions;
using Microsoft.Graph.Beta.Security.SubjectRightsRequests;
using Microsoft.Graph.Beta.Security.ThreatIntelligence;
using Microsoft.Graph.Beta.Security.ThreatSubmission;
using Microsoft.Graph.Beta.Security.TiIndicators;
using Microsoft.Graph.Beta.Security.TriggerTypes;
using Microsoft.Graph.Beta.Security.Triggers;
using Microsoft.Graph.Beta.Security.UserSecurityProfiles;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Microsoft.Graph.Beta.Security
{
    /// <summary>
    /// Provides operations to manage the security singleton.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class SecurityRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Provides operations to manage the alerts property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.Alerts.AlertsRequestBuilder Alerts
        {
            get => new global::Microsoft.Graph.Beta.Security.Alerts.AlertsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the alerts_v2 property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.Alerts_v2.Alerts_v2RequestBuilder Alerts_v2
        {
            get => new global::Microsoft.Graph.Beta.Security.Alerts_v2.Alerts_v2RequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the attackSimulation property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.AttackSimulation.AttackSimulationRequestBuilder AttackSimulation
        {
            get => new global::Microsoft.Graph.Beta.Security.AttackSimulation.AttackSimulationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the auditLog property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.AuditLog.AuditLogRequestBuilder AuditLog
        {
            get => new global::Microsoft.Graph.Beta.Security.AuditLog.AuditLogRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the cases property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.Cases.CasesRequestBuilder Cases
        {
            get => new global::Microsoft.Graph.Beta.Security.Cases.CasesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the cloudAppSecurityProfiles property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.CloudAppSecurityProfiles.CloudAppSecurityProfilesRequestBuilder CloudAppSecurityProfiles
        {
            get => new global::Microsoft.Graph.Beta.Security.CloudAppSecurityProfiles.CloudAppSecurityProfilesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the collaboration property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.Collaboration.CollaborationRequestBuilder Collaboration
        {
            get => new global::Microsoft.Graph.Beta.Security.Collaboration.CollaborationRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the domainSecurityProfiles property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.DomainSecurityProfiles.DomainSecurityProfilesRequestBuilder DomainSecurityProfiles
        {
            get => new global::Microsoft.Graph.Beta.Security.DomainSecurityProfiles.DomainSecurityProfilesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the fileSecurityProfiles property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.FileSecurityProfiles.FileSecurityProfilesRequestBuilder FileSecurityProfiles
        {
            get => new global::Microsoft.Graph.Beta.Security.FileSecurityProfiles.FileSecurityProfilesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the hostSecurityProfiles property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.HostSecurityProfiles.HostSecurityProfilesRequestBuilder HostSecurityProfiles
        {
            get => new global::Microsoft.Graph.Beta.Security.HostSecurityProfiles.HostSecurityProfilesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the identities property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.Identities.IdentitiesRequestBuilder Identities
        {
            get => new global::Microsoft.Graph.Beta.Security.Identities.IdentitiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the incidents property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.Incidents.IncidentsRequestBuilder Incidents
        {
            get => new global::Microsoft.Graph.Beta.Security.Incidents.IncidentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the informationProtection property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.InformationProtection.InformationProtectionRequestBuilder InformationProtection
        {
            get => new global::Microsoft.Graph.Beta.Security.InformationProtection.InformationProtectionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the ipSecurityProfiles property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.IpSecurityProfiles.IpSecurityProfilesRequestBuilder IpSecurityProfiles
        {
            get => new global::Microsoft.Graph.Beta.Security.IpSecurityProfiles.IpSecurityProfilesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the labels property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.Labels.LabelsRequestBuilder Labels
        {
            get => new global::Microsoft.Graph.Beta.Security.Labels.LabelsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the runHuntingQuery method.</summary>
        public global::Microsoft.Graph.Beta.Security.MicrosoftGraphSecurityRunHuntingQuery.MicrosoftGraphSecurityRunHuntingQueryRequestBuilder MicrosoftGraphSecurityRunHuntingQuery
        {
            get => new global::Microsoft.Graph.Beta.Security.MicrosoftGraphSecurityRunHuntingQuery.MicrosoftGraphSecurityRunHuntingQueryRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the partner property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.Partner.PartnerRequestBuilder Partner
        {
            get => new global::Microsoft.Graph.Beta.Security.Partner.PartnerRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the providerTenantSettings property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.ProviderTenantSettings.ProviderTenantSettingsRequestBuilder ProviderTenantSettings
        {
            get => new global::Microsoft.Graph.Beta.Security.ProviderTenantSettings.ProviderTenantSettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the rules property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.Rules.RulesRequestBuilder Rules
        {
            get => new global::Microsoft.Graph.Beta.Security.Rules.RulesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the secureScoreControlProfiles property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.SecureScoreControlProfiles.SecureScoreControlProfilesRequestBuilder SecureScoreControlProfiles
        {
            get => new global::Microsoft.Graph.Beta.Security.SecureScoreControlProfiles.SecureScoreControlProfilesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the secureScores property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.SecureScores.SecureScoresRequestBuilder SecureScores
        {
            get => new global::Microsoft.Graph.Beta.Security.SecureScores.SecureScoresRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the securityActions property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.SecurityActions.SecurityActionsRequestBuilder SecurityActions
        {
            get => new global::Microsoft.Graph.Beta.Security.SecurityActions.SecurityActionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the subjectRightsRequests property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.SubjectRightsRequests.SubjectRightsRequestsRequestBuilder SubjectRightsRequests
        {
            get => new global::Microsoft.Graph.Beta.Security.SubjectRightsRequests.SubjectRightsRequestsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the threatIntelligence property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.ThreatIntelligence.ThreatIntelligenceRequestBuilder ThreatIntelligence
        {
            get => new global::Microsoft.Graph.Beta.Security.ThreatIntelligence.ThreatIntelligenceRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the threatSubmission property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.ThreatSubmission.ThreatSubmissionRequestBuilder ThreatSubmission
        {
            get => new global::Microsoft.Graph.Beta.Security.ThreatSubmission.ThreatSubmissionRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the tiIndicators property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.TiIndicators.TiIndicatorsRequestBuilder TiIndicators
        {
            get => new global::Microsoft.Graph.Beta.Security.TiIndicators.TiIndicatorsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the triggers property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.Triggers.TriggersRequestBuilder Triggers
        {
            get => new global::Microsoft.Graph.Beta.Security.Triggers.TriggersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the triggerTypes property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.TriggerTypes.TriggerTypesRequestBuilder TriggerTypes
        {
            get => new global::Microsoft.Graph.Beta.Security.TriggerTypes.TriggerTypesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the userSecurityProfiles property of the microsoft.graph.security entity.</summary>
        public global::Microsoft.Graph.Beta.Security.UserSecurityProfiles.UserSecurityProfilesRequestBuilder UserSecurityProfiles
        {
            get => new global::Microsoft.Graph.Beta.Security.UserSecurityProfiles.UserSecurityProfilesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Security.SecurityRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SecurityRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/security{?%24expand,%24select}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Security.SecurityRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SecurityRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/security{?%24expand,%24select}", rawUrl)
        {
        }
        /// <summary>
        /// Get security
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Security.Security"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Microsoft.Graph.Beta.Models.Security.Security?> GetAsync(Action<RequestConfiguration<global::Microsoft.Graph.Beta.Security.SecurityRequestBuilder.SecurityRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Microsoft.Graph.Beta.Models.Security.Security> GetAsync(Action<RequestConfiguration<global::Microsoft.Graph.Beta.Security.SecurityRequestBuilder.SecurityRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Microsoft.Graph.Beta.Models.Security.Security>(requestInfo, global::Microsoft.Graph.Beta.Models.Security.Security.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Update security
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Security.Security"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Microsoft.Graph.Beta.Models.Security.Security?> PatchAsync(global::Microsoft.Graph.Beta.Models.Security.Security body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Microsoft.Graph.Beta.Models.Security.Security> PatchAsync(global::Microsoft.Graph.Beta.Models.Security.Security body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPatchRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Microsoft.Graph.Beta.Models.Security.Security>(requestInfo, global::Microsoft.Graph.Beta.Models.Security.Security.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Get security
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Microsoft.Graph.Beta.Security.SecurityRequestBuilder.SecurityRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Microsoft.Graph.Beta.Security.SecurityRequestBuilder.SecurityRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Update security
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPatchRequestInformation(global::Microsoft.Graph.Beta.Models.Security.Security body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPatchRequestInformation(global::Microsoft.Graph.Beta.Models.Security.Security body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PATCH, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Security.SecurityRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Microsoft.Graph.Beta.Security.SecurityRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Microsoft.Graph.Beta.Security.SecurityRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Get security
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class SecurityRequestBuilderGetQueryParameters 
        {
            /// <summary>Expand related entities</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("%24expand")]
            public string[]? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("%24expand")]
            public string[] Expand { get; set; }
#endif
            /// <summary>Select properties to be returned</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("%24select")]
            public string[]? Select { get; set; }
#nullable restore
#else
            [QueryParameter("%24select")]
            public string[] Select { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class SecurityRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Microsoft.Graph.Beta.Security.SecurityRequestBuilder.SecurityRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class SecurityRequestBuilderPatchRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
