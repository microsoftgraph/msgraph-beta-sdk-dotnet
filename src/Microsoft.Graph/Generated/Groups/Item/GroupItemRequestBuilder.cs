// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Graph.Beta.Groups.Item.AcceptedSenders;
using Microsoft.Graph.Beta.Groups.Item.AddFavorite;
using Microsoft.Graph.Beta.Groups.Item.AppRoleAssignments;
using Microsoft.Graph.Beta.Groups.Item.AssignLicense;
using Microsoft.Graph.Beta.Groups.Item.Calendar;
using Microsoft.Graph.Beta.Groups.Item.CalendarView;
using Microsoft.Graph.Beta.Groups.Item.CheckGrantedPermissionsForApp;
using Microsoft.Graph.Beta.Groups.Item.CheckMemberGroups;
using Microsoft.Graph.Beta.Groups.Item.CheckMemberObjects;
using Microsoft.Graph.Beta.Groups.Item.Conversations;
using Microsoft.Graph.Beta.Groups.Item.CreatedOnBehalfOf;
using Microsoft.Graph.Beta.Groups.Item.DeletePasswordSingleSignOnCredentials;
using Microsoft.Graph.Beta.Groups.Item.Drive;
using Microsoft.Graph.Beta.Groups.Item.Drives;
using Microsoft.Graph.Beta.Groups.Item.Endpoints;
using Microsoft.Graph.Beta.Groups.Item.EvaluateDynamicMembership;
using Microsoft.Graph.Beta.Groups.Item.Events;
using Microsoft.Graph.Beta.Groups.Item.Extensions;
using Microsoft.Graph.Beta.Groups.Item.GetMemberGroups;
using Microsoft.Graph.Beta.Groups.Item.GetMemberObjects;
using Microsoft.Graph.Beta.Groups.Item.GetPasswordSingleSignOnCredentials;
using Microsoft.Graph.Beta.Groups.Item.GroupLifecyclePolicies;
using Microsoft.Graph.Beta.Groups.Item.MemberOf;
using Microsoft.Graph.Beta.Groups.Item.Members;
using Microsoft.Graph.Beta.Groups.Item.MembersWithLicenseErrors;
using Microsoft.Graph.Beta.Groups.Item.Onenote;
using Microsoft.Graph.Beta.Groups.Item.Owners;
using Microsoft.Graph.Beta.Groups.Item.PermissionGrants;
using Microsoft.Graph.Beta.Groups.Item.Photo;
using Microsoft.Graph.Beta.Groups.Item.Photos;
using Microsoft.Graph.Beta.Groups.Item.Planner;
using Microsoft.Graph.Beta.Groups.Item.RejectedSenders;
using Microsoft.Graph.Beta.Groups.Item.RemoveFavorite;
using Microsoft.Graph.Beta.Groups.Item.Renew;
using Microsoft.Graph.Beta.Groups.Item.ResetUnseenCount;
using Microsoft.Graph.Beta.Groups.Item.Restore;
using Microsoft.Graph.Beta.Groups.Item.RetryServiceProvisioning;
using Microsoft.Graph.Beta.Groups.Item.ServiceProvisioningErrors;
using Microsoft.Graph.Beta.Groups.Item.Settings;
using Microsoft.Graph.Beta.Groups.Item.Sites;
using Microsoft.Graph.Beta.Groups.Item.SubscribeByMail;
using Microsoft.Graph.Beta.Groups.Item.Team;
using Microsoft.Graph.Beta.Groups.Item.Threads;
using Microsoft.Graph.Beta.Groups.Item.TransitiveMemberOf;
using Microsoft.Graph.Beta.Groups.Item.TransitiveMembers;
using Microsoft.Graph.Beta.Groups.Item.UnsubscribeByMail;
using Microsoft.Graph.Beta.Groups.Item.ValidateProperties;
using Microsoft.Graph.Beta.Models.ODataErrors;
using Microsoft.Graph.Beta.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace Microsoft.Graph.Beta.Groups.Item
{
    /// <summary>
    /// Provides operations to manage the collection of group entities.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class GroupItemRequestBuilder : BaseRequestBuilder
    {
        /// <summary>Provides operations to manage the acceptedSenders property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.AcceptedSenders.AcceptedSendersRequestBuilder AcceptedSenders
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.AcceptedSenders.AcceptedSendersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the addFavorite method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.AddFavorite.AddFavoriteRequestBuilder AddFavorite
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.AddFavorite.AddFavoriteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the appRoleAssignments property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.AppRoleAssignments.AppRoleAssignmentsRequestBuilder AppRoleAssignments
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.AppRoleAssignments.AppRoleAssignmentsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the assignLicense method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.AssignLicense.AssignLicenseRequestBuilder AssignLicense
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.AssignLicense.AssignLicenseRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the calendar property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Calendar.CalendarRequestBuilder Calendar
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Calendar.CalendarRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the calendarView property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.CalendarView.CalendarViewRequestBuilder CalendarView
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.CalendarView.CalendarViewRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the checkGrantedPermissionsForApp method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.CheckGrantedPermissionsForApp.CheckGrantedPermissionsForAppRequestBuilder CheckGrantedPermissionsForApp
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.CheckGrantedPermissionsForApp.CheckGrantedPermissionsForAppRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the checkMemberGroups method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.CheckMemberGroups.CheckMemberGroupsRequestBuilder CheckMemberGroups
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.CheckMemberGroups.CheckMemberGroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the checkMemberObjects method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.CheckMemberObjects.CheckMemberObjectsRequestBuilder CheckMemberObjects
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.CheckMemberObjects.CheckMemberObjectsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the conversations property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Conversations.ConversationsRequestBuilder Conversations
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Conversations.ConversationsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the createdOnBehalfOf property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.CreatedOnBehalfOf.CreatedOnBehalfOfRequestBuilder CreatedOnBehalfOf
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.CreatedOnBehalfOf.CreatedOnBehalfOfRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the deletePasswordSingleSignOnCredentials method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.DeletePasswordSingleSignOnCredentials.DeletePasswordSingleSignOnCredentialsRequestBuilder DeletePasswordSingleSignOnCredentials
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.DeletePasswordSingleSignOnCredentials.DeletePasswordSingleSignOnCredentialsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the drive property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Drive.DriveRequestBuilder Drive
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Drive.DriveRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the drives property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Drives.DrivesRequestBuilder Drives
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Drives.DrivesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the endpoints property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Endpoints.EndpointsRequestBuilder Endpoints
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Endpoints.EndpointsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the evaluateDynamicMembership method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.EvaluateDynamicMembership.EvaluateDynamicMembershipRequestBuilder EvaluateDynamicMembership
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.EvaluateDynamicMembership.EvaluateDynamicMembershipRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the events property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Events.EventsRequestBuilder Events
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Events.EventsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the extensions property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Extensions.ExtensionsRequestBuilder Extensions
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Extensions.ExtensionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getMemberGroups method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.GetMemberGroups.GetMemberGroupsRequestBuilder GetMemberGroups
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.GetMemberGroups.GetMemberGroupsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getMemberObjects method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.GetMemberObjects.GetMemberObjectsRequestBuilder GetMemberObjects
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.GetMemberObjects.GetMemberObjectsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the getPasswordSingleSignOnCredentials method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.GetPasswordSingleSignOnCredentials.GetPasswordSingleSignOnCredentialsRequestBuilder GetPasswordSingleSignOnCredentials
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.GetPasswordSingleSignOnCredentials.GetPasswordSingleSignOnCredentialsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the groupLifecyclePolicies property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.GroupLifecyclePolicies.GroupLifecyclePoliciesRequestBuilder GroupLifecyclePolicies
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.GroupLifecyclePolicies.GroupLifecyclePoliciesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the memberOf property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.MemberOf.MemberOfRequestBuilder MemberOf
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.MemberOf.MemberOfRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the members property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Members.MembersRequestBuilder Members
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Members.MembersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the membersWithLicenseErrors property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.MembersWithLicenseErrors.MembersWithLicenseErrorsRequestBuilder MembersWithLicenseErrors
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.MembersWithLicenseErrors.MembersWithLicenseErrorsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the onenote property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Onenote.OnenoteRequestBuilder Onenote
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Onenote.OnenoteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the owners property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Owners.OwnersRequestBuilder Owners
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Owners.OwnersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the permissionGrants property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.PermissionGrants.PermissionGrantsRequestBuilder PermissionGrants
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.PermissionGrants.PermissionGrantsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the photo property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Photo.PhotoRequestBuilder Photo
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Photo.PhotoRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the photos property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Photos.PhotosRequestBuilder Photos
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Photos.PhotosRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the planner property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Planner.PlannerRequestBuilder Planner
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Planner.PlannerRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the rejectedSenders property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.RejectedSenders.RejectedSendersRequestBuilder RejectedSenders
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.RejectedSenders.RejectedSendersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the removeFavorite method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.RemoveFavorite.RemoveFavoriteRequestBuilder RemoveFavorite
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.RemoveFavorite.RemoveFavoriteRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the renew method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Renew.RenewRequestBuilder Renew
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Renew.RenewRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the resetUnseenCount method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.ResetUnseenCount.ResetUnseenCountRequestBuilder ResetUnseenCount
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.ResetUnseenCount.ResetUnseenCountRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the restore method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Restore.RestoreRequestBuilder Restore
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Restore.RestoreRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the retryServiceProvisioning method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.RetryServiceProvisioning.RetryServiceProvisioningRequestBuilder RetryServiceProvisioning
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.RetryServiceProvisioning.RetryServiceProvisioningRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The serviceProvisioningErrors property</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.ServiceProvisioningErrors.ServiceProvisioningErrorsRequestBuilder ServiceProvisioningErrors
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.ServiceProvisioningErrors.ServiceProvisioningErrorsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the settings property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Settings.SettingsRequestBuilder Settings
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Settings.SettingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the sites property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Sites.SitesRequestBuilder Sites
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Sites.SitesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the subscribeByMail method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.SubscribeByMail.SubscribeByMailRequestBuilder SubscribeByMail
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.SubscribeByMail.SubscribeByMailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the team property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Team.TeamRequestBuilder Team
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Team.TeamRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the threads property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.Threads.ThreadsRequestBuilder Threads
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.Threads.ThreadsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the transitiveMemberOf property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.TransitiveMemberOf.TransitiveMemberOfRequestBuilder TransitiveMemberOf
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.TransitiveMemberOf.TransitiveMemberOfRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to manage the transitiveMembers property of the microsoft.graph.group entity.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.TransitiveMembers.TransitiveMembersRequestBuilder TransitiveMembers
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.TransitiveMembers.TransitiveMembersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the unsubscribeByMail method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.UnsubscribeByMail.UnsubscribeByMailRequestBuilder UnsubscribeByMail
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.UnsubscribeByMail.UnsubscribeByMailRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Provides operations to call the validateProperties method.</summary>
        public global::Microsoft.Graph.Beta.Groups.Item.ValidateProperties.ValidatePropertiesRequestBuilder ValidateProperties
        {
            get => new global::Microsoft.Graph.Beta.Groups.Item.ValidateProperties.ValidatePropertiesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Groups.Item.GroupItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public GroupItemRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/groups/{group%2Did}{?%24expand,%24select}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::Microsoft.Graph.Beta.Groups.Item.GroupItemRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public GroupItemRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/groups/{group%2Did}{?%24expand,%24select}", rawUrl)
        {
        }
        /// <summary>
        /// Delete a group. When deleted, Microsoft 365 groups are moved to a temporary container and can be restored within 30 days. After that time, they are permanently deleted. This isn&apos;t applicable to Security groups and Distribution groups that are permanently deleted immediately. To learn more, see deletedItems.
        /// Find more info here <see href="https://learn.microsoft.com/graph/api/group-delete?view=graph-rest-beta" />
        /// </summary>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task DeleteAsync(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task DeleteAsync(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToDeleteRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            await RequestAdapter.SendNoContentAsync(requestInfo, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Get the properties and relationships of a group object. This operation returns by default only a subset of all the available properties, as noted in the Properties section. To get properties that aren&apos;t_ returned by default, specify them in a $select OData query option. The hasMembersWithLicenseErrors and isArchived properties are an exception and aren&apos;t returned in the $select query. Because the group resource supports extensions, you can also use the GET operation to get custom properties and extension data in a group instance.
        /// Find more info here <see href="https://learn.microsoft.com/graph/api/group-get?view=graph-rest-beta" />
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Group"/></returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Microsoft.Graph.Beta.Models.Group?> GetAsync(Action<RequestConfiguration<global::Microsoft.Graph.Beta.Groups.Item.GroupItemRequestBuilder.GroupItemRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Microsoft.Graph.Beta.Models.Group> GetAsync(Action<RequestConfiguration<global::Microsoft.Graph.Beta.Groups.Item.GroupItemRequestBuilder.GroupItemRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Microsoft.Graph.Beta.Models.Group>(requestInfo, global::Microsoft.Graph.Beta.Models.Group.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Create a new group object if it doesn&apos;t exist, or update the properties of an existing group object.You can create or update the following types of group: By default, this operation returns only a subset of the properties for each group. For a list of properties that are returned by default, see the Properties section of the group resource. To get properties that are not returned by default, do a GET operation and specify the properties in a $select OData query option.
        /// Find more info here <see href="https://learn.microsoft.com/graph/api/group-upsert?view=graph-rest-beta" />
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Models.Group"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
        /// <exception cref="global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError">When receiving a 4XX or 5XX status code</exception>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<global::Microsoft.Graph.Beta.Models.Group?> PatchAsync(global::Microsoft.Graph.Beta.Models.Group body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<global::Microsoft.Graph.Beta.Models.Group> PatchAsync(global::Microsoft.Graph.Beta.Models.Group body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = ToPatchRequestInformation(body, requestConfiguration);
            var errorMapping = new Dictionary<string, ParsableFactory<IParsable>>
            {
                { "XXX", global::Microsoft.Graph.Beta.Models.ODataErrors.ODataError.CreateFromDiscriminatorValue },
            };
            return await RequestAdapter.SendAsync<global::Microsoft.Graph.Beta.Models.Group>(requestInfo, global::Microsoft.Graph.Beta.Models.Group.CreateFromDiscriminatorValue, errorMapping, cancellationToken).ConfigureAwait(false);
        }
        /// <summary>
        /// Delete a group. When deleted, Microsoft 365 groups are moved to a temporary container and can be restored within 30 days. After that time, they are permanently deleted. This isn&apos;t applicable to Security groups and Distribution groups that are permanently deleted immediately. To learn more, see deletedItems.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToDeleteRequestInformation(Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.DELETE, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Get the properties and relationships of a group object. This operation returns by default only a subset of all the available properties, as noted in the Properties section. To get properties that aren&apos;t_ returned by default, specify them in a $select OData query option. The hasMembersWithLicenseErrors and isArchived properties are an exception and aren&apos;t returned in the $select query. Because the group resource supports extensions, you can also use the GET operation to get custom properties and extension data in a group instance.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Microsoft.Graph.Beta.Groups.Item.GroupItemRequestBuilder.GroupItemRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::Microsoft.Graph.Beta.Groups.Item.GroupItemRequestBuilder.GroupItemRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Create a new group object if it doesn&apos;t exist, or update the properties of an existing group object.You can create or update the following types of group: By default, this operation returns only a subset of the properties for each group. For a list of properties that are returned by default, see the Properties section of the group resource. To get properties that are not returned by default, do a GET operation and specify the properties in a $select OData query option.
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="body">The request body</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToPatchRequestInformation(global::Microsoft.Graph.Beta.Models.Group body, Action<RequestConfiguration<DefaultQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToPatchRequestInformation(global::Microsoft.Graph.Beta.Models.Group body, Action<RequestConfiguration<DefaultQueryParameters>> requestConfiguration = default)
        {
#endif
            _ = body ?? throw new ArgumentNullException(nameof(body));
            var requestInfo = new RequestInformation(Method.PATCH, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            requestInfo.SetContentFromParsable(RequestAdapter, "application/json", body);
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::Microsoft.Graph.Beta.Groups.Item.GroupItemRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::Microsoft.Graph.Beta.Groups.Item.GroupItemRequestBuilder WithUrl(string rawUrl)
        {
            return new global::Microsoft.Graph.Beta.Groups.Item.GroupItemRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class GroupItemRequestBuilderDeleteRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
        /// <summary>
        /// Get the properties and relationships of a group object. This operation returns by default only a subset of all the available properties, as noted in the Properties section. To get properties that aren&apos;t_ returned by default, specify them in a $select OData query option. The hasMembersWithLicenseErrors and isArchived properties are an exception and aren&apos;t returned in the $select query. Because the group resource supports extensions, you can also use the GET operation to get custom properties and extension data in a group instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class GroupItemRequestBuilderGetQueryParameters 
        {
            /// <summary>Expand related entities</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("%24expand")]
            public string[]? Expand { get; set; }
#nullable restore
#else
            [QueryParameter("%24expand")]
            public string[] Expand { get; set; }
#endif
            /// <summary>Select properties to be returned</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("%24select")]
            public string[]? Select { get; set; }
#nullable restore
#else
            [QueryParameter("%24select")]
            public string[] Select { get; set; }
#endif
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class GroupItemRequestBuilderGetRequestConfiguration : RequestConfiguration<global::Microsoft.Graph.Beta.Groups.Item.GroupItemRequestBuilder.GroupItemRequestBuilderGetQueryParameters>
        {
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class GroupItemRequestBuilderPatchRequestConfiguration : RequestConfiguration<DefaultQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
