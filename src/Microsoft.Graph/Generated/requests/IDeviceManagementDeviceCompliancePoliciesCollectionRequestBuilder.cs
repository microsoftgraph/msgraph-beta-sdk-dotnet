// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: IEntityCollectionRequestBuilder.cs.tt
namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// The interface IDeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder.
    /// </summary>
    public partial interface IDeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder : IBaseRequestBuilder
    {
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        IDeviceManagementDeviceCompliancePoliciesCollectionRequest Request();

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        IDeviceManagementDeviceCompliancePoliciesCollectionRequest Request(IEnumerable<Option> options);

        /// <summary>
        /// Gets an <see cref="IDeviceCompliancePolicyRequestBuilder"/> for the specified DeviceCompliancePolicy.
        /// </summary>
        /// <param name="id">The ID for the DeviceCompliancePolicy.</param>
        /// <returns>The <see cref="IDeviceCompliancePolicyRequestBuilder"/>.</returns>
        IDeviceCompliancePolicyRequestBuilder this[string id] { get; }

        /// <summary>
        /// Gets the request builder for DeviceCompliancePolicyHasPayloadLinks.
        /// </summary>
        /// <returns>The <see cref="IDeviceCompliancePolicyHasPayloadLinksRequestBuilder"/>.</returns>
        IDeviceCompliancePolicyHasPayloadLinksRequestBuilder HasPayloadLinks(
            IEnumerable<string> payloadIds = null);

        /// <summary>
        /// Gets the request builder for DeviceCompliancePolicyGetDevicesScheduledToRetire.
        /// </summary>
        /// <returns>The <see cref="IDeviceCompliancePolicyGetDevicesScheduledToRetireRequestBuilder"/>.</returns>
        IDeviceCompliancePolicyGetDevicesScheduledToRetireRequestBuilder GetDevicesScheduledToRetire();

        /// <summary>
        /// Gets the request builder for DeviceCompliancePolicyRefreshDeviceComplianceReportSummarization.
        /// </summary>
        /// <returns>The <see cref="IDeviceCompliancePolicyRefreshDeviceComplianceReportSummarizationRequestBuilder"/>.</returns>
        IDeviceCompliancePolicyRefreshDeviceComplianceReportSummarizationRequestBuilder RefreshDeviceComplianceReportSummarization();

        /// <summary>
        /// Gets the request builder for DeviceCompliancePolicySetScheduledRetireState.
        /// </summary>
        /// <returns>The <see cref="IDeviceCompliancePolicySetScheduledRetireStateRequestBuilder"/>.</returns>
        IDeviceCompliancePolicySetScheduledRetireStateRequestBuilder SetScheduledRetireState(
            ScheduledRetireState state,
            IEnumerable<string> managedDeviceIds = null);

        /// <summary>
        /// Gets the request builder for DeviceCompliancePolicyValidateComplianceScript.
        /// </summary>
        /// <returns>The <see cref="IDeviceCompliancePolicyValidateComplianceScriptRequestBuilder"/>.</returns>
        IDeviceCompliancePolicyValidateComplianceScriptRequestBuilder ValidateComplianceScript(
            DeviceCompliancePolicyScript deviceCompliancePolicyScript = null);
    }
}
