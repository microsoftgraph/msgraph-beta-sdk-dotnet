// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type VirtualEndpointRequestBuilder.
    /// </summary>
    public partial class VirtualEndpointRequestBuilder : EntityRequestBuilder, IVirtualEndpointRequestBuilder
    {

        /// <summary>
        /// Constructs a new VirtualEndpointRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public VirtualEndpointRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IVirtualEndpointRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IVirtualEndpointRequest Request(IEnumerable<Option> options)
        {
            return new VirtualEndpointRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for CloudPCs.
        /// </summary>
        /// <returns>The <see cref="IVirtualEndpointCloudPCsCollectionRequestBuilder"/>.</returns>
        public IVirtualEndpointCloudPCsCollectionRequestBuilder CloudPCs
        {
            get
            {
                return new VirtualEndpointCloudPCsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("cloudPCs"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceImages.
        /// </summary>
        /// <returns>The <see cref="IVirtualEndpointDeviceImagesCollectionRequestBuilder"/>.</returns>
        public IVirtualEndpointDeviceImagesCollectionRequestBuilder DeviceImages
        {
            get
            {
                return new VirtualEndpointDeviceImagesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceImages"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for OnPremisesConnections.
        /// </summary>
        /// <returns>The <see cref="IVirtualEndpointOnPremisesConnectionsCollectionRequestBuilder"/>.</returns>
        public IVirtualEndpointOnPremisesConnectionsCollectionRequestBuilder OnPremisesConnections
        {
            get
            {
                return new VirtualEndpointOnPremisesConnectionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("onPremisesConnections"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ProvisioningPolicies.
        /// </summary>
        /// <returns>The <see cref="IVirtualEndpointProvisioningPoliciesCollectionRequestBuilder"/>.</returns>
        public IVirtualEndpointProvisioningPoliciesCollectionRequestBuilder ProvisioningPolicies
        {
            get
            {
                return new VirtualEndpointProvisioningPoliciesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("provisioningPolicies"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for VirtualEndpointGetEffectivePermissions.
        /// </summary>
        /// <returns>The <see cref="IVirtualEndpointGetEffectivePermissionsRequestBuilder"/>.</returns>
        public IVirtualEndpointGetEffectivePermissionsRequestBuilder GetEffectivePermissions()
        {
            return new VirtualEndpointGetEffectivePermissionsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEffectivePermissions"),
                this.Client);
        }
    
    }
}
