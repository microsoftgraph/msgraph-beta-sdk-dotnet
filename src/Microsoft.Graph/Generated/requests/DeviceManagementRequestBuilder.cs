// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type DeviceManagementRequestBuilder.
    /// </summary>
    public partial class DeviceManagementRequestBuilder : EntityRequestBuilder, IDeviceManagementRequestBuilder
    {

        /// <summary>
        /// Constructs a new DeviceManagementRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public DeviceManagementRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IDeviceManagementRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IDeviceManagementRequest Request(IEnumerable<Option> options)
        {
            return new DeviceManagementRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for AndroidDeviceOwnerEnrollmentProfiles.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementAndroidDeviceOwnerEnrollmentProfilesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementAndroidDeviceOwnerEnrollmentProfilesCollectionRequestBuilder AndroidDeviceOwnerEnrollmentProfiles
        {
            get
            {
                return new DeviceManagementAndroidDeviceOwnerEnrollmentProfilesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("androidDeviceOwnerEnrollmentProfiles"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for VirtualEndpoint.
        /// </summary>
        /// <returns>The <see cref="IVirtualEndpointRequestBuilder"/>.</returns>
        public IVirtualEndpointRequestBuilder VirtualEndpoint
        {
            get
            {
                return new VirtualEndpointRequestBuilder(this.AppendSegmentToRequestUrl("virtualEndpoint"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for AndroidForWorkAppConfigurationSchemas.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementAndroidForWorkAppConfigurationSchemasCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementAndroidForWorkAppConfigurationSchemasCollectionRequestBuilder AndroidForWorkAppConfigurationSchemas
        {
            get
            {
                return new DeviceManagementAndroidForWorkAppConfigurationSchemasCollectionRequestBuilder(this.AppendSegmentToRequestUrl("androidForWorkAppConfigurationSchemas"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for AndroidForWorkEnrollmentProfiles.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementAndroidForWorkEnrollmentProfilesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementAndroidForWorkEnrollmentProfilesCollectionRequestBuilder AndroidForWorkEnrollmentProfiles
        {
            get
            {
                return new DeviceManagementAndroidForWorkEnrollmentProfilesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("androidForWorkEnrollmentProfiles"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for AndroidForWorkSettings.
        /// </summary>
        /// <returns>The <see cref="IAndroidForWorkSettingsRequestBuilder"/>.</returns>
        public IAndroidForWorkSettingsRequestBuilder AndroidForWorkSettings
        {
            get
            {
                return new AndroidForWorkSettingsRequestBuilder(this.AppendSegmentToRequestUrl("androidForWorkSettings"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for AndroidManagedStoreAccountEnterpriseSettings.
        /// </summary>
        /// <returns>The <see cref="IAndroidManagedStoreAccountEnterpriseSettingsRequestBuilder"/>.</returns>
        public IAndroidManagedStoreAccountEnterpriseSettingsRequestBuilder AndroidManagedStoreAccountEnterpriseSettings
        {
            get
            {
                return new AndroidManagedStoreAccountEnterpriseSettingsRequestBuilder(this.AppendSegmentToRequestUrl("androidManagedStoreAccountEnterpriseSettings"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for AndroidManagedStoreAppConfigurationSchemas.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementAndroidManagedStoreAppConfigurationSchemasCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementAndroidManagedStoreAppConfigurationSchemasCollectionRequestBuilder AndroidManagedStoreAppConfigurationSchemas
        {
            get
            {
                return new DeviceManagementAndroidManagedStoreAppConfigurationSchemasCollectionRequestBuilder(this.AppendSegmentToRequestUrl("androidManagedStoreAppConfigurationSchemas"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for AuditEvents.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementAuditEventsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementAuditEventsCollectionRequestBuilder AuditEvents
        {
            get
            {
                return new DeviceManagementAuditEventsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("auditEvents"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for AssignmentFilters.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementAssignmentFiltersCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementAssignmentFiltersCollectionRequestBuilder AssignmentFilters
        {
            get
            {
                return new DeviceManagementAssignmentFiltersCollectionRequestBuilder(this.AppendSegmentToRequestUrl("assignmentFilters"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for TermsAndConditions.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementTermsAndConditionsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementTermsAndConditionsCollectionRequestBuilder TermsAndConditions
        {
            get
            {
                return new DeviceManagementTermsAndConditionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("termsAndConditions"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for AdvancedThreatProtectionOnboardingStateSummary.
        /// </summary>
        /// <returns>The <see cref="IAdvancedThreatProtectionOnboardingStateSummaryRequestBuilder"/>.</returns>
        public IAdvancedThreatProtectionOnboardingStateSummaryRequestBuilder AdvancedThreatProtectionOnboardingStateSummary
        {
            get
            {
                return new AdvancedThreatProtectionOnboardingStateSummaryRequestBuilder(this.AppendSegmentToRequestUrl("advancedThreatProtectionOnboardingStateSummary"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for CartToClassAssociations.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementCartToClassAssociationsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementCartToClassAssociationsCollectionRequestBuilder CartToClassAssociations
        {
            get
            {
                return new DeviceManagementCartToClassAssociationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("cartToClassAssociations"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceCompliancePolicies.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder DeviceCompliancePolicies
        {
            get
            {
                return new DeviceManagementDeviceCompliancePoliciesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceCompliancePolicies"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceCompliancePolicyDeviceStateSummary.
        /// </summary>
        /// <returns>The <see cref="IDeviceCompliancePolicyDeviceStateSummaryRequestBuilder"/>.</returns>
        public IDeviceCompliancePolicyDeviceStateSummaryRequestBuilder DeviceCompliancePolicyDeviceStateSummary
        {
            get
            {
                return new DeviceCompliancePolicyDeviceStateSummaryRequestBuilder(this.AppendSegmentToRequestUrl("deviceCompliancePolicyDeviceStateSummary"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceCompliancePolicySettingStateSummaries.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequestBuilder DeviceCompliancePolicySettingStateSummaries
        {
            get
            {
                return new DeviceManagementDeviceCompliancePolicySettingStateSummariesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceCompliancePolicySettingStateSummaries"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceConfigurationConflictSummary.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceConfigurationConflictSummaryCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceConfigurationConflictSummaryCollectionRequestBuilder DeviceConfigurationConflictSummary
        {
            get
            {
                return new DeviceManagementDeviceConfigurationConflictSummaryCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceConfigurationConflictSummary"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceConfigurationDeviceStateSummaries.
        /// </summary>
        /// <returns>The <see cref="IDeviceConfigurationDeviceStateSummaryRequestBuilder"/>.</returns>
        public IDeviceConfigurationDeviceStateSummaryRequestBuilder DeviceConfigurationDeviceStateSummaries
        {
            get
            {
                return new DeviceConfigurationDeviceStateSummaryRequestBuilder(this.AppendSegmentToRequestUrl("deviceConfigurationDeviceStateSummaries"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceConfigurationRestrictedAppsViolations.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceConfigurationRestrictedAppsViolationsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceConfigurationRestrictedAppsViolationsCollectionRequestBuilder DeviceConfigurationRestrictedAppsViolations
        {
            get
            {
                return new DeviceManagementDeviceConfigurationRestrictedAppsViolationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceConfigurationRestrictedAppsViolations"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceConfigurations.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceConfigurationsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceConfigurationsCollectionRequestBuilder DeviceConfigurations
        {
            get
            {
                return new DeviceManagementDeviceConfigurationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceConfigurations"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceConfigurationsAllManagedDeviceCertificateStates.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceConfigurationsAllManagedDeviceCertificateStatesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceConfigurationsAllManagedDeviceCertificateStatesCollectionRequestBuilder DeviceConfigurationsAllManagedDeviceCertificateStates
        {
            get
            {
                return new DeviceManagementDeviceConfigurationsAllManagedDeviceCertificateStatesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceConfigurationsAllManagedDeviceCertificateStates"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceConfigurationUserStateSummaries.
        /// </summary>
        /// <returns>The <see cref="IDeviceConfigurationUserStateSummaryRequestBuilder"/>.</returns>
        public IDeviceConfigurationUserStateSummaryRequestBuilder DeviceConfigurationUserStateSummaries
        {
            get
            {
                return new DeviceConfigurationUserStateSummaryRequestBuilder(this.AppendSegmentToRequestUrl("deviceConfigurationUserStateSummaries"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for IosUpdateStatuses.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIosUpdateStatusesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementIosUpdateStatusesCollectionRequestBuilder IosUpdateStatuses
        {
            get
            {
                return new DeviceManagementIosUpdateStatusesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("iosUpdateStatuses"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for MacOSSoftwareUpdateAccountSummaries.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementMacOSSoftwareUpdateAccountSummariesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementMacOSSoftwareUpdateAccountSummariesCollectionRequestBuilder MacOSSoftwareUpdateAccountSummaries
        {
            get
            {
                return new DeviceManagementMacOSSoftwareUpdateAccountSummariesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("macOSSoftwareUpdateAccountSummaries"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ManagedDeviceEncryptionStates.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementManagedDeviceEncryptionStatesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementManagedDeviceEncryptionStatesCollectionRequestBuilder ManagedDeviceEncryptionStates
        {
            get
            {
                return new DeviceManagementManagedDeviceEncryptionStatesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("managedDeviceEncryptionStates"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for NdesConnectors.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementNdesConnectorsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementNdesConnectorsCollectionRequestBuilder NdesConnectors
        {
            get
            {
                return new DeviceManagementNdesConnectorsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("ndesConnectors"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for SoftwareUpdateStatusSummary.
        /// </summary>
        /// <returns>The <see cref="ISoftwareUpdateStatusSummaryWithReferenceRequestBuilder"/>.</returns>
        public ISoftwareUpdateStatusSummaryWithReferenceRequestBuilder SoftwareUpdateStatusSummary
        {
            get
            {
                return new SoftwareUpdateStatusSummaryWithReferenceRequestBuilder(this.AppendSegmentToRequestUrl("softwareUpdateStatusSummary"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ConfigurationCategories.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementConfigurationCategoriesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementConfigurationCategoriesCollectionRequestBuilder ConfigurationCategories
        {
            get
            {
                return new DeviceManagementConfigurationCategoriesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("configurationCategories"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ConfigurationPolicies.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementConfigurationPoliciesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementConfigurationPoliciesCollectionRequestBuilder ConfigurationPolicies
        {
            get
            {
                return new DeviceManagementConfigurationPoliciesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("configurationPolicies"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ConfigurationSettings.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementConfigurationSettingsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementConfigurationSettingsCollectionRequestBuilder ConfigurationSettings
        {
            get
            {
                return new DeviceManagementConfigurationSettingsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("configurationSettings"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ComplianceManagementPartners.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementComplianceManagementPartnersCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementComplianceManagementPartnersCollectionRequestBuilder ComplianceManagementPartners
        {
            get
            {
                return new DeviceManagementComplianceManagementPartnersCollectionRequestBuilder(this.AppendSegmentToRequestUrl("complianceManagementPartners"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ConditionalAccessSettings.
        /// </summary>
        /// <returns>The <see cref="IOnPremisesConditionalAccessSettingsRequestBuilder"/>.</returns>
        public IOnPremisesConditionalAccessSettingsRequestBuilder ConditionalAccessSettings
        {
            get
            {
                return new OnPremisesConditionalAccessSettingsRequestBuilder(this.AppendSegmentToRequestUrl("conditionalAccessSettings"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceCategories.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceCategoriesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceCategoriesCollectionRequestBuilder DeviceCategories
        {
            get
            {
                return new DeviceManagementDeviceCategoriesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceCategories"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceEnrollmentConfigurations.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder DeviceEnrollmentConfigurations
        {
            get
            {
                return new DeviceManagementDeviceEnrollmentConfigurationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceEnrollmentConfigurations"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementPartners.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceManagementPartnersCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceManagementPartnersCollectionRequestBuilder DeviceManagementPartners
        {
            get
            {
                return new DeviceManagementDeviceManagementPartnersCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceManagementPartners"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ExchangeConnectors.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementExchangeConnectorsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementExchangeConnectorsCollectionRequestBuilder ExchangeConnectors
        {
            get
            {
                return new DeviceManagementExchangeConnectorsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("exchangeConnectors"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ExchangeOnPremisesPolicies.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementExchangeOnPremisesPoliciesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementExchangeOnPremisesPoliciesCollectionRequestBuilder ExchangeOnPremisesPolicies
        {
            get
            {
                return new DeviceManagementExchangeOnPremisesPoliciesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("exchangeOnPremisesPolicies"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ExchangeOnPremisesPolicy.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementExchangeOnPremisesPolicyRequestBuilder"/>.</returns>
        public IDeviceManagementExchangeOnPremisesPolicyRequestBuilder ExchangeOnPremisesPolicy
        {
            get
            {
                return new DeviceManagementExchangeOnPremisesPolicyRequestBuilder(this.AppendSegmentToRequestUrl("exchangeOnPremisesPolicy"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for MobileThreatDefenseConnectors.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementMobileThreatDefenseConnectorsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementMobileThreatDefenseConnectorsCollectionRequestBuilder MobileThreatDefenseConnectors
        {
            get
            {
                return new DeviceManagementMobileThreatDefenseConnectorsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("mobileThreatDefenseConnectors"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Categories.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementCategoriesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementCategoriesCollectionRequestBuilder Categories
        {
            get
            {
                return new DeviceManagementCategoriesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("categories"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Intents.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntentsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementIntentsCollectionRequestBuilder Intents
        {
            get
            {
                return new DeviceManagementIntentsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("intents"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for SettingDefinitions.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementSettingDefinitionsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementSettingDefinitionsCollectionRequestBuilder SettingDefinitions
        {
            get
            {
                return new DeviceManagementSettingDefinitionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("settingDefinitions"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Templates.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementTemplatesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementTemplatesCollectionRequestBuilder Templates
        {
            get
            {
                return new DeviceManagementTemplatesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("templates"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ApplePushNotificationCertificate.
        /// </summary>
        /// <returns>The <see cref="IApplePushNotificationCertificateRequestBuilder"/>.</returns>
        public IApplePushNotificationCertificateRequestBuilder ApplePushNotificationCertificate
        {
            get
            {
                return new ApplePushNotificationCertificateRequestBuilder(this.AppendSegmentToRequestUrl("applePushNotificationCertificate"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ComanagedDevices.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementComanagedDevicesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementComanagedDevicesCollectionRequestBuilder ComanagedDevices
        {
            get
            {
                return new DeviceManagementComanagedDevicesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("comanagedDevices"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ComanagementEligibleDevices.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementComanagementEligibleDevicesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementComanagementEligibleDevicesCollectionRequestBuilder ComanagementEligibleDevices
        {
            get
            {
                return new DeviceManagementComanagementEligibleDevicesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("comanagementEligibleDevices"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DataSharingConsents.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDataSharingConsentsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDataSharingConsentsCollectionRequestBuilder DataSharingConsents
        {
            get
            {
                return new DeviceManagementDataSharingConsentsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("dataSharingConsents"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DetectedApps.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDetectedAppsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDetectedAppsCollectionRequestBuilder DetectedApps
        {
            get
            {
                return new DeviceManagementDetectedAppsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("detectedApps"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceComplianceScripts.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceComplianceScriptsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceComplianceScriptsCollectionRequestBuilder DeviceComplianceScripts
        {
            get
            {
                return new DeviceManagementDeviceComplianceScriptsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceComplianceScripts"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceCustomAttributeShellScripts.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceCustomAttributeShellScriptsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceCustomAttributeShellScriptsCollectionRequestBuilder DeviceCustomAttributeShellScripts
        {
            get
            {
                return new DeviceManagementDeviceCustomAttributeShellScriptsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceCustomAttributeShellScripts"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceHealthScripts.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceHealthScriptsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceHealthScriptsCollectionRequestBuilder DeviceHealthScripts
        {
            get
            {
                return new DeviceManagementDeviceHealthScriptsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceHealthScripts"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementScripts.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceManagementScriptsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceManagementScriptsCollectionRequestBuilder DeviceManagementScripts
        {
            get
            {
                return new DeviceManagementDeviceManagementScriptsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceManagementScripts"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DeviceShellScripts.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDeviceShellScriptsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDeviceShellScriptsCollectionRequestBuilder DeviceShellScripts
        {
            get
            {
                return new DeviceManagementDeviceShellScriptsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("deviceShellScripts"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ManagedDeviceOverview.
        /// </summary>
        /// <returns>The <see cref="IManagedDeviceOverviewWithReferenceRequestBuilder"/>.</returns>
        public IManagedDeviceOverviewWithReferenceRequestBuilder ManagedDeviceOverview
        {
            get
            {
                return new ManagedDeviceOverviewWithReferenceRequestBuilder(this.AppendSegmentToRequestUrl("managedDeviceOverview"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ManagedDevices.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementManagedDevicesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementManagedDevicesCollectionRequestBuilder ManagedDevices
        {
            get
            {
                return new DeviceManagementManagedDevicesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("managedDevices"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for MobileAppTroubleshootingEvents.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementMobileAppTroubleshootingEventsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementMobileAppTroubleshootingEventsCollectionRequestBuilder MobileAppTroubleshootingEvents
        {
            get
            {
                return new DeviceManagementMobileAppTroubleshootingEventsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("mobileAppTroubleshootingEvents"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for RemoteActionAudits.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementRemoteActionAuditsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementRemoteActionAuditsCollectionRequestBuilder RemoteActionAudits
        {
            get
            {
                return new DeviceManagementRemoteActionAuditsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("remoteActionAudits"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsAppHealthApplicationPerformance.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsAppHealthApplicationPerformanceCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsAppHealthApplicationPerformanceCollectionRequestBuilder UserExperienceAnalyticsAppHealthApplicationPerformance
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsAppHealthApplicationPerformanceCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsAppHealthApplicationPerformance"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionCollectionRequestBuilder UserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsAppHealthApplicationPerformanceByAppVersionCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsAppHealthApplicationPerformanceByAppVersion"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionCollectionRequestBuilder UserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsAppHealthApplicationPerformanceByOSVersionCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsAppHealthApplicationPerformanceByOSVersion"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsAppHealthDeviceModelPerformance.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsAppHealthDeviceModelPerformanceCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsAppHealthDeviceModelPerformanceCollectionRequestBuilder UserExperienceAnalyticsAppHealthDeviceModelPerformance
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsAppHealthDeviceModelPerformanceCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsAppHealthDeviceModelPerformance"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsAppHealthDevicePerformance.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsAppHealthDevicePerformanceCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsAppHealthDevicePerformanceCollectionRequestBuilder UserExperienceAnalyticsAppHealthDevicePerformance
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsAppHealthDevicePerformanceCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsAppHealthDevicePerformance"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsAppHealthDevicePerformanceDetails.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsAppHealthDevicePerformanceDetailsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsAppHealthDevicePerformanceDetailsCollectionRequestBuilder UserExperienceAnalyticsAppHealthDevicePerformanceDetails
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsAppHealthDevicePerformanceDetailsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsAppHealthDevicePerformanceDetails"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsAppHealthOSVersionPerformance.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsAppHealthOSVersionPerformanceCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsAppHealthOSVersionPerformanceCollectionRequestBuilder UserExperienceAnalyticsAppHealthOSVersionPerformance
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsAppHealthOSVersionPerformanceCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsAppHealthOSVersionPerformance"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsAppHealthOverview.
        /// </summary>
        /// <returns>The <see cref="IUserExperienceAnalyticsCategoryRequestBuilder"/>.</returns>
        public IUserExperienceAnalyticsCategoryRequestBuilder UserExperienceAnalyticsAppHealthOverview
        {
            get
            {
                return new UserExperienceAnalyticsCategoryRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsAppHealthOverview"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsBaselines.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsBaselinesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsBaselinesCollectionRequestBuilder UserExperienceAnalyticsBaselines
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsBaselinesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsBaselines"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsCategories.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsCategoriesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsCategoriesCollectionRequestBuilder UserExperienceAnalyticsCategories
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsCategoriesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsCategories"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsDevicePerformance.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsDevicePerformanceCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsDevicePerformanceCollectionRequestBuilder UserExperienceAnalyticsDevicePerformance
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsDevicePerformanceCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsDevicePerformance"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsDeviceStartupHistory.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsDeviceStartupHistoryCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsDeviceStartupHistoryCollectionRequestBuilder UserExperienceAnalyticsDeviceStartupHistory
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsDeviceStartupHistoryCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsDeviceStartupHistory"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsDeviceStartupProcesses.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsDeviceStartupProcessesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsDeviceStartupProcessesCollectionRequestBuilder UserExperienceAnalyticsDeviceStartupProcesses
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsDeviceStartupProcessesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsDeviceStartupProcesses"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsDeviceStartupProcessPerformance.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsDeviceStartupProcessPerformanceCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsDeviceStartupProcessPerformanceCollectionRequestBuilder UserExperienceAnalyticsDeviceStartupProcessPerformance
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsDeviceStartupProcessPerformanceCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsDeviceStartupProcessPerformance"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsDevicesWithoutCloudIdentity.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsDevicesWithoutCloudIdentityCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsDevicesWithoutCloudIdentityCollectionRequestBuilder UserExperienceAnalyticsDevicesWithoutCloudIdentity
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsDevicesWithoutCloudIdentityCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsDevicesWithoutCloudIdentity"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsMetricHistory.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsMetricHistoryCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsMetricHistoryCollectionRequestBuilder UserExperienceAnalyticsMetricHistory
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsMetricHistoryCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsMetricHistory"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsOverview.
        /// </summary>
        /// <returns>The <see cref="IUserExperienceAnalyticsOverviewRequestBuilder"/>.</returns>
        public IUserExperienceAnalyticsOverviewRequestBuilder UserExperienceAnalyticsOverview
        {
            get
            {
                return new UserExperienceAnalyticsOverviewRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsOverview"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsRegressionSummary.
        /// </summary>
        /// <returns>The <see cref="IUserExperienceAnalyticsRegressionSummaryRequestBuilder"/>.</returns>
        public IUserExperienceAnalyticsRegressionSummaryRequestBuilder UserExperienceAnalyticsRegressionSummary
        {
            get
            {
                return new UserExperienceAnalyticsRegressionSummaryRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsRegressionSummary"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsResourcePerformance.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsResourcePerformanceCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsResourcePerformanceCollectionRequestBuilder UserExperienceAnalyticsResourcePerformance
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsResourcePerformanceCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsResourcePerformance"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserExperienceAnalyticsScoreHistory.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserExperienceAnalyticsScoreHistoryCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserExperienceAnalyticsScoreHistoryCollectionRequestBuilder UserExperienceAnalyticsScoreHistory
        {
            get
            {
                return new DeviceManagementUserExperienceAnalyticsScoreHistoryCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userExperienceAnalyticsScoreHistory"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WindowsMalwareInformation.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementWindowsMalwareInformationCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementWindowsMalwareInformationCollectionRequestBuilder WindowsMalwareInformation
        {
            get
            {
                return new DeviceManagementWindowsMalwareInformationCollectionRequestBuilder(this.AppendSegmentToRequestUrl("windowsMalwareInformation"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DerivedCredentials.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDerivedCredentialsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDerivedCredentialsCollectionRequestBuilder DerivedCredentials
        {
            get
            {
                return new DeviceManagementDerivedCredentialsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("derivedCredentials"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ResourceAccessProfiles.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementResourceAccessProfilesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementResourceAccessProfilesCollectionRequestBuilder ResourceAccessProfiles
        {
            get
            {
                return new DeviceManagementResourceAccessProfilesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("resourceAccessProfiles"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for AppleUserInitiatedEnrollmentProfiles.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementAppleUserInitiatedEnrollmentProfilesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementAppleUserInitiatedEnrollmentProfilesCollectionRequestBuilder AppleUserInitiatedEnrollmentProfiles
        {
            get
            {
                return new DeviceManagementAppleUserInitiatedEnrollmentProfilesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("appleUserInitiatedEnrollmentProfiles"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DepOnboardingSettings.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDepOnboardingSettingsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDepOnboardingSettingsCollectionRequestBuilder DepOnboardingSettings
        {
            get
            {
                return new DeviceManagementDepOnboardingSettingsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("depOnboardingSettings"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ImportedDeviceIdentities.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementImportedDeviceIdentitiesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementImportedDeviceIdentitiesCollectionRequestBuilder ImportedDeviceIdentities
        {
            get
            {
                return new DeviceManagementImportedDeviceIdentitiesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("importedDeviceIdentities"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ImportedWindowsAutopilotDeviceIdentities.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementImportedWindowsAutopilotDeviceIdentitiesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementImportedWindowsAutopilotDeviceIdentitiesCollectionRequestBuilder ImportedWindowsAutopilotDeviceIdentities
        {
            get
            {
                return new DeviceManagementImportedWindowsAutopilotDeviceIdentitiesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("importedWindowsAutopilotDeviceIdentities"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WindowsAutopilotDeploymentProfiles.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementWindowsAutopilotDeploymentProfilesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementWindowsAutopilotDeploymentProfilesCollectionRequestBuilder WindowsAutopilotDeploymentProfiles
        {
            get
            {
                return new DeviceManagementWindowsAutopilotDeploymentProfilesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("windowsAutopilotDeploymentProfiles"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WindowsAutopilotDeviceIdentities.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementWindowsAutopilotDeviceIdentitiesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementWindowsAutopilotDeviceIdentitiesCollectionRequestBuilder WindowsAutopilotDeviceIdentities
        {
            get
            {
                return new DeviceManagementWindowsAutopilotDeviceIdentitiesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("windowsAutopilotDeviceIdentities"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WindowsAutopilotSettings.
        /// </summary>
        /// <returns>The <see cref="IWindowsAutopilotSettingsRequestBuilder"/>.</returns>
        public IWindowsAutopilotSettingsRequestBuilder WindowsAutopilotSettings
        {
            get
            {
                return new WindowsAutopilotSettingsRequestBuilder(this.AppendSegmentToRequestUrl("windowsAutopilotSettings"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ManagementConditions.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementManagementConditionsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementManagementConditionsCollectionRequestBuilder ManagementConditions
        {
            get
            {
                return new DeviceManagementManagementConditionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("managementConditions"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ManagementConditionStatements.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementManagementConditionStatementsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementManagementConditionStatementsCollectionRequestBuilder ManagementConditionStatements
        {
            get
            {
                return new DeviceManagementManagementConditionStatementsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("managementConditionStatements"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for GroupPolicyMigrationReports.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGroupPolicyMigrationReportsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementGroupPolicyMigrationReportsCollectionRequestBuilder GroupPolicyMigrationReports
        {
            get
            {
                return new DeviceManagementGroupPolicyMigrationReportsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("groupPolicyMigrationReports"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for GroupPolicyObjectFiles.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGroupPolicyObjectFilesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementGroupPolicyObjectFilesCollectionRequestBuilder GroupPolicyObjectFiles
        {
            get
            {
                return new DeviceManagementGroupPolicyObjectFilesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("groupPolicyObjectFiles"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for GroupPolicyCategories.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGroupPolicyCategoriesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementGroupPolicyCategoriesCollectionRequestBuilder GroupPolicyCategories
        {
            get
            {
                return new DeviceManagementGroupPolicyCategoriesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("groupPolicyCategories"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for GroupPolicyConfigurations.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGroupPolicyConfigurationsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementGroupPolicyConfigurationsCollectionRequestBuilder GroupPolicyConfigurations
        {
            get
            {
                return new DeviceManagementGroupPolicyConfigurationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("groupPolicyConfigurations"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for GroupPolicyDefinitionFiles.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGroupPolicyDefinitionFilesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementGroupPolicyDefinitionFilesCollectionRequestBuilder GroupPolicyDefinitionFiles
        {
            get
            {
                return new DeviceManagementGroupPolicyDefinitionFilesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("groupPolicyDefinitionFiles"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for GroupPolicyDefinitions.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGroupPolicyDefinitionsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementGroupPolicyDefinitionsCollectionRequestBuilder GroupPolicyDefinitions
        {
            get
            {
                return new DeviceManagementGroupPolicyDefinitionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("groupPolicyDefinitions"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for GroupPolicyUploadedDefinitionFiles.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGroupPolicyUploadedDefinitionFilesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementGroupPolicyUploadedDefinitionFilesCollectionRequestBuilder GroupPolicyUploadedDefinitionFiles
        {
            get
            {
                return new DeviceManagementGroupPolicyUploadedDefinitionFilesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("groupPolicyUploadedDefinitionFiles"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for MicrosoftTunnelConfigurations.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementMicrosoftTunnelConfigurationsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementMicrosoftTunnelConfigurationsCollectionRequestBuilder MicrosoftTunnelConfigurations
        {
            get
            {
                return new DeviceManagementMicrosoftTunnelConfigurationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("microsoftTunnelConfigurations"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for MicrosoftTunnelHealthThresholds.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementMicrosoftTunnelHealthThresholdsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementMicrosoftTunnelHealthThresholdsCollectionRequestBuilder MicrosoftTunnelHealthThresholds
        {
            get
            {
                return new DeviceManagementMicrosoftTunnelHealthThresholdsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("microsoftTunnelHealthThresholds"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for MicrosoftTunnelServerLogCollectionResponses.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementMicrosoftTunnelServerLogCollectionResponsesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementMicrosoftTunnelServerLogCollectionResponsesCollectionRequestBuilder MicrosoftTunnelServerLogCollectionResponses
        {
            get
            {
                return new DeviceManagementMicrosoftTunnelServerLogCollectionResponsesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("microsoftTunnelServerLogCollectionResponses"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for MicrosoftTunnelSites.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementMicrosoftTunnelSitesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementMicrosoftTunnelSitesCollectionRequestBuilder MicrosoftTunnelSites
        {
            get
            {
                return new DeviceManagementMicrosoftTunnelSitesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("microsoftTunnelSites"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for NotificationMessageTemplates.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementNotificationMessageTemplatesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementNotificationMessageTemplatesCollectionRequestBuilder NotificationMessageTemplates
        {
            get
            {
                return new DeviceManagementNotificationMessageTemplatesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("notificationMessageTemplates"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for DomainJoinConnectors.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementDomainJoinConnectorsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementDomainJoinConnectorsCollectionRequestBuilder DomainJoinConnectors
        {
            get
            {
                return new DeviceManagementDomainJoinConnectorsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("domainJoinConnectors"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ConfigManagerCollections.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementConfigManagerCollectionsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementConfigManagerCollectionsCollectionRequestBuilder ConfigManagerCollections
        {
            get
            {
                return new DeviceManagementConfigManagerCollectionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("configManagerCollections"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ResourceOperations.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementResourceOperationsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementResourceOperationsCollectionRequestBuilder ResourceOperations
        {
            get
            {
                return new DeviceManagementResourceOperationsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("resourceOperations"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for RoleAssignments.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementRoleAssignmentsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementRoleAssignmentsCollectionRequestBuilder RoleAssignments
        {
            get
            {
                return new DeviceManagementRoleAssignmentsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("roleAssignments"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for RoleDefinitions.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementRoleDefinitionsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementRoleDefinitionsCollectionRequestBuilder RoleDefinitions
        {
            get
            {
                return new DeviceManagementRoleDefinitionsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("roleDefinitions"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for RoleScopeTags.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementRoleScopeTagsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementRoleScopeTagsCollectionRequestBuilder RoleScopeTags
        {
            get
            {
                return new DeviceManagementRoleScopeTagsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("roleScopeTags"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for RemoteAssistancePartners.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementRemoteAssistancePartnersCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementRemoteAssistancePartnersCollectionRequestBuilder RemoteAssistancePartners
        {
            get
            {
                return new DeviceManagementRemoteAssistancePartnersCollectionRequestBuilder(this.AppendSegmentToRequestUrl("remoteAssistancePartners"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for Reports.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementReportsRequestBuilder"/>.</returns>
        public IDeviceManagementReportsRequestBuilder Reports
        {
            get
            {
                return new DeviceManagementReportsRequestBuilder(this.AppendSegmentToRequestUrl("reports"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for EmbeddedSIMActivationCodePools.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementEmbeddedSIMActivationCodePoolsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementEmbeddedSIMActivationCodePoolsCollectionRequestBuilder EmbeddedSIMActivationCodePools
        {
            get
            {
                return new DeviceManagementEmbeddedSIMActivationCodePoolsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("embeddedSIMActivationCodePools"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for TelecomExpenseManagementPartners.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementTelecomExpenseManagementPartnersCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementTelecomExpenseManagementPartnersCollectionRequestBuilder TelecomExpenseManagementPartners
        {
            get
            {
                return new DeviceManagementTelecomExpenseManagementPartnersCollectionRequestBuilder(this.AppendSegmentToRequestUrl("telecomExpenseManagementPartners"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for AutopilotEvents.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementAutopilotEventsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementAutopilotEventsCollectionRequestBuilder AutopilotEvents
        {
            get
            {
                return new DeviceManagementAutopilotEventsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("autopilotEvents"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for TroubleshootingEvents.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementTroubleshootingEventsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementTroubleshootingEventsCollectionRequestBuilder TroubleshootingEvents
        {
            get
            {
                return new DeviceManagementTroubleshootingEventsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("troubleshootingEvents"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WindowsFeatureUpdateProfiles.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementWindowsFeatureUpdateProfilesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementWindowsFeatureUpdateProfilesCollectionRequestBuilder WindowsFeatureUpdateProfiles
        {
            get
            {
                return new DeviceManagementWindowsFeatureUpdateProfilesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("windowsFeatureUpdateProfiles"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WindowsQualityUpdateProfiles.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementWindowsQualityUpdateProfilesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementWindowsQualityUpdateProfilesCollectionRequestBuilder WindowsQualityUpdateProfiles
        {
            get
            {
                return new DeviceManagementWindowsQualityUpdateProfilesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("windowsQualityUpdateProfiles"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WindowsUpdateCatalogItems.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementWindowsUpdateCatalogItemsCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementWindowsUpdateCatalogItemsCollectionRequestBuilder WindowsUpdateCatalogItems
        {
            get
            {
                return new DeviceManagementWindowsUpdateCatalogItemsCollectionRequestBuilder(this.AppendSegmentToRequestUrl("windowsUpdateCatalogItems"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for IntuneBrandingProfiles.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementIntuneBrandingProfilesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementIntuneBrandingProfilesCollectionRequestBuilder IntuneBrandingProfiles
        {
            get
            {
                return new DeviceManagementIntuneBrandingProfilesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("intuneBrandingProfiles"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WindowsInformationProtectionAppLearningSummaries.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequestBuilder WindowsInformationProtectionAppLearningSummaries
        {
            get
            {
                return new DeviceManagementWindowsInformationProtectionAppLearningSummariesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("windowsInformationProtectionAppLearningSummaries"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for WindowsInformationProtectionNetworkLearningSummaries.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequestBuilder WindowsInformationProtectionNetworkLearningSummaries
        {
            get
            {
                return new DeviceManagementWindowsInformationProtectionNetworkLearningSummariesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("windowsInformationProtectionNetworkLearningSummaries"), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for UserPfxCertificates.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementUserPfxCertificatesCollectionRequestBuilder"/>.</returns>
        public IDeviceManagementUserPfxCertificatesCollectionRequestBuilder UserPfxCertificates
        {
            get
            {
                return new DeviceManagementUserPfxCertificatesCollectionRequestBuilder(this.AppendSegmentToRequestUrl("userPfxCertificates"), this.Client);
            }
        }
    
        /// <summary>
        /// Gets the request builder for DeviceManagementGetAssignmentFiltersStatusDetails.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGetAssignmentFiltersStatusDetailsRequestBuilder"/>.</returns>
        public IDeviceManagementGetAssignmentFiltersStatusDetailsRequestBuilder GetAssignmentFiltersStatusDetails(
            string managedDeviceId = null,
            string payloadId = null,
            string userId = null,
            IEnumerable<string> assignmentFilterIds = null,
            Int32? top = null,
            Int32? skip = null)
        {
            return new DeviceManagementGetAssignmentFiltersStatusDetailsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getAssignmentFiltersStatusDetails"),
                this.Client,
                managedDeviceId,
                payloadId,
                userId,
                assignmentFilterIds,
                top,
                skip);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementEnableAndroidDeviceAdministratorEnrollment.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementEnableAndroidDeviceAdministratorEnrollmentRequestBuilder"/>.</returns>
        public IDeviceManagementEnableAndroidDeviceAdministratorEnrollmentRequestBuilder EnableAndroidDeviceAdministratorEnrollment()
        {
            return new DeviceManagementEnableAndroidDeviceAdministratorEnrollmentRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.enableAndroidDeviceAdministratorEnrollment"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementEnableLegacyPcManagement.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementEnableLegacyPcManagementRequestBuilder"/>.</returns>
        public IDeviceManagementEnableLegacyPcManagementRequestBuilder EnableLegacyPcManagement()
        {
            return new DeviceManagementEnableLegacyPcManagementRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.enableLegacyPcManagement"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementEnableUnlicensedAdminstrators.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementEnableUnlicensedAdminstratorsRequestBuilder"/>.</returns>
        public IDeviceManagementEnableUnlicensedAdminstratorsRequestBuilder EnableUnlicensedAdminstrators()
        {
            return new DeviceManagementEnableUnlicensedAdminstratorsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.enableUnlicensedAdminstrators"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementSendCustomNotificationToCompanyPortal.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementSendCustomNotificationToCompanyPortalRequestBuilder"/>.</returns>
        public IDeviceManagementSendCustomNotificationToCompanyPortalRequestBuilder SendCustomNotificationToCompanyPortal(
            string notificationTitle = null,
            string notificationBody = null,
            IEnumerable<string> groupsToNotify = null)
        {
            return new DeviceManagementSendCustomNotificationToCompanyPortalRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sendCustomNotificationToCompanyPortal"),
                this.Client,
                notificationTitle,
                notificationBody,
                groupsToNotify);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementGetEffectivePermissions.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGetEffectivePermissionsRequestBuilder"/>.</returns>
        public IDeviceManagementGetEffectivePermissionsRequestBuilder GetEffectivePermissions()
        {
            return new DeviceManagementGetEffectivePermissionsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEffectivePermissions"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementGetEffectivePermissions.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGetEffectivePermissionsRequestBuilder"/>.</returns>
        public IDeviceManagementGetEffectivePermissionsRequestBuilder GetEffectivePermissions(
            string scope = null)
        {
            return new DeviceManagementGetEffectivePermissionsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getEffectivePermissions"),
                this.Client,
                scope);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementVerifyWindowsEnrollmentAutoDiscovery.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementVerifyWindowsEnrollmentAutoDiscoveryRequestBuilder"/>.</returns>
        public IDeviceManagementVerifyWindowsEnrollmentAutoDiscoveryRequestBuilder VerifyWindowsEnrollmentAutoDiscovery(
            string domainName = null)
        {
            return new DeviceManagementVerifyWindowsEnrollmentAutoDiscoveryRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.verifyWindowsEnrollmentAutoDiscovery"),
                this.Client,
                domainName);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementGetComanagedDevicesSummary.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGetComanagedDevicesSummaryRequestBuilder"/>.</returns>
        public IDeviceManagementGetComanagedDevicesSummaryRequestBuilder GetComanagedDevicesSummary()
        {
            return new DeviceManagementGetComanagedDevicesSummaryRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getComanagedDevicesSummary"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementGetComanagementEligibleDevicesSummary.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGetComanagementEligibleDevicesSummaryRequestBuilder"/>.</returns>
        public IDeviceManagementGetComanagementEligibleDevicesSummaryRequestBuilder GetComanagementEligibleDevicesSummary()
        {
            return new DeviceManagementGetComanagementEligibleDevicesSummaryRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getComanagementEligibleDevicesSummary"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementGetSuggestedEnrollmentLimit.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGetSuggestedEnrollmentLimitRequestBuilder"/>.</returns>
        public IDeviceManagementGetSuggestedEnrollmentLimitRequestBuilder GetSuggestedEnrollmentLimit(
            string enrollmentType = null)
        {
            return new DeviceManagementGetSuggestedEnrollmentLimitRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getSuggestedEnrollmentLimit"),
                this.Client,
                enrollmentType);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementGetAssignedRoleDetails.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGetAssignedRoleDetailsRequestBuilder"/>.</returns>
        public IDeviceManagementGetAssignedRoleDetailsRequestBuilder GetAssignedRoleDetails()
        {
            return new DeviceManagementGetAssignedRoleDetailsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getAssignedRoleDetails"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementGetRoleScopeTagsByIds.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGetRoleScopeTagsByIdsRequestBuilder"/>.</returns>
        public IDeviceManagementGetRoleScopeTagsByIdsRequestBuilder GetRoleScopeTagsByIds(
            IEnumerable<string> ids = null)
        {
            return new DeviceManagementGetRoleScopeTagsByIdsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getRoleScopeTagsByIds"),
                this.Client,
                ids);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementGetRoleScopeTagsByResource.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementGetRoleScopeTagsByResourceRequestBuilder"/>.</returns>
        public IDeviceManagementGetRoleScopeTagsByResourceRequestBuilder GetRoleScopeTagsByResource(
            string resource = null)
        {
            return new DeviceManagementGetRoleScopeTagsByResourceRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getRoleScopeTagsByResource"),
                this.Client,
                resource);
        }

        /// <summary>
        /// Gets the request builder for DeviceManagementScopedForResource.
        /// </summary>
        /// <returns>The <see cref="IDeviceManagementScopedForResourceRequestBuilder"/>.</returns>
        public IDeviceManagementScopedForResourceRequestBuilder ScopedForResource(
            string resource = null)
        {
            return new DeviceManagementScopedForResourceRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.scopedForResource"),
                this.Client,
                resource);
        }
    
    }
}
