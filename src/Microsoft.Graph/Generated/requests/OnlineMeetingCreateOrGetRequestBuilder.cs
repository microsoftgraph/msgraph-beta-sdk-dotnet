// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: MethodRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type OnlineMeetingCreateOrGetRequestBuilder.
    /// </summary>
    public partial class OnlineMeetingCreateOrGetRequestBuilder : BaseActionMethodRequestBuilder<IOnlineMeetingCreateOrGetRequest>, IOnlineMeetingCreateOrGetRequestBuilder
    {
        /// <summary>
        /// Constructs a new <see cref="OnlineMeetingCreateOrGetRequestBuilder"/>.
        /// </summary>
        /// <param name="requestUrl">The URL for the request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        /// <param name="externalId">A externalId parameter for the OData method call.</param>
        /// <param name="chatInfo">A chatInfo parameter for the OData method call.</param>
        /// <param name="endDateTime">A endDateTime parameter for the OData method call.</param>
        /// <param name="participants">A participants parameter for the OData method call.</param>
        /// <param name="startDateTime">A startDateTime parameter for the OData method call.</param>
        /// <param name="subject">A subject parameter for the OData method call.</param>
        public OnlineMeetingCreateOrGetRequestBuilder(
            string requestUrl,
            IBaseClient client,
            string externalId,
            ChatInfo chatInfo,
            DateTimeOffset? endDateTime,
            MeetingParticipants participants,
            DateTimeOffset? startDateTime,
            string subject)
            : base(requestUrl, client)
        {
            this.SetParameter("externalId", externalId, false);
            this.SetParameter("chatInfo", chatInfo, true);
            this.SetParameter("endDateTime", endDateTime, true);
            this.SetParameter("participants", participants, true);
            this.SetParameter("startDateTime", startDateTime, true);
            this.SetParameter("subject", subject, true);
        }

        /// <summary>
        /// A method used by the base class to construct a request class instance.
        /// </summary>
        /// <param name="functionUrl">The request URL to </param>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>An instance of a specific request class.</returns>
        protected override IOnlineMeetingCreateOrGetRequest CreateRequest(string functionUrl, IEnumerable<Option> options)
        {
            var request = new OnlineMeetingCreateOrGetRequest(functionUrl, this.Client, options);

            if (this.HasParameter("externalId"))
            {
                request.RequestBody.ExternalId = this.GetParameter<string>("externalId");
            }

            if (this.HasParameter("chatInfo"))
            {
                request.RequestBody.ChatInfo = this.GetParameter<ChatInfo>("chatInfo");
            }

            if (this.HasParameter("endDateTime"))
            {
                request.RequestBody.EndDateTime = this.GetParameter<DateTimeOffset?>("endDateTime");
            }

            if (this.HasParameter("participants"))
            {
                request.RequestBody.Participants = this.GetParameter<MeetingParticipants>("participants");
            }

            if (this.HasParameter("startDateTime"))
            {
                request.RequestBody.StartDateTime = this.GetParameter<DateTimeOffset?>("startDateTime");
            }

            if (this.HasParameter("subject"))
            {
                request.RequestBody.Subject = this.GetParameter<string>("subject");
            }

            return request;
        }
    }
}
