// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type MicrosoftTunnelServerRequestBuilder.
    /// </summary>
    public partial class MicrosoftTunnelServerRequestBuilder : EntityRequestBuilder, IMicrosoftTunnelServerRequestBuilder
    {

        /// <summary>
        /// Constructs a new MicrosoftTunnelServerRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public MicrosoftTunnelServerRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IMicrosoftTunnelServerRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IMicrosoftTunnelServerRequest Request(IEnumerable<Option> options)
        {
            return new MicrosoftTunnelServerRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for MicrosoftTunnelServerCreateServerLogCollectionRequest.
        /// </summary>
        /// <returns>The <see cref="IMicrosoftTunnelServerCreateServerLogCollectionRequestRequestBuilder"/>.</returns>
        public IMicrosoftTunnelServerCreateServerLogCollectionRequestRequestBuilder CreateServerLogCollectionRequest(
            DateTimeOffset startDateTime,
            DateTimeOffset endDateTime)
        {
            return new MicrosoftTunnelServerCreateServerLogCollectionRequestRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.createServerLogCollectionRequest"),
                this.Client,
                startDateTime,
                endDateTime);
        }

        /// <summary>
        /// Gets the request builder for MicrosoftTunnelServerGetHealthMetrics.
        /// </summary>
        /// <returns>The <see cref="IMicrosoftTunnelServerGetHealthMetricsRequestBuilder"/>.</returns>
        public IMicrosoftTunnelServerGetHealthMetricsRequestBuilder GetHealthMetrics(
            IEnumerable<string> metricNames = null)
        {
            return new MicrosoftTunnelServerGetHealthMetricsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getHealthMetrics"),
                this.Client,
                metricNames);
        }

        /// <summary>
        /// Gets the request builder for MicrosoftTunnelServerGetHealthMetricTimeSeries.
        /// </summary>
        /// <returns>The <see cref="IMicrosoftTunnelServerGetHealthMetricTimeSeriesRequestBuilder"/>.</returns>
        public IMicrosoftTunnelServerGetHealthMetricTimeSeriesRequestBuilder GetHealthMetricTimeSeries(
            DateTimeOffset startTime,
            DateTimeOffset endTime,
            string metricName = null)
        {
            return new MicrosoftTunnelServerGetHealthMetricTimeSeriesRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.getHealthMetricTimeSeries"),
                this.Client,
                startTime,
                endTime,
                metricName);
        }
    
    }
}
