// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: MethodRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type ChatGetAllMessagesRequestBuilder.
    /// </summary>
    public partial class ChatGetAllMessagesRequestBuilder : BaseFunctionMethodRequestBuilder<IChatGetAllMessagesRequest>, IChatGetAllMessagesRequestBuilder
    {
        /// <summary>
        /// Constructs a new <see cref="ChatGetAllMessagesRequestBuilder"/>.
        /// </summary>
        /// <param name="requestUrl">The URL for the request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public ChatGetAllMessagesRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
            this.SetFunctionParameters();
        }

        /// <summary>
        /// A method used by the base class to construct a request class instance.
        /// </summary>
        /// <param name="functionUrl">The request URL to </param>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>An instance of a specific request class.</returns>
        protected override IChatGetAllMessagesRequest CreateRequest(string functionUrl, IEnumerable<Option> options)
        {
            var request = new ChatGetAllMessagesRequest(functionUrl, this.Client, options);

            return request;
        }
        /// <summary>
        /// Gets the request builder for ChatMessageDeltaRequestBuilder.
        /// </summary>
        /// <returns>The <see cref="IChatMessageDeltaRequestBuilder"/>.</returns>
        public IChatMessageDeltaRequestBuilder Delta()
        {
            return new ChatMessageDeltaRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.delta"),
                this.Client);
        }
        /// <summary>
        /// Gets the request builder for ChatMessageSetReactionRequestBuilder.
        /// </summary>
        /// <param name="reactionType">A reactionType parameter for the OData method call.</param>
        /// <returns>The <see cref="IChatMessageSetReactionRequestBuilder"/>.</returns>
        public IChatMessageSetReactionRequestBuilder SetReaction(
            string reactionType)
        {
            return new ChatMessageSetReactionRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.setReaction"),
                this.Client,
                reactionType);
        }
        /// <summary>
        /// Gets the request builder for ChatMessageSoftDeleteRequestBuilder.
        /// </summary>
        /// <returns>The <see cref="IChatMessageSoftDeleteRequestBuilder"/>.</returns>
        public IChatMessageSoftDeleteRequestBuilder SoftDelete()
        {
            return new ChatMessageSoftDeleteRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.softDelete"),
                this.Client);
        }
        /// <summary>
        /// Gets the request builder for ChatMessageUndoSoftDeleteRequestBuilder.
        /// </summary>
        /// <returns>The <see cref="IChatMessageUndoSoftDeleteRequestBuilder"/>.</returns>
        public IChatMessageUndoSoftDeleteRequestBuilder UndoSoftDelete()
        {
            return new ChatMessageUndoSoftDeleteRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.undoSoftDelete"),
                this.Client);
        }
        /// <summary>
        /// Gets the request builder for ChatMessageUnsetReactionRequestBuilder.
        /// </summary>
        /// <param name="reactionType">A reactionType parameter for the OData method call.</param>
        /// <returns>The <see cref="IChatMessageUnsetReactionRequestBuilder"/>.</returns>
        public IChatMessageUnsetReactionRequestBuilder UnsetReaction(
            string reactionType)
        {
            return new ChatMessageUnsetReactionRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.unsetReaction"),
                this.Client,
                reactionType);
        }
        /// <summary>
        /// Gets the request builder for HostedContents.
        /// Content in a message hosted by Microsoft Teams - for example, images or code snippets.
        /// </summary>
        /// <returns>The <see cref="IChatMessageHostedContentRequestBuilder"/>.</returns>
        public IChatMessageHostedContentRequestBuilder HostedContents
        {
            get
            {
                return new ChatMessageHostedContentRequestBuilder(this.AppendSegmentToRequestUrl("hostedContents"), this.Client);
            }
        }
        /// <summary>
        /// Gets the request builder for Replies.
        /// Replies for a specified message. Supports $expand for channel messages.
        /// </summary>
        /// <returns>The <see cref="IChatMessageRequestBuilder"/>.</returns>
        public IChatMessageRequestBuilder Replies
        {
            get
            {
                return new ChatMessageRequestBuilder(this.AppendSegmentToRequestUrl("replies"), this.Client);
            }
        }
    }
}
