// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityCollectionRequestBuilder.cs.tt
namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;

    /// <summary>
    /// The type ServiceAnnouncementMessagesCollectionRequestBuilder.
    /// </summary>
    public partial class ServiceAnnouncementMessagesCollectionRequestBuilder : BaseRequestBuilder, IServiceAnnouncementMessagesCollectionRequestBuilder
    {
        /// <summary>
        /// Constructs a new ServiceAnnouncementMessagesCollectionRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public ServiceAnnouncementMessagesCollectionRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public IServiceAnnouncementMessagesCollectionRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public IServiceAnnouncementMessagesCollectionRequest Request(IEnumerable<Option> options)
        {
            return new ServiceAnnouncementMessagesCollectionRequest(this.RequestUrl, this.Client, options);
        }

        /// <summary>
        /// Gets an <see cref="IServiceUpdateMessageRequestBuilder"/> for the specified ServiceAnnouncementServiceUpdateMessage.
        /// </summary>
        /// <param name="id">The ID for the ServiceAnnouncementServiceUpdateMessage.</param>
        /// <returns>The <see cref="IServiceUpdateMessageRequestBuilder"/>.</returns>
        public IServiceUpdateMessageRequestBuilder this[string id]
        {
            get
            {
                return new ServiceUpdateMessageRequestBuilder(this.AppendSegmentToRequestUrl(id), this.Client);
            }
        }

        /// <summary>
        /// Gets the request builder for ServiceUpdateMessageArchive.
        /// </summary>
        /// <returns>The <see cref="IServiceUpdateMessageArchiveRequestBuilder"/>.</returns>
        public IServiceUpdateMessageArchiveRequestBuilder Archive(
            IEnumerable<string> messageIds = null)
        {
            return new ServiceUpdateMessageArchiveRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.archive"),
                this.Client,
                messageIds);
        }

        /// <summary>
        /// Gets the request builder for ServiceUpdateMessageFavorite.
        /// </summary>
        /// <returns>The <see cref="IServiceUpdateMessageFavoriteRequestBuilder"/>.</returns>
        public IServiceUpdateMessageFavoriteRequestBuilder Favorite(
            IEnumerable<string> messageIds = null)
        {
            return new ServiceUpdateMessageFavoriteRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.favorite"),
                this.Client,
                messageIds);
        }

        /// <summary>
        /// Gets the request builder for ServiceUpdateMessageMarkRead.
        /// </summary>
        /// <returns>The <see cref="IServiceUpdateMessageMarkReadRequestBuilder"/>.</returns>
        public IServiceUpdateMessageMarkReadRequestBuilder MarkRead(
            IEnumerable<string> messageIds = null)
        {
            return new ServiceUpdateMessageMarkReadRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.markRead"),
                this.Client,
                messageIds);
        }

        /// <summary>
        /// Gets the request builder for ServiceUpdateMessageMarkUnread.
        /// </summary>
        /// <returns>The <see cref="IServiceUpdateMessageMarkUnreadRequestBuilder"/>.</returns>
        public IServiceUpdateMessageMarkUnreadRequestBuilder MarkUnread(
            IEnumerable<string> messageIds = null)
        {
            return new ServiceUpdateMessageMarkUnreadRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.markUnread"),
                this.Client,
                messageIds);
        }

        /// <summary>
        /// Gets the request builder for ServiceUpdateMessageUnarchive.
        /// </summary>
        /// <returns>The <see cref="IServiceUpdateMessageUnarchiveRequestBuilder"/>.</returns>
        public IServiceUpdateMessageUnarchiveRequestBuilder Unarchive(
            IEnumerable<string> messageIds = null)
        {
            return new ServiceUpdateMessageUnarchiveRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.unarchive"),
                this.Client,
                messageIds);
        }

        /// <summary>
        /// Gets the request builder for ServiceUpdateMessageUnfavorite.
        /// </summary>
        /// <returns>The <see cref="IServiceUpdateMessageUnfavoriteRequestBuilder"/>.</returns>
        public IServiceUpdateMessageUnfavoriteRequestBuilder Unfavorite(
            IEnumerable<string> messageIds = null)
        {
            return new ServiceUpdateMessageUnfavoriteRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.unfavorite"),
                this.Client,
                messageIds);
        }
    }
}
