// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type WorkbookFunctionsRequestBuilder.
    /// </summary>
    public partial class WorkbookFunctionsRequestBuilder : EntityRequestBuilder, IWorkbookFunctionsRequestBuilder
    {

        /// <summary>
        /// Constructs a new WorkbookFunctionsRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public WorkbookFunctionsRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new IWorkbookFunctionsRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new IWorkbookFunctionsRequest Request(IEnumerable<Option> options)
        {
            return new WorkbookFunctionsRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAbs.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAbsRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAbsRequestBuilder Abs(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsAbsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.abs"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAccrInt.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAccrIntRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAccrIntRequestBuilder AccrInt(
            Newtonsoft.Json.Linq.JToken issue = null,
            Newtonsoft.Json.Linq.JToken firstInterest = null,
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken par = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null,
            Newtonsoft.Json.Linq.JToken calcMethod = null)
        {
            return new WorkbookFunctionsAccrIntRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.accrInt"),
                this.Client,
                issue,
                firstInterest,
                settlement,
                rate,
                par,
                frequency,
                basis,
                calcMethod);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAccrIntM.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAccrIntMRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAccrIntMRequestBuilder AccrIntM(
            Newtonsoft.Json.Linq.JToken issue = null,
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken par = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsAccrIntMRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.accrIntM"),
                this.Client,
                issue,
                settlement,
                rate,
                par,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAcos.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAcosRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAcosRequestBuilder Acos(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsAcosRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.acos"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAcosh.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAcoshRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAcoshRequestBuilder Acosh(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsAcoshRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.acosh"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAcot.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAcotRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAcotRequestBuilder Acot(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsAcotRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.acot"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAcoth.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAcothRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAcothRequestBuilder Acoth(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsAcothRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.acoth"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAmorDegrc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAmorDegrcRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAmorDegrcRequestBuilder AmorDegrc(
            Newtonsoft.Json.Linq.JToken cost = null,
            Newtonsoft.Json.Linq.JToken datePurchased = null,
            Newtonsoft.Json.Linq.JToken firstPeriod = null,
            Newtonsoft.Json.Linq.JToken salvage = null,
            Newtonsoft.Json.Linq.JToken period = null,
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsAmorDegrcRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.amorDegrc"),
                this.Client,
                cost,
                datePurchased,
                firstPeriod,
                salvage,
                period,
                rate,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAmorLinc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAmorLincRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAmorLincRequestBuilder AmorLinc(
            Newtonsoft.Json.Linq.JToken cost = null,
            Newtonsoft.Json.Linq.JToken datePurchased = null,
            Newtonsoft.Json.Linq.JToken firstPeriod = null,
            Newtonsoft.Json.Linq.JToken salvage = null,
            Newtonsoft.Json.Linq.JToken period = null,
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsAmorLincRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.amorLinc"),
                this.Client,
                cost,
                datePurchased,
                firstPeriod,
                salvage,
                period,
                rate,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAnd.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAndRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAndRequestBuilder And(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsAndRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.and"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsArabic.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsArabicRequestBuilder"/>.</returns>
        public IWorkbookFunctionsArabicRequestBuilder Arabic(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsArabicRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.arabic"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAreas.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAreasRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAreasRequestBuilder Areas(
            Newtonsoft.Json.Linq.JToken reference = null)
        {
            return new WorkbookFunctionsAreasRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.areas"),
                this.Client,
                reference);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAsc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAscRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAscRequestBuilder Asc(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsAscRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.asc"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAsin.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAsinRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAsinRequestBuilder Asin(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsAsinRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.asin"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAsinh.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAsinhRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAsinhRequestBuilder Asinh(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsAsinhRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.asinh"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAtan.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAtanRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAtanRequestBuilder Atan(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsAtanRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.atan"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAtan2.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAtan2RequestBuilder"/>.</returns>
        public IWorkbookFunctionsAtan2RequestBuilder Atan2(
            Newtonsoft.Json.Linq.JToken xNum = null,
            Newtonsoft.Json.Linq.JToken yNum = null)
        {
            return new WorkbookFunctionsAtan2RequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.atan2"),
                this.Client,
                xNum,
                yNum);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAtanh.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAtanhRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAtanhRequestBuilder Atanh(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsAtanhRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.atanh"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAveDev.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAveDevRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAveDevRequestBuilder AveDev(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsAveDevRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.aveDev"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAverage.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAverageRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAverageRequestBuilder Average(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsAverageRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.average"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAverageA.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAverageARequestBuilder"/>.</returns>
        public IWorkbookFunctionsAverageARequestBuilder AverageA(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsAverageARequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.averageA"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAverageIf.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAverageIfRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAverageIfRequestBuilder AverageIf(
            Newtonsoft.Json.Linq.JToken range = null,
            Newtonsoft.Json.Linq.JToken criteria = null,
            Newtonsoft.Json.Linq.JToken averageRange = null)
        {
            return new WorkbookFunctionsAverageIfRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.averageIf"),
                this.Client,
                range,
                criteria,
                averageRange);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsAverageIfs.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsAverageIfsRequestBuilder"/>.</returns>
        public IWorkbookFunctionsAverageIfsRequestBuilder AverageIfs(
            Newtonsoft.Json.Linq.JToken averageRange = null,
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsAverageIfsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.averageIfs"),
                this.Client,
                averageRange,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBahtText.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBahtTextRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBahtTextRequestBuilder BahtText(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsBahtTextRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.bahtText"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBase.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBaseRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBaseRequestBuilder Base(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken radix = null,
            Newtonsoft.Json.Linq.JToken minLength = null)
        {
            return new WorkbookFunctionsBaseRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.base"),
                this.Client,
                number,
                radix,
                minLength);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBesselI.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBesselIRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBesselIRequestBuilder BesselI(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken n = null)
        {
            return new WorkbookFunctionsBesselIRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.besselI"),
                this.Client,
                x,
                n);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBesselJ.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBesselJRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBesselJRequestBuilder BesselJ(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken n = null)
        {
            return new WorkbookFunctionsBesselJRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.besselJ"),
                this.Client,
                x,
                n);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBesselK.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBesselKRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBesselKRequestBuilder BesselK(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken n = null)
        {
            return new WorkbookFunctionsBesselKRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.besselK"),
                this.Client,
                x,
                n);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBesselY.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBesselYRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBesselYRequestBuilder BesselY(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken n = null)
        {
            return new WorkbookFunctionsBesselYRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.besselY"),
                this.Client,
                x,
                n);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBeta_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBeta_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBeta_DistRequestBuilder Beta_Dist(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken alpha = null,
            Newtonsoft.Json.Linq.JToken beta = null,
            Newtonsoft.Json.Linq.JToken cumulative = null,
            Newtonsoft.Json.Linq.JToken A = null,
            Newtonsoft.Json.Linq.JToken B = null)
        {
            return new WorkbookFunctionsBeta_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.beta_Dist"),
                this.Client,
                x,
                alpha,
                beta,
                cumulative,
                A,
                B);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBeta_Inv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBeta_InvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBeta_InvRequestBuilder Beta_Inv(
            Newtonsoft.Json.Linq.JToken probability = null,
            Newtonsoft.Json.Linq.JToken alpha = null,
            Newtonsoft.Json.Linq.JToken beta = null,
            Newtonsoft.Json.Linq.JToken A = null,
            Newtonsoft.Json.Linq.JToken B = null)
        {
            return new WorkbookFunctionsBeta_InvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.beta_Inv"),
                this.Client,
                probability,
                alpha,
                beta,
                A,
                B);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBin2Dec.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBin2DecRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBin2DecRequestBuilder Bin2Dec(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsBin2DecRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.bin2Dec"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBin2Hex.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBin2HexRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBin2HexRequestBuilder Bin2Hex(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken places = null)
        {
            return new WorkbookFunctionsBin2HexRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.bin2Hex"),
                this.Client,
                number,
                places);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBin2Oct.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBin2OctRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBin2OctRequestBuilder Bin2Oct(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken places = null)
        {
            return new WorkbookFunctionsBin2OctRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.bin2Oct"),
                this.Client,
                number,
                places);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBinom_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBinom_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBinom_DistRequestBuilder Binom_Dist(
            Newtonsoft.Json.Linq.JToken numberS = null,
            Newtonsoft.Json.Linq.JToken trials = null,
            Newtonsoft.Json.Linq.JToken probabilityS = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsBinom_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.binom_Dist"),
                this.Client,
                numberS,
                trials,
                probabilityS,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBinom_Dist_Range.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBinom_Dist_RangeRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBinom_Dist_RangeRequestBuilder Binom_Dist_Range(
            Newtonsoft.Json.Linq.JToken trials = null,
            Newtonsoft.Json.Linq.JToken probabilityS = null,
            Newtonsoft.Json.Linq.JToken numberS = null,
            Newtonsoft.Json.Linq.JToken numberS2 = null)
        {
            return new WorkbookFunctionsBinom_Dist_RangeRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.binom_Dist_Range"),
                this.Client,
                trials,
                probabilityS,
                numberS,
                numberS2);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBinom_Inv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBinom_InvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBinom_InvRequestBuilder Binom_Inv(
            Newtonsoft.Json.Linq.JToken trials = null,
            Newtonsoft.Json.Linq.JToken probabilityS = null,
            Newtonsoft.Json.Linq.JToken alpha = null)
        {
            return new WorkbookFunctionsBinom_InvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.binom_Inv"),
                this.Client,
                trials,
                probabilityS,
                alpha);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBitand.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBitandRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBitandRequestBuilder Bitand(
            Newtonsoft.Json.Linq.JToken number1 = null,
            Newtonsoft.Json.Linq.JToken number2 = null)
        {
            return new WorkbookFunctionsBitandRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.bitand"),
                this.Client,
                number1,
                number2);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBitlshift.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBitlshiftRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBitlshiftRequestBuilder Bitlshift(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken shiftAmount = null)
        {
            return new WorkbookFunctionsBitlshiftRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.bitlshift"),
                this.Client,
                number,
                shiftAmount);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBitor.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBitorRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBitorRequestBuilder Bitor(
            Newtonsoft.Json.Linq.JToken number1 = null,
            Newtonsoft.Json.Linq.JToken number2 = null)
        {
            return new WorkbookFunctionsBitorRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.bitor"),
                this.Client,
                number1,
                number2);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBitrshift.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBitrshiftRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBitrshiftRequestBuilder Bitrshift(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken shiftAmount = null)
        {
            return new WorkbookFunctionsBitrshiftRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.bitrshift"),
                this.Client,
                number,
                shiftAmount);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsBitxor.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsBitxorRequestBuilder"/>.</returns>
        public IWorkbookFunctionsBitxorRequestBuilder Bitxor(
            Newtonsoft.Json.Linq.JToken number1 = null,
            Newtonsoft.Json.Linq.JToken number2 = null)
        {
            return new WorkbookFunctionsBitxorRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.bitxor"),
                this.Client,
                number1,
                number2);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCeiling_Math.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCeiling_MathRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCeiling_MathRequestBuilder Ceiling_Math(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken significance = null,
            Newtonsoft.Json.Linq.JToken mode = null)
        {
            return new WorkbookFunctionsCeiling_MathRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.ceiling_Math"),
                this.Client,
                number,
                significance,
                mode);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCeiling_Precise.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCeiling_PreciseRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCeiling_PreciseRequestBuilder Ceiling_Precise(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken significance = null)
        {
            return new WorkbookFunctionsCeiling_PreciseRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.ceiling_Precise"),
                this.Client,
                number,
                significance);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsChar.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCharRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCharRequestBuilder Char(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsCharRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.char"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsChiSq_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsChiSq_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsChiSq_DistRequestBuilder ChiSq_Dist(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken degFreedom = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsChiSq_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.chiSq_Dist"),
                this.Client,
                x,
                degFreedom,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsChiSq_Dist_RT.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsChiSq_Dist_RTRequestBuilder"/>.</returns>
        public IWorkbookFunctionsChiSq_Dist_RTRequestBuilder ChiSq_Dist_RT(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken degFreedom = null)
        {
            return new WorkbookFunctionsChiSq_Dist_RTRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.chiSq_Dist_RT"),
                this.Client,
                x,
                degFreedom);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsChiSq_Inv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsChiSq_InvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsChiSq_InvRequestBuilder ChiSq_Inv(
            Newtonsoft.Json.Linq.JToken probability = null,
            Newtonsoft.Json.Linq.JToken degFreedom = null)
        {
            return new WorkbookFunctionsChiSq_InvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.chiSq_Inv"),
                this.Client,
                probability,
                degFreedom);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsChiSq_Inv_RT.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsChiSq_Inv_RTRequestBuilder"/>.</returns>
        public IWorkbookFunctionsChiSq_Inv_RTRequestBuilder ChiSq_Inv_RT(
            Newtonsoft.Json.Linq.JToken probability = null,
            Newtonsoft.Json.Linq.JToken degFreedom = null)
        {
            return new WorkbookFunctionsChiSq_Inv_RTRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.chiSq_Inv_RT"),
                this.Client,
                probability,
                degFreedom);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsChoose.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsChooseRequestBuilder"/>.</returns>
        public IWorkbookFunctionsChooseRequestBuilder Choose(
            Newtonsoft.Json.Linq.JToken indexNum = null,
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsChooseRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.choose"),
                this.Client,
                indexNum,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsClean.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCleanRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCleanRequestBuilder Clean(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsCleanRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.clean"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCode.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCodeRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCodeRequestBuilder Code(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsCodeRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.code"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsColumns.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsColumnsRequestBuilder"/>.</returns>
        public IWorkbookFunctionsColumnsRequestBuilder Columns(
            Newtonsoft.Json.Linq.JToken array = null)
        {
            return new WorkbookFunctionsColumnsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.columns"),
                this.Client,
                array);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCombin.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCombinRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCombinRequestBuilder Combin(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken numberChosen = null)
        {
            return new WorkbookFunctionsCombinRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.combin"),
                this.Client,
                number,
                numberChosen);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCombina.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCombinaRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCombinaRequestBuilder Combina(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken numberChosen = null)
        {
            return new WorkbookFunctionsCombinaRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.combina"),
                this.Client,
                number,
                numberChosen);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsComplex.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsComplexRequestBuilder"/>.</returns>
        public IWorkbookFunctionsComplexRequestBuilder Complex(
            Newtonsoft.Json.Linq.JToken realNum = null,
            Newtonsoft.Json.Linq.JToken iNum = null,
            Newtonsoft.Json.Linq.JToken suffix = null)
        {
            return new WorkbookFunctionsComplexRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.complex"),
                this.Client,
                realNum,
                iNum,
                suffix);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsConcatenate.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsConcatenateRequestBuilder"/>.</returns>
        public IWorkbookFunctionsConcatenateRequestBuilder Concatenate(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsConcatenateRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.concatenate"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsConfidence_Norm.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsConfidence_NormRequestBuilder"/>.</returns>
        public IWorkbookFunctionsConfidence_NormRequestBuilder Confidence_Norm(
            Newtonsoft.Json.Linq.JToken alpha = null,
            Newtonsoft.Json.Linq.JToken standardDev = null,
            Newtonsoft.Json.Linq.JToken size = null)
        {
            return new WorkbookFunctionsConfidence_NormRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.confidence_Norm"),
                this.Client,
                alpha,
                standardDev,
                size);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsConfidence_T.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsConfidence_TRequestBuilder"/>.</returns>
        public IWorkbookFunctionsConfidence_TRequestBuilder Confidence_T(
            Newtonsoft.Json.Linq.JToken alpha = null,
            Newtonsoft.Json.Linq.JToken standardDev = null,
            Newtonsoft.Json.Linq.JToken size = null)
        {
            return new WorkbookFunctionsConfidence_TRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.confidence_T"),
                this.Client,
                alpha,
                standardDev,
                size);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsConvert.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsConvertRequestBuilder"/>.</returns>
        public IWorkbookFunctionsConvertRequestBuilder Convert(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken fromUnit = null,
            Newtonsoft.Json.Linq.JToken toUnit = null)
        {
            return new WorkbookFunctionsConvertRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.convert"),
                this.Client,
                number,
                fromUnit,
                toUnit);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCos.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCosRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCosRequestBuilder Cos(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsCosRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.cos"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCosh.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCoshRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCoshRequestBuilder Cosh(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsCoshRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.cosh"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCot.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCotRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCotRequestBuilder Cot(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsCotRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.cot"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCoth.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCothRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCothRequestBuilder Coth(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsCothRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.coth"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCount.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCountRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCountRequestBuilder Count(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsCountRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.count"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCountA.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCountARequestBuilder"/>.</returns>
        public IWorkbookFunctionsCountARequestBuilder CountA(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsCountARequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.countA"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCountBlank.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCountBlankRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCountBlankRequestBuilder CountBlank(
            Newtonsoft.Json.Linq.JToken range = null)
        {
            return new WorkbookFunctionsCountBlankRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.countBlank"),
                this.Client,
                range);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCountIf.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCountIfRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCountIfRequestBuilder CountIf(
            Newtonsoft.Json.Linq.JToken range = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsCountIfRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.countIf"),
                this.Client,
                range,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCountIfs.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCountIfsRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCountIfsRequestBuilder CountIfs(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsCountIfsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.countIfs"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCoupDayBs.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCoupDayBsRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCoupDayBsRequestBuilder CoupDayBs(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsCoupDayBsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.coupDayBs"),
                this.Client,
                settlement,
                maturity,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCoupDays.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCoupDaysRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCoupDaysRequestBuilder CoupDays(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsCoupDaysRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.coupDays"),
                this.Client,
                settlement,
                maturity,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCoupDaysNc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCoupDaysNcRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCoupDaysNcRequestBuilder CoupDaysNc(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsCoupDaysNcRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.coupDaysNc"),
                this.Client,
                settlement,
                maturity,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCoupNcd.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCoupNcdRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCoupNcdRequestBuilder CoupNcd(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsCoupNcdRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.coupNcd"),
                this.Client,
                settlement,
                maturity,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCoupNum.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCoupNumRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCoupNumRequestBuilder CoupNum(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsCoupNumRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.coupNum"),
                this.Client,
                settlement,
                maturity,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCoupPcd.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCoupPcdRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCoupPcdRequestBuilder CoupPcd(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsCoupPcdRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.coupPcd"),
                this.Client,
                settlement,
                maturity,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCsc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCscRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCscRequestBuilder Csc(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsCscRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.csc"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCsch.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCschRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCschRequestBuilder Csch(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsCschRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.csch"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCumIPmt.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCumIPmtRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCumIPmtRequestBuilder CumIPmt(
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken nper = null,
            Newtonsoft.Json.Linq.JToken pv = null,
            Newtonsoft.Json.Linq.JToken startPeriod = null,
            Newtonsoft.Json.Linq.JToken endPeriod = null,
            Newtonsoft.Json.Linq.JToken type = null)
        {
            return new WorkbookFunctionsCumIPmtRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.cumIPmt"),
                this.Client,
                rate,
                nper,
                pv,
                startPeriod,
                endPeriod,
                type);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsCumPrinc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsCumPrincRequestBuilder"/>.</returns>
        public IWorkbookFunctionsCumPrincRequestBuilder CumPrinc(
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken nper = null,
            Newtonsoft.Json.Linq.JToken pv = null,
            Newtonsoft.Json.Linq.JToken startPeriod = null,
            Newtonsoft.Json.Linq.JToken endPeriod = null,
            Newtonsoft.Json.Linq.JToken type = null)
        {
            return new WorkbookFunctionsCumPrincRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.cumPrinc"),
                this.Client,
                rate,
                nper,
                pv,
                startPeriod,
                endPeriod,
                type);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDate.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDateRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDateRequestBuilder Date(
            Newtonsoft.Json.Linq.JToken year = null,
            Newtonsoft.Json.Linq.JToken month = null,
            Newtonsoft.Json.Linq.JToken day = null)
        {
            return new WorkbookFunctionsDateRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.date"),
                this.Client,
                year,
                month,
                day);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDatevalue.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDatevalueRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDatevalueRequestBuilder Datevalue(
            Newtonsoft.Json.Linq.JToken dateText = null)
        {
            return new WorkbookFunctionsDatevalueRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.datevalue"),
                this.Client,
                dateText);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDaverage.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDaverageRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDaverageRequestBuilder Daverage(
            Newtonsoft.Json.Linq.JToken database = null,
            Newtonsoft.Json.Linq.JToken field = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsDaverageRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.daverage"),
                this.Client,
                database,
                field,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDay.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDayRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDayRequestBuilder Day(
            Newtonsoft.Json.Linq.JToken serialNumber = null)
        {
            return new WorkbookFunctionsDayRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.day"),
                this.Client,
                serialNumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDays.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDaysRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDaysRequestBuilder Days(
            Newtonsoft.Json.Linq.JToken endDate = null,
            Newtonsoft.Json.Linq.JToken startDate = null)
        {
            return new WorkbookFunctionsDaysRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.days"),
                this.Client,
                endDate,
                startDate);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDays360.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDays360RequestBuilder"/>.</returns>
        public IWorkbookFunctionsDays360RequestBuilder Days360(
            Newtonsoft.Json.Linq.JToken startDate = null,
            Newtonsoft.Json.Linq.JToken endDate = null,
            Newtonsoft.Json.Linq.JToken method = null)
        {
            return new WorkbookFunctionsDays360RequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.days360"),
                this.Client,
                startDate,
                endDate,
                method);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDb.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDbRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDbRequestBuilder Db(
            Newtonsoft.Json.Linq.JToken cost = null,
            Newtonsoft.Json.Linq.JToken salvage = null,
            Newtonsoft.Json.Linq.JToken life = null,
            Newtonsoft.Json.Linq.JToken period = null,
            Newtonsoft.Json.Linq.JToken month = null)
        {
            return new WorkbookFunctionsDbRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.db"),
                this.Client,
                cost,
                salvage,
                life,
                period,
                month);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDbcs.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDbcsRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDbcsRequestBuilder Dbcs(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsDbcsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dbcs"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDcount.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDcountRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDcountRequestBuilder Dcount(
            Newtonsoft.Json.Linq.JToken database = null,
            Newtonsoft.Json.Linq.JToken field = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsDcountRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dcount"),
                this.Client,
                database,
                field,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDcountA.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDcountARequestBuilder"/>.</returns>
        public IWorkbookFunctionsDcountARequestBuilder DcountA(
            Newtonsoft.Json.Linq.JToken database = null,
            Newtonsoft.Json.Linq.JToken field = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsDcountARequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dcountA"),
                this.Client,
                database,
                field,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDdb.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDdbRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDdbRequestBuilder Ddb(
            Newtonsoft.Json.Linq.JToken cost = null,
            Newtonsoft.Json.Linq.JToken salvage = null,
            Newtonsoft.Json.Linq.JToken life = null,
            Newtonsoft.Json.Linq.JToken period = null,
            Newtonsoft.Json.Linq.JToken factor = null)
        {
            return new WorkbookFunctionsDdbRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.ddb"),
                this.Client,
                cost,
                salvage,
                life,
                period,
                factor);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDec2Bin.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDec2BinRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDec2BinRequestBuilder Dec2Bin(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken places = null)
        {
            return new WorkbookFunctionsDec2BinRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dec2Bin"),
                this.Client,
                number,
                places);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDec2Hex.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDec2HexRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDec2HexRequestBuilder Dec2Hex(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken places = null)
        {
            return new WorkbookFunctionsDec2HexRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dec2Hex"),
                this.Client,
                number,
                places);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDec2Oct.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDec2OctRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDec2OctRequestBuilder Dec2Oct(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken places = null)
        {
            return new WorkbookFunctionsDec2OctRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dec2Oct"),
                this.Client,
                number,
                places);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDecimal.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDecimalRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDecimalRequestBuilder Decimal(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken radix = null)
        {
            return new WorkbookFunctionsDecimalRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.decimal"),
                this.Client,
                number,
                radix);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDegrees.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDegreesRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDegreesRequestBuilder Degrees(
            Newtonsoft.Json.Linq.JToken angle = null)
        {
            return new WorkbookFunctionsDegreesRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.degrees"),
                this.Client,
                angle);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDelta.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDeltaRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDeltaRequestBuilder Delta(
            Newtonsoft.Json.Linq.JToken number1 = null,
            Newtonsoft.Json.Linq.JToken number2 = null)
        {
            return new WorkbookFunctionsDeltaRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.delta"),
                this.Client,
                number1,
                number2);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDevSq.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDevSqRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDevSqRequestBuilder DevSq(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsDevSqRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.devSq"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDget.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDgetRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDgetRequestBuilder Dget(
            Newtonsoft.Json.Linq.JToken database = null,
            Newtonsoft.Json.Linq.JToken field = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsDgetRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dget"),
                this.Client,
                database,
                field,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDisc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDiscRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDiscRequestBuilder Disc(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken pr = null,
            Newtonsoft.Json.Linq.JToken redemption = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsDiscRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.disc"),
                this.Client,
                settlement,
                maturity,
                pr,
                redemption,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDmax.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDmaxRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDmaxRequestBuilder Dmax(
            Newtonsoft.Json.Linq.JToken database = null,
            Newtonsoft.Json.Linq.JToken field = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsDmaxRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dmax"),
                this.Client,
                database,
                field,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDmin.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDminRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDminRequestBuilder Dmin(
            Newtonsoft.Json.Linq.JToken database = null,
            Newtonsoft.Json.Linq.JToken field = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsDminRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dmin"),
                this.Client,
                database,
                field,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDollar.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDollarRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDollarRequestBuilder Dollar(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken decimals = null)
        {
            return new WorkbookFunctionsDollarRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dollar"),
                this.Client,
                number,
                decimals);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDollarDe.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDollarDeRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDollarDeRequestBuilder DollarDe(
            Newtonsoft.Json.Linq.JToken fractionalDollar = null,
            Newtonsoft.Json.Linq.JToken fraction = null)
        {
            return new WorkbookFunctionsDollarDeRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dollarDe"),
                this.Client,
                fractionalDollar,
                fraction);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDollarFr.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDollarFrRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDollarFrRequestBuilder DollarFr(
            Newtonsoft.Json.Linq.JToken decimalDollar = null,
            Newtonsoft.Json.Linq.JToken fraction = null)
        {
            return new WorkbookFunctionsDollarFrRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dollarFr"),
                this.Client,
                decimalDollar,
                fraction);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDproduct.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDproductRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDproductRequestBuilder Dproduct(
            Newtonsoft.Json.Linq.JToken database = null,
            Newtonsoft.Json.Linq.JToken field = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsDproductRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dproduct"),
                this.Client,
                database,
                field,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDstDev.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDstDevRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDstDevRequestBuilder DstDev(
            Newtonsoft.Json.Linq.JToken database = null,
            Newtonsoft.Json.Linq.JToken field = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsDstDevRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dstDev"),
                this.Client,
                database,
                field,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDstDevP.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDstDevPRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDstDevPRequestBuilder DstDevP(
            Newtonsoft.Json.Linq.JToken database = null,
            Newtonsoft.Json.Linq.JToken field = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsDstDevPRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dstDevP"),
                this.Client,
                database,
                field,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDsum.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDsumRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDsumRequestBuilder Dsum(
            Newtonsoft.Json.Linq.JToken database = null,
            Newtonsoft.Json.Linq.JToken field = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsDsumRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dsum"),
                this.Client,
                database,
                field,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDuration.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDurationRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDurationRequestBuilder Duration(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken coupon = null,
            Newtonsoft.Json.Linq.JToken yld = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsDurationRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.duration"),
                this.Client,
                settlement,
                maturity,
                coupon,
                yld,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDvar.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDvarRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDvarRequestBuilder Dvar(
            Newtonsoft.Json.Linq.JToken database = null,
            Newtonsoft.Json.Linq.JToken field = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsDvarRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dvar"),
                this.Client,
                database,
                field,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsDvarP.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsDvarPRequestBuilder"/>.</returns>
        public IWorkbookFunctionsDvarPRequestBuilder DvarP(
            Newtonsoft.Json.Linq.JToken database = null,
            Newtonsoft.Json.Linq.JToken field = null,
            Newtonsoft.Json.Linq.JToken criteria = null)
        {
            return new WorkbookFunctionsDvarPRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.dvarP"),
                this.Client,
                database,
                field,
                criteria);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsEcma_Ceiling.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsEcma_CeilingRequestBuilder"/>.</returns>
        public IWorkbookFunctionsEcma_CeilingRequestBuilder Ecma_Ceiling(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken significance = null)
        {
            return new WorkbookFunctionsEcma_CeilingRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.ecma_Ceiling"),
                this.Client,
                number,
                significance);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsEdate.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsEdateRequestBuilder"/>.</returns>
        public IWorkbookFunctionsEdateRequestBuilder Edate(
            Newtonsoft.Json.Linq.JToken startDate = null,
            Newtonsoft.Json.Linq.JToken months = null)
        {
            return new WorkbookFunctionsEdateRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.edate"),
                this.Client,
                startDate,
                months);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsEffect.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsEffectRequestBuilder"/>.</returns>
        public IWorkbookFunctionsEffectRequestBuilder Effect(
            Newtonsoft.Json.Linq.JToken nominalRate = null,
            Newtonsoft.Json.Linq.JToken npery = null)
        {
            return new WorkbookFunctionsEffectRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.effect"),
                this.Client,
                nominalRate,
                npery);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsEoMonth.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsEoMonthRequestBuilder"/>.</returns>
        public IWorkbookFunctionsEoMonthRequestBuilder EoMonth(
            Newtonsoft.Json.Linq.JToken startDate = null,
            Newtonsoft.Json.Linq.JToken months = null)
        {
            return new WorkbookFunctionsEoMonthRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.eoMonth"),
                this.Client,
                startDate,
                months);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsErf.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsErfRequestBuilder"/>.</returns>
        public IWorkbookFunctionsErfRequestBuilder Erf(
            Newtonsoft.Json.Linq.JToken lowerLimit = null,
            Newtonsoft.Json.Linq.JToken upperLimit = null)
        {
            return new WorkbookFunctionsErfRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.erf"),
                this.Client,
                lowerLimit,
                upperLimit);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsErf_Precise.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsErf_PreciseRequestBuilder"/>.</returns>
        public IWorkbookFunctionsErf_PreciseRequestBuilder Erf_Precise(
            Newtonsoft.Json.Linq.JToken X = null)
        {
            return new WorkbookFunctionsErf_PreciseRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.erf_Precise"),
                this.Client,
                X);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsErfC.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsErfCRequestBuilder"/>.</returns>
        public IWorkbookFunctionsErfCRequestBuilder ErfC(
            Newtonsoft.Json.Linq.JToken x = null)
        {
            return new WorkbookFunctionsErfCRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.erfC"),
                this.Client,
                x);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsErfC_Precise.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsErfC_PreciseRequestBuilder"/>.</returns>
        public IWorkbookFunctionsErfC_PreciseRequestBuilder ErfC_Precise(
            Newtonsoft.Json.Linq.JToken X = null)
        {
            return new WorkbookFunctionsErfC_PreciseRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.erfC_Precise"),
                this.Client,
                X);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsError_Type.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsError_TypeRequestBuilder"/>.</returns>
        public IWorkbookFunctionsError_TypeRequestBuilder Error_Type(
            Newtonsoft.Json.Linq.JToken errorVal = null)
        {
            return new WorkbookFunctionsError_TypeRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.error_Type"),
                this.Client,
                errorVal);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsEven.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsEvenRequestBuilder"/>.</returns>
        public IWorkbookFunctionsEvenRequestBuilder Even(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsEvenRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.even"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsExact.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsExactRequestBuilder"/>.</returns>
        public IWorkbookFunctionsExactRequestBuilder Exact(
            Newtonsoft.Json.Linq.JToken text1 = null,
            Newtonsoft.Json.Linq.JToken text2 = null)
        {
            return new WorkbookFunctionsExactRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.exact"),
                this.Client,
                text1,
                text2);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsExp.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsExpRequestBuilder"/>.</returns>
        public IWorkbookFunctionsExpRequestBuilder Exp(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsExpRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.exp"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsExpon_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsExpon_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsExpon_DistRequestBuilder Expon_Dist(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken lambda = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsExpon_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.expon_Dist"),
                this.Client,
                x,
                lambda,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsF_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsF_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsF_DistRequestBuilder F_Dist(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken degFreedom1 = null,
            Newtonsoft.Json.Linq.JToken degFreedom2 = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsF_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.f_Dist"),
                this.Client,
                x,
                degFreedom1,
                degFreedom2,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsF_Dist_RT.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsF_Dist_RTRequestBuilder"/>.</returns>
        public IWorkbookFunctionsF_Dist_RTRequestBuilder F_Dist_RT(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken degFreedom1 = null,
            Newtonsoft.Json.Linq.JToken degFreedom2 = null)
        {
            return new WorkbookFunctionsF_Dist_RTRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.f_Dist_RT"),
                this.Client,
                x,
                degFreedom1,
                degFreedom2);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsF_Inv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsF_InvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsF_InvRequestBuilder F_Inv(
            Newtonsoft.Json.Linq.JToken probability = null,
            Newtonsoft.Json.Linq.JToken degFreedom1 = null,
            Newtonsoft.Json.Linq.JToken degFreedom2 = null)
        {
            return new WorkbookFunctionsF_InvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.f_Inv"),
                this.Client,
                probability,
                degFreedom1,
                degFreedom2);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsF_Inv_RT.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsF_Inv_RTRequestBuilder"/>.</returns>
        public IWorkbookFunctionsF_Inv_RTRequestBuilder F_Inv_RT(
            Newtonsoft.Json.Linq.JToken probability = null,
            Newtonsoft.Json.Linq.JToken degFreedom1 = null,
            Newtonsoft.Json.Linq.JToken degFreedom2 = null)
        {
            return new WorkbookFunctionsF_Inv_RTRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.f_Inv_RT"),
                this.Client,
                probability,
                degFreedom1,
                degFreedom2);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsFact.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsFactRequestBuilder"/>.</returns>
        public IWorkbookFunctionsFactRequestBuilder Fact(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsFactRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.fact"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsFactDouble.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsFactDoubleRequestBuilder"/>.</returns>
        public IWorkbookFunctionsFactDoubleRequestBuilder FactDouble(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsFactDoubleRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.factDouble"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsFalse.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsFalseRequestBuilder"/>.</returns>
        public IWorkbookFunctionsFalseRequestBuilder False()
        {
            return new WorkbookFunctionsFalseRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.false"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsFind.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsFindRequestBuilder"/>.</returns>
        public IWorkbookFunctionsFindRequestBuilder Find(
            Newtonsoft.Json.Linq.JToken findText = null,
            Newtonsoft.Json.Linq.JToken withinText = null,
            Newtonsoft.Json.Linq.JToken startNum = null)
        {
            return new WorkbookFunctionsFindRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.find"),
                this.Client,
                findText,
                withinText,
                startNum);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsFindB.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsFindBRequestBuilder"/>.</returns>
        public IWorkbookFunctionsFindBRequestBuilder FindB(
            Newtonsoft.Json.Linq.JToken findText = null,
            Newtonsoft.Json.Linq.JToken withinText = null,
            Newtonsoft.Json.Linq.JToken startNum = null)
        {
            return new WorkbookFunctionsFindBRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.findB"),
                this.Client,
                findText,
                withinText,
                startNum);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsFisher.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsFisherRequestBuilder"/>.</returns>
        public IWorkbookFunctionsFisherRequestBuilder Fisher(
            Newtonsoft.Json.Linq.JToken x = null)
        {
            return new WorkbookFunctionsFisherRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.fisher"),
                this.Client,
                x);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsFisherInv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsFisherInvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsFisherInvRequestBuilder FisherInv(
            Newtonsoft.Json.Linq.JToken y = null)
        {
            return new WorkbookFunctionsFisherInvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.fisherInv"),
                this.Client,
                y);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsFixed.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsFixedRequestBuilder"/>.</returns>
        public IWorkbookFunctionsFixedRequestBuilder Fixed(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken decimals = null,
            Newtonsoft.Json.Linq.JToken noCommas = null)
        {
            return new WorkbookFunctionsFixedRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.fixed"),
                this.Client,
                number,
                decimals,
                noCommas);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsFloor_Math.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsFloor_MathRequestBuilder"/>.</returns>
        public IWorkbookFunctionsFloor_MathRequestBuilder Floor_Math(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken significance = null,
            Newtonsoft.Json.Linq.JToken mode = null)
        {
            return new WorkbookFunctionsFloor_MathRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.floor_Math"),
                this.Client,
                number,
                significance,
                mode);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsFloor_Precise.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsFloor_PreciseRequestBuilder"/>.</returns>
        public IWorkbookFunctionsFloor_PreciseRequestBuilder Floor_Precise(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken significance = null)
        {
            return new WorkbookFunctionsFloor_PreciseRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.floor_Precise"),
                this.Client,
                number,
                significance);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsFv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsFvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsFvRequestBuilder Fv(
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken nper = null,
            Newtonsoft.Json.Linq.JToken pmt = null,
            Newtonsoft.Json.Linq.JToken pv = null,
            Newtonsoft.Json.Linq.JToken type = null)
        {
            return new WorkbookFunctionsFvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.fv"),
                this.Client,
                rate,
                nper,
                pmt,
                pv,
                type);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsFvschedule.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsFvscheduleRequestBuilder"/>.</returns>
        public IWorkbookFunctionsFvscheduleRequestBuilder Fvschedule(
            Newtonsoft.Json.Linq.JToken principal = null,
            Newtonsoft.Json.Linq.JToken schedule = null)
        {
            return new WorkbookFunctionsFvscheduleRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.fvschedule"),
                this.Client,
                principal,
                schedule);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsGamma.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsGammaRequestBuilder"/>.</returns>
        public IWorkbookFunctionsGammaRequestBuilder Gamma(
            Newtonsoft.Json.Linq.JToken x = null)
        {
            return new WorkbookFunctionsGammaRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.gamma"),
                this.Client,
                x);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsGamma_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsGamma_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsGamma_DistRequestBuilder Gamma_Dist(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken alpha = null,
            Newtonsoft.Json.Linq.JToken beta = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsGamma_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.gamma_Dist"),
                this.Client,
                x,
                alpha,
                beta,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsGamma_Inv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsGamma_InvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsGamma_InvRequestBuilder Gamma_Inv(
            Newtonsoft.Json.Linq.JToken probability = null,
            Newtonsoft.Json.Linq.JToken alpha = null,
            Newtonsoft.Json.Linq.JToken beta = null)
        {
            return new WorkbookFunctionsGamma_InvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.gamma_Inv"),
                this.Client,
                probability,
                alpha,
                beta);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsGammaLn.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsGammaLnRequestBuilder"/>.</returns>
        public IWorkbookFunctionsGammaLnRequestBuilder GammaLn(
            Newtonsoft.Json.Linq.JToken x = null)
        {
            return new WorkbookFunctionsGammaLnRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.gammaLn"),
                this.Client,
                x);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsGammaLn_Precise.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsGammaLn_PreciseRequestBuilder"/>.</returns>
        public IWorkbookFunctionsGammaLn_PreciseRequestBuilder GammaLn_Precise(
            Newtonsoft.Json.Linq.JToken x = null)
        {
            return new WorkbookFunctionsGammaLn_PreciseRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.gammaLn_Precise"),
                this.Client,
                x);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsGauss.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsGaussRequestBuilder"/>.</returns>
        public IWorkbookFunctionsGaussRequestBuilder Gauss(
            Newtonsoft.Json.Linq.JToken x = null)
        {
            return new WorkbookFunctionsGaussRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.gauss"),
                this.Client,
                x);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsGcd.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsGcdRequestBuilder"/>.</returns>
        public IWorkbookFunctionsGcdRequestBuilder Gcd(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsGcdRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.gcd"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsGeoMean.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsGeoMeanRequestBuilder"/>.</returns>
        public IWorkbookFunctionsGeoMeanRequestBuilder GeoMean(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsGeoMeanRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.geoMean"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsGeStep.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsGeStepRequestBuilder"/>.</returns>
        public IWorkbookFunctionsGeStepRequestBuilder GeStep(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken step = null)
        {
            return new WorkbookFunctionsGeStepRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.geStep"),
                this.Client,
                number,
                step);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsHarMean.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsHarMeanRequestBuilder"/>.</returns>
        public IWorkbookFunctionsHarMeanRequestBuilder HarMean(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsHarMeanRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.harMean"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsHex2Bin.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsHex2BinRequestBuilder"/>.</returns>
        public IWorkbookFunctionsHex2BinRequestBuilder Hex2Bin(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken places = null)
        {
            return new WorkbookFunctionsHex2BinRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.hex2Bin"),
                this.Client,
                number,
                places);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsHex2Dec.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsHex2DecRequestBuilder"/>.</returns>
        public IWorkbookFunctionsHex2DecRequestBuilder Hex2Dec(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsHex2DecRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.hex2Dec"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsHex2Oct.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsHex2OctRequestBuilder"/>.</returns>
        public IWorkbookFunctionsHex2OctRequestBuilder Hex2Oct(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken places = null)
        {
            return new WorkbookFunctionsHex2OctRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.hex2Oct"),
                this.Client,
                number,
                places);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsHlookup.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsHlookupRequestBuilder"/>.</returns>
        public IWorkbookFunctionsHlookupRequestBuilder Hlookup(
            Newtonsoft.Json.Linq.JToken lookupValue = null,
            Newtonsoft.Json.Linq.JToken tableArray = null,
            Newtonsoft.Json.Linq.JToken rowIndexNum = null,
            Newtonsoft.Json.Linq.JToken rangeLookup = null)
        {
            return new WorkbookFunctionsHlookupRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.hlookup"),
                this.Client,
                lookupValue,
                tableArray,
                rowIndexNum,
                rangeLookup);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsHour.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsHourRequestBuilder"/>.</returns>
        public IWorkbookFunctionsHourRequestBuilder Hour(
            Newtonsoft.Json.Linq.JToken serialNumber = null)
        {
            return new WorkbookFunctionsHourRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.hour"),
                this.Client,
                serialNumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsHyperlink.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsHyperlinkRequestBuilder"/>.</returns>
        public IWorkbookFunctionsHyperlinkRequestBuilder Hyperlink(
            Newtonsoft.Json.Linq.JToken linkLocation = null,
            Newtonsoft.Json.Linq.JToken friendlyName = null)
        {
            return new WorkbookFunctionsHyperlinkRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.hyperlink"),
                this.Client,
                linkLocation,
                friendlyName);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsHypGeom_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsHypGeom_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsHypGeom_DistRequestBuilder HypGeom_Dist(
            Newtonsoft.Json.Linq.JToken sampleS = null,
            Newtonsoft.Json.Linq.JToken numberSample = null,
            Newtonsoft.Json.Linq.JToken populationS = null,
            Newtonsoft.Json.Linq.JToken numberPop = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsHypGeom_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.hypGeom_Dist"),
                this.Client,
                sampleS,
                numberSample,
                populationS,
                numberPop,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIf.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIfRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIfRequestBuilder If(
            Newtonsoft.Json.Linq.JToken logicalTest = null,
            Newtonsoft.Json.Linq.JToken valueIfTrue = null,
            Newtonsoft.Json.Linq.JToken valueIfFalse = null)
        {
            return new WorkbookFunctionsIfRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.if"),
                this.Client,
                logicalTest,
                valueIfTrue,
                valueIfFalse);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImAbs.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImAbsRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImAbsRequestBuilder ImAbs(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImAbsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imAbs"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImaginary.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImaginaryRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImaginaryRequestBuilder Imaginary(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImaginaryRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imaginary"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImArgument.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImArgumentRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImArgumentRequestBuilder ImArgument(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImArgumentRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imArgument"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImConjugate.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImConjugateRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImConjugateRequestBuilder ImConjugate(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImConjugateRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imConjugate"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImCos.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImCosRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImCosRequestBuilder ImCos(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImCosRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imCos"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImCosh.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImCoshRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImCoshRequestBuilder ImCosh(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImCoshRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imCosh"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImCot.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImCotRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImCotRequestBuilder ImCot(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImCotRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imCot"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImCsc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImCscRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImCscRequestBuilder ImCsc(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImCscRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imCsc"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImCsch.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImCschRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImCschRequestBuilder ImCsch(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImCschRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imCsch"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImDiv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImDivRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImDivRequestBuilder ImDiv(
            Newtonsoft.Json.Linq.JToken inumber1 = null,
            Newtonsoft.Json.Linq.JToken inumber2 = null)
        {
            return new WorkbookFunctionsImDivRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imDiv"),
                this.Client,
                inumber1,
                inumber2);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImExp.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImExpRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImExpRequestBuilder ImExp(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImExpRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imExp"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImLn.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImLnRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImLnRequestBuilder ImLn(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImLnRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imLn"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImLog10.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImLog10RequestBuilder"/>.</returns>
        public IWorkbookFunctionsImLog10RequestBuilder ImLog10(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImLog10RequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imLog10"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImLog2.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImLog2RequestBuilder"/>.</returns>
        public IWorkbookFunctionsImLog2RequestBuilder ImLog2(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImLog2RequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imLog2"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImPower.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImPowerRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImPowerRequestBuilder ImPower(
            Newtonsoft.Json.Linq.JToken inumber = null,
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsImPowerRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imPower"),
                this.Client,
                inumber,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImProduct.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImProductRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImProductRequestBuilder ImProduct(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsImProductRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imProduct"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImReal.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImRealRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImRealRequestBuilder ImReal(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImRealRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imReal"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImSec.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImSecRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImSecRequestBuilder ImSec(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImSecRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imSec"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImSech.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImSechRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImSechRequestBuilder ImSech(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImSechRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imSech"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImSin.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImSinRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImSinRequestBuilder ImSin(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImSinRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imSin"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImSinh.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImSinhRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImSinhRequestBuilder ImSinh(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImSinhRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imSinh"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImSqrt.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImSqrtRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImSqrtRequestBuilder ImSqrt(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImSqrtRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imSqrt"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImSub.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImSubRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImSubRequestBuilder ImSub(
            Newtonsoft.Json.Linq.JToken inumber1 = null,
            Newtonsoft.Json.Linq.JToken inumber2 = null)
        {
            return new WorkbookFunctionsImSubRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imSub"),
                this.Client,
                inumber1,
                inumber2);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImSum.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImSumRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImSumRequestBuilder ImSum(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsImSumRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imSum"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsImTan.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsImTanRequestBuilder"/>.</returns>
        public IWorkbookFunctionsImTanRequestBuilder ImTan(
            Newtonsoft.Json.Linq.JToken inumber = null)
        {
            return new WorkbookFunctionsImTanRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.imTan"),
                this.Client,
                inumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsInt.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIntRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIntRequestBuilder Int(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsIntRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.int"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIntRate.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIntRateRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIntRateRequestBuilder IntRate(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken investment = null,
            Newtonsoft.Json.Linq.JToken redemption = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsIntRateRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.intRate"),
                this.Client,
                settlement,
                maturity,
                investment,
                redemption,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIpmt.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIpmtRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIpmtRequestBuilder Ipmt(
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken per = null,
            Newtonsoft.Json.Linq.JToken nper = null,
            Newtonsoft.Json.Linq.JToken pv = null,
            Newtonsoft.Json.Linq.JToken fv = null,
            Newtonsoft.Json.Linq.JToken type = null)
        {
            return new WorkbookFunctionsIpmtRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.ipmt"),
                this.Client,
                rate,
                per,
                nper,
                pv,
                fv,
                type);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIrr.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIrrRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIrrRequestBuilder Irr(
            Newtonsoft.Json.Linq.JToken values = null,
            Newtonsoft.Json.Linq.JToken guess = null)
        {
            return new WorkbookFunctionsIrrRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.irr"),
                this.Client,
                values,
                guess);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIsErr.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIsErrRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIsErrRequestBuilder IsErr(
            Newtonsoft.Json.Linq.JToken value = null)
        {
            return new WorkbookFunctionsIsErrRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.isErr"),
                this.Client,
                value);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIsError.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIsErrorRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIsErrorRequestBuilder IsError(
            Newtonsoft.Json.Linq.JToken value = null)
        {
            return new WorkbookFunctionsIsErrorRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.isError"),
                this.Client,
                value);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIsEven.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIsEvenRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIsEvenRequestBuilder IsEven(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsIsEvenRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.isEven"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIsFormula.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIsFormulaRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIsFormulaRequestBuilder IsFormula(
            Newtonsoft.Json.Linq.JToken reference = null)
        {
            return new WorkbookFunctionsIsFormulaRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.isFormula"),
                this.Client,
                reference);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIsLogical.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIsLogicalRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIsLogicalRequestBuilder IsLogical(
            Newtonsoft.Json.Linq.JToken value = null)
        {
            return new WorkbookFunctionsIsLogicalRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.isLogical"),
                this.Client,
                value);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIsNA.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIsNARequestBuilder"/>.</returns>
        public IWorkbookFunctionsIsNARequestBuilder IsNA(
            Newtonsoft.Json.Linq.JToken value = null)
        {
            return new WorkbookFunctionsIsNARequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.isNA"),
                this.Client,
                value);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIsNonText.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIsNonTextRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIsNonTextRequestBuilder IsNonText(
            Newtonsoft.Json.Linq.JToken value = null)
        {
            return new WorkbookFunctionsIsNonTextRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.isNonText"),
                this.Client,
                value);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIsNumber.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIsNumberRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIsNumberRequestBuilder IsNumber(
            Newtonsoft.Json.Linq.JToken value = null)
        {
            return new WorkbookFunctionsIsNumberRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.isNumber"),
                this.Client,
                value);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIso_Ceiling.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIso_CeilingRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIso_CeilingRequestBuilder Iso_Ceiling(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken significance = null)
        {
            return new WorkbookFunctionsIso_CeilingRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.iso_Ceiling"),
                this.Client,
                number,
                significance);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIsOdd.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIsOddRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIsOddRequestBuilder IsOdd(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsIsOddRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.isOdd"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIsoWeekNum.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIsoWeekNumRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIsoWeekNumRequestBuilder IsoWeekNum(
            Newtonsoft.Json.Linq.JToken date = null)
        {
            return new WorkbookFunctionsIsoWeekNumRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.isoWeekNum"),
                this.Client,
                date);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIspmt.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIspmtRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIspmtRequestBuilder Ispmt(
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken per = null,
            Newtonsoft.Json.Linq.JToken nper = null,
            Newtonsoft.Json.Linq.JToken pv = null)
        {
            return new WorkbookFunctionsIspmtRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.ispmt"),
                this.Client,
                rate,
                per,
                nper,
                pv);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIsref.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIsrefRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIsrefRequestBuilder Isref(
            Newtonsoft.Json.Linq.JToken value = null)
        {
            return new WorkbookFunctionsIsrefRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.isref"),
                this.Client,
                value);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsIsText.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsIsTextRequestBuilder"/>.</returns>
        public IWorkbookFunctionsIsTextRequestBuilder IsText(
            Newtonsoft.Json.Linq.JToken value = null)
        {
            return new WorkbookFunctionsIsTextRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.isText"),
                this.Client,
                value);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsKurt.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsKurtRequestBuilder"/>.</returns>
        public IWorkbookFunctionsKurtRequestBuilder Kurt(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsKurtRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.kurt"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLarge.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLargeRequestBuilder"/>.</returns>
        public IWorkbookFunctionsLargeRequestBuilder Large(
            Newtonsoft.Json.Linq.JToken array = null,
            Newtonsoft.Json.Linq.JToken k = null)
        {
            return new WorkbookFunctionsLargeRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.large"),
                this.Client,
                array,
                k);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLcm.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLcmRequestBuilder"/>.</returns>
        public IWorkbookFunctionsLcmRequestBuilder Lcm(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsLcmRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.lcm"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLeft.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLeftRequestBuilder"/>.</returns>
        public IWorkbookFunctionsLeftRequestBuilder Left(
            Newtonsoft.Json.Linq.JToken text = null,
            Newtonsoft.Json.Linq.JToken numChars = null)
        {
            return new WorkbookFunctionsLeftRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.left"),
                this.Client,
                text,
                numChars);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLeftb.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLeftbRequestBuilder"/>.</returns>
        public IWorkbookFunctionsLeftbRequestBuilder Leftb(
            Newtonsoft.Json.Linq.JToken text = null,
            Newtonsoft.Json.Linq.JToken numBytes = null)
        {
            return new WorkbookFunctionsLeftbRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.leftb"),
                this.Client,
                text,
                numBytes);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLen.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLenRequestBuilder"/>.</returns>
        public IWorkbookFunctionsLenRequestBuilder Len(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsLenRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.len"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLenb.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLenbRequestBuilder"/>.</returns>
        public IWorkbookFunctionsLenbRequestBuilder Lenb(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsLenbRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.lenb"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLn.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLnRequestBuilder"/>.</returns>
        public IWorkbookFunctionsLnRequestBuilder Ln(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsLnRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.ln"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLog.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLogRequestBuilder"/>.</returns>
        public IWorkbookFunctionsLogRequestBuilder Log(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken @base = null)
        {
            return new WorkbookFunctionsLogRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.log"),
                this.Client,
                number,
                @base);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLog10.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLog10RequestBuilder"/>.</returns>
        public IWorkbookFunctionsLog10RequestBuilder Log10(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsLog10RequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.log10"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLogNorm_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLogNorm_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsLogNorm_DistRequestBuilder LogNorm_Dist(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken mean = null,
            Newtonsoft.Json.Linq.JToken standardDev = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsLogNorm_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.logNorm_Dist"),
                this.Client,
                x,
                mean,
                standardDev,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLogNorm_Inv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLogNorm_InvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsLogNorm_InvRequestBuilder LogNorm_Inv(
            Newtonsoft.Json.Linq.JToken probability = null,
            Newtonsoft.Json.Linq.JToken mean = null,
            Newtonsoft.Json.Linq.JToken standardDev = null)
        {
            return new WorkbookFunctionsLogNorm_InvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.logNorm_Inv"),
                this.Client,
                probability,
                mean,
                standardDev);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLookup.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLookupRequestBuilder"/>.</returns>
        public IWorkbookFunctionsLookupRequestBuilder Lookup(
            Newtonsoft.Json.Linq.JToken lookupValue = null,
            Newtonsoft.Json.Linq.JToken lookupVector = null,
            Newtonsoft.Json.Linq.JToken resultVector = null)
        {
            return new WorkbookFunctionsLookupRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.lookup"),
                this.Client,
                lookupValue,
                lookupVector,
                resultVector);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsLower.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsLowerRequestBuilder"/>.</returns>
        public IWorkbookFunctionsLowerRequestBuilder Lower(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsLowerRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.lower"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMatch.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMatchRequestBuilder"/>.</returns>
        public IWorkbookFunctionsMatchRequestBuilder Match(
            Newtonsoft.Json.Linq.JToken lookupValue = null,
            Newtonsoft.Json.Linq.JToken lookupArray = null,
            Newtonsoft.Json.Linq.JToken matchType = null)
        {
            return new WorkbookFunctionsMatchRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.match"),
                this.Client,
                lookupValue,
                lookupArray,
                matchType);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMax.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMaxRequestBuilder"/>.</returns>
        public IWorkbookFunctionsMaxRequestBuilder Max(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsMaxRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.max"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMaxA.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMaxARequestBuilder"/>.</returns>
        public IWorkbookFunctionsMaxARequestBuilder MaxA(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsMaxARequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.maxA"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMduration.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMdurationRequestBuilder"/>.</returns>
        public IWorkbookFunctionsMdurationRequestBuilder Mduration(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken coupon = null,
            Newtonsoft.Json.Linq.JToken yld = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsMdurationRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.mduration"),
                this.Client,
                settlement,
                maturity,
                coupon,
                yld,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMedian.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMedianRequestBuilder"/>.</returns>
        public IWorkbookFunctionsMedianRequestBuilder Median(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsMedianRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.median"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMid.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMidRequestBuilder"/>.</returns>
        public IWorkbookFunctionsMidRequestBuilder Mid(
            Newtonsoft.Json.Linq.JToken text = null,
            Newtonsoft.Json.Linq.JToken startNum = null,
            Newtonsoft.Json.Linq.JToken numChars = null)
        {
            return new WorkbookFunctionsMidRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.mid"),
                this.Client,
                text,
                startNum,
                numChars);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMidb.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMidbRequestBuilder"/>.</returns>
        public IWorkbookFunctionsMidbRequestBuilder Midb(
            Newtonsoft.Json.Linq.JToken text = null,
            Newtonsoft.Json.Linq.JToken startNum = null,
            Newtonsoft.Json.Linq.JToken numBytes = null)
        {
            return new WorkbookFunctionsMidbRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.midb"),
                this.Client,
                text,
                startNum,
                numBytes);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMin.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMinRequestBuilder"/>.</returns>
        public IWorkbookFunctionsMinRequestBuilder Min(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsMinRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.min"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMinA.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMinARequestBuilder"/>.</returns>
        public IWorkbookFunctionsMinARequestBuilder MinA(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsMinARequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.minA"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMinute.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMinuteRequestBuilder"/>.</returns>
        public IWorkbookFunctionsMinuteRequestBuilder Minute(
            Newtonsoft.Json.Linq.JToken serialNumber = null)
        {
            return new WorkbookFunctionsMinuteRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.minute"),
                this.Client,
                serialNumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMirr.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMirrRequestBuilder"/>.</returns>
        public IWorkbookFunctionsMirrRequestBuilder Mirr(
            Newtonsoft.Json.Linq.JToken values = null,
            Newtonsoft.Json.Linq.JToken financeRate = null,
            Newtonsoft.Json.Linq.JToken reinvestRate = null)
        {
            return new WorkbookFunctionsMirrRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.mirr"),
                this.Client,
                values,
                financeRate,
                reinvestRate);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMod.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsModRequestBuilder"/>.</returns>
        public IWorkbookFunctionsModRequestBuilder Mod(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken divisor = null)
        {
            return new WorkbookFunctionsModRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.mod"),
                this.Client,
                number,
                divisor);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMonth.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMonthRequestBuilder"/>.</returns>
        public IWorkbookFunctionsMonthRequestBuilder Month(
            Newtonsoft.Json.Linq.JToken serialNumber = null)
        {
            return new WorkbookFunctionsMonthRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.month"),
                this.Client,
                serialNumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMround.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMroundRequestBuilder"/>.</returns>
        public IWorkbookFunctionsMroundRequestBuilder Mround(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken multiple = null)
        {
            return new WorkbookFunctionsMroundRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.mround"),
                this.Client,
                number,
                multiple);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsMultiNomial.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsMultiNomialRequestBuilder"/>.</returns>
        public IWorkbookFunctionsMultiNomialRequestBuilder MultiNomial(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsMultiNomialRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.multiNomial"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsN.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNRequestBuilder N(
            Newtonsoft.Json.Linq.JToken value = null)
        {
            return new WorkbookFunctionsNRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.n"),
                this.Client,
                value);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNa.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNaRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNaRequestBuilder Na()
        {
            return new WorkbookFunctionsNaRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.na"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNegBinom_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNegBinom_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNegBinom_DistRequestBuilder NegBinom_Dist(
            Newtonsoft.Json.Linq.JToken numberF = null,
            Newtonsoft.Json.Linq.JToken numberS = null,
            Newtonsoft.Json.Linq.JToken probabilityS = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsNegBinom_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.negBinom_Dist"),
                this.Client,
                numberF,
                numberS,
                probabilityS,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNetworkDays.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNetworkDaysRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNetworkDaysRequestBuilder NetworkDays(
            Newtonsoft.Json.Linq.JToken startDate = null,
            Newtonsoft.Json.Linq.JToken endDate = null,
            Newtonsoft.Json.Linq.JToken holidays = null)
        {
            return new WorkbookFunctionsNetworkDaysRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.networkDays"),
                this.Client,
                startDate,
                endDate,
                holidays);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNetworkDays_Intl.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNetworkDays_IntlRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNetworkDays_IntlRequestBuilder NetworkDays_Intl(
            Newtonsoft.Json.Linq.JToken startDate = null,
            Newtonsoft.Json.Linq.JToken endDate = null,
            Newtonsoft.Json.Linq.JToken weekend = null,
            Newtonsoft.Json.Linq.JToken holidays = null)
        {
            return new WorkbookFunctionsNetworkDays_IntlRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.networkDays_Intl"),
                this.Client,
                startDate,
                endDate,
                weekend,
                holidays);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNominal.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNominalRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNominalRequestBuilder Nominal(
            Newtonsoft.Json.Linq.JToken effectRate = null,
            Newtonsoft.Json.Linq.JToken npery = null)
        {
            return new WorkbookFunctionsNominalRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.nominal"),
                this.Client,
                effectRate,
                npery);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNorm_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNorm_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNorm_DistRequestBuilder Norm_Dist(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken mean = null,
            Newtonsoft.Json.Linq.JToken standardDev = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsNorm_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.norm_Dist"),
                this.Client,
                x,
                mean,
                standardDev,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNorm_Inv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNorm_InvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNorm_InvRequestBuilder Norm_Inv(
            Newtonsoft.Json.Linq.JToken probability = null,
            Newtonsoft.Json.Linq.JToken mean = null,
            Newtonsoft.Json.Linq.JToken standardDev = null)
        {
            return new WorkbookFunctionsNorm_InvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.norm_Inv"),
                this.Client,
                probability,
                mean,
                standardDev);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNorm_S_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNorm_S_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNorm_S_DistRequestBuilder Norm_S_Dist(
            Newtonsoft.Json.Linq.JToken z = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsNorm_S_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.norm_S_Dist"),
                this.Client,
                z,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNorm_S_Inv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNorm_S_InvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNorm_S_InvRequestBuilder Norm_S_Inv(
            Newtonsoft.Json.Linq.JToken probability = null)
        {
            return new WorkbookFunctionsNorm_S_InvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.norm_S_Inv"),
                this.Client,
                probability);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNot.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNotRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNotRequestBuilder Not(
            Newtonsoft.Json.Linq.JToken logical = null)
        {
            return new WorkbookFunctionsNotRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.not"),
                this.Client,
                logical);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNow.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNowRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNowRequestBuilder Now()
        {
            return new WorkbookFunctionsNowRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.now"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNper.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNperRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNperRequestBuilder Nper(
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken pmt = null,
            Newtonsoft.Json.Linq.JToken pv = null,
            Newtonsoft.Json.Linq.JToken fv = null,
            Newtonsoft.Json.Linq.JToken type = null)
        {
            return new WorkbookFunctionsNperRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.nper"),
                this.Client,
                rate,
                pmt,
                pv,
                fv,
                type);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNpv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNpvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNpvRequestBuilder Npv(
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsNpvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.npv"),
                this.Client,
                rate,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsNumberValue.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsNumberValueRequestBuilder"/>.</returns>
        public IWorkbookFunctionsNumberValueRequestBuilder NumberValue(
            Newtonsoft.Json.Linq.JToken text = null,
            Newtonsoft.Json.Linq.JToken decimalSeparator = null,
            Newtonsoft.Json.Linq.JToken groupSeparator = null)
        {
            return new WorkbookFunctionsNumberValueRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.numberValue"),
                this.Client,
                text,
                decimalSeparator,
                groupSeparator);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsOct2Bin.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsOct2BinRequestBuilder"/>.</returns>
        public IWorkbookFunctionsOct2BinRequestBuilder Oct2Bin(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken places = null)
        {
            return new WorkbookFunctionsOct2BinRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.oct2Bin"),
                this.Client,
                number,
                places);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsOct2Dec.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsOct2DecRequestBuilder"/>.</returns>
        public IWorkbookFunctionsOct2DecRequestBuilder Oct2Dec(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsOct2DecRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.oct2Dec"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsOct2Hex.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsOct2HexRequestBuilder"/>.</returns>
        public IWorkbookFunctionsOct2HexRequestBuilder Oct2Hex(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken places = null)
        {
            return new WorkbookFunctionsOct2HexRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.oct2Hex"),
                this.Client,
                number,
                places);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsOdd.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsOddRequestBuilder"/>.</returns>
        public IWorkbookFunctionsOddRequestBuilder Odd(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsOddRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.odd"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsOddFPrice.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsOddFPriceRequestBuilder"/>.</returns>
        public IWorkbookFunctionsOddFPriceRequestBuilder OddFPrice(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken issue = null,
            Newtonsoft.Json.Linq.JToken firstCoupon = null,
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken yld = null,
            Newtonsoft.Json.Linq.JToken redemption = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsOddFPriceRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.oddFPrice"),
                this.Client,
                settlement,
                maturity,
                issue,
                firstCoupon,
                rate,
                yld,
                redemption,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsOddFYield.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsOddFYieldRequestBuilder"/>.</returns>
        public IWorkbookFunctionsOddFYieldRequestBuilder OddFYield(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken issue = null,
            Newtonsoft.Json.Linq.JToken firstCoupon = null,
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken pr = null,
            Newtonsoft.Json.Linq.JToken redemption = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsOddFYieldRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.oddFYield"),
                this.Client,
                settlement,
                maturity,
                issue,
                firstCoupon,
                rate,
                pr,
                redemption,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsOddLPrice.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsOddLPriceRequestBuilder"/>.</returns>
        public IWorkbookFunctionsOddLPriceRequestBuilder OddLPrice(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken lastInterest = null,
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken yld = null,
            Newtonsoft.Json.Linq.JToken redemption = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsOddLPriceRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.oddLPrice"),
                this.Client,
                settlement,
                maturity,
                lastInterest,
                rate,
                yld,
                redemption,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsOddLYield.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsOddLYieldRequestBuilder"/>.</returns>
        public IWorkbookFunctionsOddLYieldRequestBuilder OddLYield(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken lastInterest = null,
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken pr = null,
            Newtonsoft.Json.Linq.JToken redemption = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsOddLYieldRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.oddLYield"),
                this.Client,
                settlement,
                maturity,
                lastInterest,
                rate,
                pr,
                redemption,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsOr.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsOrRequestBuilder"/>.</returns>
        public IWorkbookFunctionsOrRequestBuilder Or(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsOrRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.or"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPduration.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPdurationRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPdurationRequestBuilder Pduration(
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken pv = null,
            Newtonsoft.Json.Linq.JToken fv = null)
        {
            return new WorkbookFunctionsPdurationRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.pduration"),
                this.Client,
                rate,
                pv,
                fv);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPercentile_Exc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPercentile_ExcRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPercentile_ExcRequestBuilder Percentile_Exc(
            Newtonsoft.Json.Linq.JToken array = null,
            Newtonsoft.Json.Linq.JToken k = null)
        {
            return new WorkbookFunctionsPercentile_ExcRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.percentile_Exc"),
                this.Client,
                array,
                k);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPercentile_Inc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPercentile_IncRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPercentile_IncRequestBuilder Percentile_Inc(
            Newtonsoft.Json.Linq.JToken array = null,
            Newtonsoft.Json.Linq.JToken k = null)
        {
            return new WorkbookFunctionsPercentile_IncRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.percentile_Inc"),
                this.Client,
                array,
                k);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPercentRank_Exc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPercentRank_ExcRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPercentRank_ExcRequestBuilder PercentRank_Exc(
            Newtonsoft.Json.Linq.JToken array = null,
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken significance = null)
        {
            return new WorkbookFunctionsPercentRank_ExcRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.percentRank_Exc"),
                this.Client,
                array,
                x,
                significance);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPercentRank_Inc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPercentRank_IncRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPercentRank_IncRequestBuilder PercentRank_Inc(
            Newtonsoft.Json.Linq.JToken array = null,
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken significance = null)
        {
            return new WorkbookFunctionsPercentRank_IncRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.percentRank_Inc"),
                this.Client,
                array,
                x,
                significance);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPermut.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPermutRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPermutRequestBuilder Permut(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken numberChosen = null)
        {
            return new WorkbookFunctionsPermutRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.permut"),
                this.Client,
                number,
                numberChosen);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPermutationa.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPermutationaRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPermutationaRequestBuilder Permutationa(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken numberChosen = null)
        {
            return new WorkbookFunctionsPermutationaRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.permutationa"),
                this.Client,
                number,
                numberChosen);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPhi.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPhiRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPhiRequestBuilder Phi(
            Newtonsoft.Json.Linq.JToken x = null)
        {
            return new WorkbookFunctionsPhiRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.phi"),
                this.Client,
                x);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPi.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPiRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPiRequestBuilder Pi()
        {
            return new WorkbookFunctionsPiRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.pi"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPmt.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPmtRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPmtRequestBuilder Pmt(
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken nper = null,
            Newtonsoft.Json.Linq.JToken pv = null,
            Newtonsoft.Json.Linq.JToken fv = null,
            Newtonsoft.Json.Linq.JToken type = null)
        {
            return new WorkbookFunctionsPmtRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.pmt"),
                this.Client,
                rate,
                nper,
                pv,
                fv,
                type);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPoisson_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPoisson_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPoisson_DistRequestBuilder Poisson_Dist(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken mean = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsPoisson_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.poisson_Dist"),
                this.Client,
                x,
                mean,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPower.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPowerRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPowerRequestBuilder Power(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken power = null)
        {
            return new WorkbookFunctionsPowerRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.power"),
                this.Client,
                number,
                power);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPpmt.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPpmtRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPpmtRequestBuilder Ppmt(
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken per = null,
            Newtonsoft.Json.Linq.JToken nper = null,
            Newtonsoft.Json.Linq.JToken pv = null,
            Newtonsoft.Json.Linq.JToken fv = null,
            Newtonsoft.Json.Linq.JToken type = null)
        {
            return new WorkbookFunctionsPpmtRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.ppmt"),
                this.Client,
                rate,
                per,
                nper,
                pv,
                fv,
                type);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPrice.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPriceRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPriceRequestBuilder Price(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken yld = null,
            Newtonsoft.Json.Linq.JToken redemption = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsPriceRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.price"),
                this.Client,
                settlement,
                maturity,
                rate,
                yld,
                redemption,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPriceDisc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPriceDiscRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPriceDiscRequestBuilder PriceDisc(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken discount = null,
            Newtonsoft.Json.Linq.JToken redemption = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsPriceDiscRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.priceDisc"),
                this.Client,
                settlement,
                maturity,
                discount,
                redemption,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPriceMat.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPriceMatRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPriceMatRequestBuilder PriceMat(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken issue = null,
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken yld = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsPriceMatRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.priceMat"),
                this.Client,
                settlement,
                maturity,
                issue,
                rate,
                yld,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsProduct.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsProductRequestBuilder"/>.</returns>
        public IWorkbookFunctionsProductRequestBuilder Product(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsProductRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.product"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsProper.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsProperRequestBuilder"/>.</returns>
        public IWorkbookFunctionsProperRequestBuilder Proper(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsProperRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.proper"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsPv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsPvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsPvRequestBuilder Pv(
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken nper = null,
            Newtonsoft.Json.Linq.JToken pmt = null,
            Newtonsoft.Json.Linq.JToken fv = null,
            Newtonsoft.Json.Linq.JToken type = null)
        {
            return new WorkbookFunctionsPvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.pv"),
                this.Client,
                rate,
                nper,
                pmt,
                fv,
                type);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsQuartile_Exc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsQuartile_ExcRequestBuilder"/>.</returns>
        public IWorkbookFunctionsQuartile_ExcRequestBuilder Quartile_Exc(
            Newtonsoft.Json.Linq.JToken array = null,
            Newtonsoft.Json.Linq.JToken quart = null)
        {
            return new WorkbookFunctionsQuartile_ExcRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.quartile_Exc"),
                this.Client,
                array,
                quart);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsQuartile_Inc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsQuartile_IncRequestBuilder"/>.</returns>
        public IWorkbookFunctionsQuartile_IncRequestBuilder Quartile_Inc(
            Newtonsoft.Json.Linq.JToken array = null,
            Newtonsoft.Json.Linq.JToken quart = null)
        {
            return new WorkbookFunctionsQuartile_IncRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.quartile_Inc"),
                this.Client,
                array,
                quart);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsQuotient.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsQuotientRequestBuilder"/>.</returns>
        public IWorkbookFunctionsQuotientRequestBuilder Quotient(
            Newtonsoft.Json.Linq.JToken numerator = null,
            Newtonsoft.Json.Linq.JToken denominator = null)
        {
            return new WorkbookFunctionsQuotientRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.quotient"),
                this.Client,
                numerator,
                denominator);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRadians.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRadiansRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRadiansRequestBuilder Radians(
            Newtonsoft.Json.Linq.JToken angle = null)
        {
            return new WorkbookFunctionsRadiansRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.radians"),
                this.Client,
                angle);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRand.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRandRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRandRequestBuilder Rand()
        {
            return new WorkbookFunctionsRandRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.rand"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRandBetween.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRandBetweenRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRandBetweenRequestBuilder RandBetween(
            Newtonsoft.Json.Linq.JToken bottom = null,
            Newtonsoft.Json.Linq.JToken top = null)
        {
            return new WorkbookFunctionsRandBetweenRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.randBetween"),
                this.Client,
                bottom,
                top);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRank_Avg.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRank_AvgRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRank_AvgRequestBuilder Rank_Avg(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken @ref = null,
            Newtonsoft.Json.Linq.JToken order = null)
        {
            return new WorkbookFunctionsRank_AvgRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.rank_Avg"),
                this.Client,
                number,
                @ref,
                order);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRank_Eq.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRank_EqRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRank_EqRequestBuilder Rank_Eq(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken @ref = null,
            Newtonsoft.Json.Linq.JToken order = null)
        {
            return new WorkbookFunctionsRank_EqRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.rank_Eq"),
                this.Client,
                number,
                @ref,
                order);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRate.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRateRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRateRequestBuilder Rate(
            Newtonsoft.Json.Linq.JToken nper = null,
            Newtonsoft.Json.Linq.JToken pmt = null,
            Newtonsoft.Json.Linq.JToken pv = null,
            Newtonsoft.Json.Linq.JToken fv = null,
            Newtonsoft.Json.Linq.JToken type = null,
            Newtonsoft.Json.Linq.JToken guess = null)
        {
            return new WorkbookFunctionsRateRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.rate"),
                this.Client,
                nper,
                pmt,
                pv,
                fv,
                type,
                guess);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsReceived.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsReceivedRequestBuilder"/>.</returns>
        public IWorkbookFunctionsReceivedRequestBuilder Received(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken investment = null,
            Newtonsoft.Json.Linq.JToken discount = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsReceivedRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.received"),
                this.Client,
                settlement,
                maturity,
                investment,
                discount,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsReplace.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsReplaceRequestBuilder"/>.</returns>
        public IWorkbookFunctionsReplaceRequestBuilder Replace(
            Newtonsoft.Json.Linq.JToken oldText = null,
            Newtonsoft.Json.Linq.JToken startNum = null,
            Newtonsoft.Json.Linq.JToken numChars = null,
            Newtonsoft.Json.Linq.JToken newText = null)
        {
            return new WorkbookFunctionsReplaceRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.replace"),
                this.Client,
                oldText,
                startNum,
                numChars,
                newText);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsReplaceB.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsReplaceBRequestBuilder"/>.</returns>
        public IWorkbookFunctionsReplaceBRequestBuilder ReplaceB(
            Newtonsoft.Json.Linq.JToken oldText = null,
            Newtonsoft.Json.Linq.JToken startNum = null,
            Newtonsoft.Json.Linq.JToken numBytes = null,
            Newtonsoft.Json.Linq.JToken newText = null)
        {
            return new WorkbookFunctionsReplaceBRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.replaceB"),
                this.Client,
                oldText,
                startNum,
                numBytes,
                newText);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRept.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsReptRequestBuilder"/>.</returns>
        public IWorkbookFunctionsReptRequestBuilder Rept(
            Newtonsoft.Json.Linq.JToken text = null,
            Newtonsoft.Json.Linq.JToken numberTimes = null)
        {
            return new WorkbookFunctionsReptRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.rept"),
                this.Client,
                text,
                numberTimes);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRight.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRightRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRightRequestBuilder Right(
            Newtonsoft.Json.Linq.JToken text = null,
            Newtonsoft.Json.Linq.JToken numChars = null)
        {
            return new WorkbookFunctionsRightRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.right"),
                this.Client,
                text,
                numChars);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRightb.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRightbRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRightbRequestBuilder Rightb(
            Newtonsoft.Json.Linq.JToken text = null,
            Newtonsoft.Json.Linq.JToken numBytes = null)
        {
            return new WorkbookFunctionsRightbRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.rightb"),
                this.Client,
                text,
                numBytes);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRoman.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRomanRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRomanRequestBuilder Roman(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken form = null)
        {
            return new WorkbookFunctionsRomanRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.roman"),
                this.Client,
                number,
                form);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRound.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRoundRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRoundRequestBuilder Round(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken numDigits = null)
        {
            return new WorkbookFunctionsRoundRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.round"),
                this.Client,
                number,
                numDigits);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRoundDown.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRoundDownRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRoundDownRequestBuilder RoundDown(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken numDigits = null)
        {
            return new WorkbookFunctionsRoundDownRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.roundDown"),
                this.Client,
                number,
                numDigits);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRoundUp.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRoundUpRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRoundUpRequestBuilder RoundUp(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken numDigits = null)
        {
            return new WorkbookFunctionsRoundUpRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.roundUp"),
                this.Client,
                number,
                numDigits);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRows.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRowsRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRowsRequestBuilder Rows(
            Newtonsoft.Json.Linq.JToken array = null)
        {
            return new WorkbookFunctionsRowsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.rows"),
                this.Client,
                array);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsRri.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsRriRequestBuilder"/>.</returns>
        public IWorkbookFunctionsRriRequestBuilder Rri(
            Newtonsoft.Json.Linq.JToken nper = null,
            Newtonsoft.Json.Linq.JToken pv = null,
            Newtonsoft.Json.Linq.JToken fv = null)
        {
            return new WorkbookFunctionsRriRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.rri"),
                this.Client,
                nper,
                pv,
                fv);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSec.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSecRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSecRequestBuilder Sec(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsSecRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sec"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSech.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSechRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSechRequestBuilder Sech(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsSechRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sech"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSecond.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSecondRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSecondRequestBuilder Second(
            Newtonsoft.Json.Linq.JToken serialNumber = null)
        {
            return new WorkbookFunctionsSecondRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.second"),
                this.Client,
                serialNumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSeriesSum.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSeriesSumRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSeriesSumRequestBuilder SeriesSum(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken n = null,
            Newtonsoft.Json.Linq.JToken m = null,
            Newtonsoft.Json.Linq.JToken coefficients = null)
        {
            return new WorkbookFunctionsSeriesSumRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.seriesSum"),
                this.Client,
                x,
                n,
                m,
                coefficients);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSheet.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSheetRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSheetRequestBuilder Sheet(
            Newtonsoft.Json.Linq.JToken value = null)
        {
            return new WorkbookFunctionsSheetRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sheet"),
                this.Client,
                value);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSheets.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSheetsRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSheetsRequestBuilder Sheets(
            Newtonsoft.Json.Linq.JToken reference = null)
        {
            return new WorkbookFunctionsSheetsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sheets"),
                this.Client,
                reference);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSign.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSignRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSignRequestBuilder Sign(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsSignRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sign"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSin.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSinRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSinRequestBuilder Sin(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsSinRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sin"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSinh.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSinhRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSinhRequestBuilder Sinh(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsSinhRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sinh"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSkew.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSkewRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSkewRequestBuilder Skew(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsSkewRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.skew"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSkew_p.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSkew_pRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSkew_pRequestBuilder Skew_p(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsSkew_pRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.skew_p"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSln.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSlnRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSlnRequestBuilder Sln(
            Newtonsoft.Json.Linq.JToken cost = null,
            Newtonsoft.Json.Linq.JToken salvage = null,
            Newtonsoft.Json.Linq.JToken life = null)
        {
            return new WorkbookFunctionsSlnRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sln"),
                this.Client,
                cost,
                salvage,
                life);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSmall.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSmallRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSmallRequestBuilder Small(
            Newtonsoft.Json.Linq.JToken array = null,
            Newtonsoft.Json.Linq.JToken k = null)
        {
            return new WorkbookFunctionsSmallRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.small"),
                this.Client,
                array,
                k);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSqrt.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSqrtRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSqrtRequestBuilder Sqrt(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsSqrtRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sqrt"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSqrtPi.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSqrtPiRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSqrtPiRequestBuilder SqrtPi(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsSqrtPiRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sqrtPi"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsStandardize.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsStandardizeRequestBuilder"/>.</returns>
        public IWorkbookFunctionsStandardizeRequestBuilder Standardize(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken mean = null,
            Newtonsoft.Json.Linq.JToken standardDev = null)
        {
            return new WorkbookFunctionsStandardizeRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.standardize"),
                this.Client,
                x,
                mean,
                standardDev);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsStDev_P.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsStDev_PRequestBuilder"/>.</returns>
        public IWorkbookFunctionsStDev_PRequestBuilder StDev_P(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsStDev_PRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.stDev_P"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsStDev_S.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsStDev_SRequestBuilder"/>.</returns>
        public IWorkbookFunctionsStDev_SRequestBuilder StDev_S(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsStDev_SRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.stDev_S"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsStDevA.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsStDevARequestBuilder"/>.</returns>
        public IWorkbookFunctionsStDevARequestBuilder StDevA(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsStDevARequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.stDevA"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsStDevPA.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsStDevPARequestBuilder"/>.</returns>
        public IWorkbookFunctionsStDevPARequestBuilder StDevPA(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsStDevPARequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.stDevPA"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSubstitute.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSubstituteRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSubstituteRequestBuilder Substitute(
            Newtonsoft.Json.Linq.JToken text = null,
            Newtonsoft.Json.Linq.JToken oldText = null,
            Newtonsoft.Json.Linq.JToken newText = null,
            Newtonsoft.Json.Linq.JToken instanceNum = null)
        {
            return new WorkbookFunctionsSubstituteRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.substitute"),
                this.Client,
                text,
                oldText,
                newText,
                instanceNum);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSubtotal.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSubtotalRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSubtotalRequestBuilder Subtotal(
            Newtonsoft.Json.Linq.JToken functionNum = null,
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsSubtotalRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.subtotal"),
                this.Client,
                functionNum,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSum.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSumRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSumRequestBuilder Sum(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsSumRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sum"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSumIf.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSumIfRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSumIfRequestBuilder SumIf(
            Newtonsoft.Json.Linq.JToken range = null,
            Newtonsoft.Json.Linq.JToken criteria = null,
            Newtonsoft.Json.Linq.JToken sumRange = null)
        {
            return new WorkbookFunctionsSumIfRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sumIf"),
                this.Client,
                range,
                criteria,
                sumRange);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSumIfs.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSumIfsRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSumIfsRequestBuilder SumIfs(
            Newtonsoft.Json.Linq.JToken sumRange = null,
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsSumIfsRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sumIfs"),
                this.Client,
                sumRange,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSumSq.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSumSqRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSumSqRequestBuilder SumSq(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsSumSqRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.sumSq"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsSyd.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsSydRequestBuilder"/>.</returns>
        public IWorkbookFunctionsSydRequestBuilder Syd(
            Newtonsoft.Json.Linq.JToken cost = null,
            Newtonsoft.Json.Linq.JToken salvage = null,
            Newtonsoft.Json.Linq.JToken life = null,
            Newtonsoft.Json.Linq.JToken per = null)
        {
            return new WorkbookFunctionsSydRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.syd"),
                this.Client,
                cost,
                salvage,
                life,
                per);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsT.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTRequestBuilder T(
            Newtonsoft.Json.Linq.JToken value = null)
        {
            return new WorkbookFunctionsTRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.t"),
                this.Client,
                value);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsT_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsT_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsT_DistRequestBuilder T_Dist(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken degFreedom = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsT_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.t_Dist"),
                this.Client,
                x,
                degFreedom,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsT_Dist_2T.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsT_Dist_2TRequestBuilder"/>.</returns>
        public IWorkbookFunctionsT_Dist_2TRequestBuilder T_Dist_2T(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken degFreedom = null)
        {
            return new WorkbookFunctionsT_Dist_2TRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.t_Dist_2T"),
                this.Client,
                x,
                degFreedom);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsT_Dist_RT.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsT_Dist_RTRequestBuilder"/>.</returns>
        public IWorkbookFunctionsT_Dist_RTRequestBuilder T_Dist_RT(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken degFreedom = null)
        {
            return new WorkbookFunctionsT_Dist_RTRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.t_Dist_RT"),
                this.Client,
                x,
                degFreedom);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsT_Inv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsT_InvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsT_InvRequestBuilder T_Inv(
            Newtonsoft.Json.Linq.JToken probability = null,
            Newtonsoft.Json.Linq.JToken degFreedom = null)
        {
            return new WorkbookFunctionsT_InvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.t_Inv"),
                this.Client,
                probability,
                degFreedom);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsT_Inv_2T.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsT_Inv_2TRequestBuilder"/>.</returns>
        public IWorkbookFunctionsT_Inv_2TRequestBuilder T_Inv_2T(
            Newtonsoft.Json.Linq.JToken probability = null,
            Newtonsoft.Json.Linq.JToken degFreedom = null)
        {
            return new WorkbookFunctionsT_Inv_2TRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.t_Inv_2T"),
                this.Client,
                probability,
                degFreedom);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsTan.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTanRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTanRequestBuilder Tan(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsTanRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.tan"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsTanh.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTanhRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTanhRequestBuilder Tanh(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsTanhRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.tanh"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsTbillEq.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTbillEqRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTbillEqRequestBuilder TbillEq(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken discount = null)
        {
            return new WorkbookFunctionsTbillEqRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.tbillEq"),
                this.Client,
                settlement,
                maturity,
                discount);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsTbillPrice.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTbillPriceRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTbillPriceRequestBuilder TbillPrice(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken discount = null)
        {
            return new WorkbookFunctionsTbillPriceRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.tbillPrice"),
                this.Client,
                settlement,
                maturity,
                discount);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsTbillYield.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTbillYieldRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTbillYieldRequestBuilder TbillYield(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken pr = null)
        {
            return new WorkbookFunctionsTbillYieldRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.tbillYield"),
                this.Client,
                settlement,
                maturity,
                pr);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsText.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTextRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTextRequestBuilder Text(
            Newtonsoft.Json.Linq.JToken value = null,
            Newtonsoft.Json.Linq.JToken formatText = null)
        {
            return new WorkbookFunctionsTextRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.text"),
                this.Client,
                value,
                formatText);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsTime.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTimeRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTimeRequestBuilder Time(
            Newtonsoft.Json.Linq.JToken hour = null,
            Newtonsoft.Json.Linq.JToken minute = null,
            Newtonsoft.Json.Linq.JToken second = null)
        {
            return new WorkbookFunctionsTimeRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.time"),
                this.Client,
                hour,
                minute,
                second);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsTimevalue.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTimevalueRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTimevalueRequestBuilder Timevalue(
            Newtonsoft.Json.Linq.JToken timeText = null)
        {
            return new WorkbookFunctionsTimevalueRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.timevalue"),
                this.Client,
                timeText);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsToday.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTodayRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTodayRequestBuilder Today()
        {
            return new WorkbookFunctionsTodayRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.today"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsTrim.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTrimRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTrimRequestBuilder Trim(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsTrimRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.trim"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsTrimMean.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTrimMeanRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTrimMeanRequestBuilder TrimMean(
            Newtonsoft.Json.Linq.JToken array = null,
            Newtonsoft.Json.Linq.JToken percent = null)
        {
            return new WorkbookFunctionsTrimMeanRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.trimMean"),
                this.Client,
                array,
                percent);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsTrue.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTrueRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTrueRequestBuilder True()
        {
            return new WorkbookFunctionsTrueRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.true"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsTrunc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTruncRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTruncRequestBuilder Trunc(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken numDigits = null)
        {
            return new WorkbookFunctionsTruncRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.trunc"),
                this.Client,
                number,
                numDigits);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsType.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsTypeRequestBuilder"/>.</returns>
        public IWorkbookFunctionsTypeRequestBuilder Type(
            Newtonsoft.Json.Linq.JToken value = null)
        {
            return new WorkbookFunctionsTypeRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.type"),
                this.Client,
                value);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsUnichar.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsUnicharRequestBuilder"/>.</returns>
        public IWorkbookFunctionsUnicharRequestBuilder Unichar(
            Newtonsoft.Json.Linq.JToken number = null)
        {
            return new WorkbookFunctionsUnicharRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.unichar"),
                this.Client,
                number);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsUnicode.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsUnicodeRequestBuilder"/>.</returns>
        public IWorkbookFunctionsUnicodeRequestBuilder Unicode(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsUnicodeRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.unicode"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsUpper.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsUpperRequestBuilder"/>.</returns>
        public IWorkbookFunctionsUpperRequestBuilder Upper(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsUpperRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.upper"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsUsdollar.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsUsdollarRequestBuilder"/>.</returns>
        public IWorkbookFunctionsUsdollarRequestBuilder Usdollar(
            Newtonsoft.Json.Linq.JToken number = null,
            Newtonsoft.Json.Linq.JToken decimals = null)
        {
            return new WorkbookFunctionsUsdollarRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.usdollar"),
                this.Client,
                number,
                decimals);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsValue.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsValueRequestBuilder"/>.</returns>
        public IWorkbookFunctionsValueRequestBuilder Value(
            Newtonsoft.Json.Linq.JToken text = null)
        {
            return new WorkbookFunctionsValueRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.value"),
                this.Client,
                text);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsVar_P.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsVar_PRequestBuilder"/>.</returns>
        public IWorkbookFunctionsVar_PRequestBuilder Var_P(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsVar_PRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.var_P"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsVar_S.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsVar_SRequestBuilder"/>.</returns>
        public IWorkbookFunctionsVar_SRequestBuilder Var_S(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsVar_SRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.var_S"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsVarA.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsVarARequestBuilder"/>.</returns>
        public IWorkbookFunctionsVarARequestBuilder VarA(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsVarARequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.varA"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsVarPA.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsVarPARequestBuilder"/>.</returns>
        public IWorkbookFunctionsVarPARequestBuilder VarPA(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsVarPARequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.varPA"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsVdb.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsVdbRequestBuilder"/>.</returns>
        public IWorkbookFunctionsVdbRequestBuilder Vdb(
            Newtonsoft.Json.Linq.JToken cost = null,
            Newtonsoft.Json.Linq.JToken salvage = null,
            Newtonsoft.Json.Linq.JToken life = null,
            Newtonsoft.Json.Linq.JToken startPeriod = null,
            Newtonsoft.Json.Linq.JToken endPeriod = null,
            Newtonsoft.Json.Linq.JToken factor = null,
            Newtonsoft.Json.Linq.JToken noSwitch = null)
        {
            return new WorkbookFunctionsVdbRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.vdb"),
                this.Client,
                cost,
                salvage,
                life,
                startPeriod,
                endPeriod,
                factor,
                noSwitch);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsVlookup.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsVlookupRequestBuilder"/>.</returns>
        public IWorkbookFunctionsVlookupRequestBuilder Vlookup(
            Newtonsoft.Json.Linq.JToken lookupValue = null,
            Newtonsoft.Json.Linq.JToken tableArray = null,
            Newtonsoft.Json.Linq.JToken colIndexNum = null,
            Newtonsoft.Json.Linq.JToken rangeLookup = null)
        {
            return new WorkbookFunctionsVlookupRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.vlookup"),
                this.Client,
                lookupValue,
                tableArray,
                colIndexNum,
                rangeLookup);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsWeekday.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsWeekdayRequestBuilder"/>.</returns>
        public IWorkbookFunctionsWeekdayRequestBuilder Weekday(
            Newtonsoft.Json.Linq.JToken serialNumber = null,
            Newtonsoft.Json.Linq.JToken returnType = null)
        {
            return new WorkbookFunctionsWeekdayRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.weekday"),
                this.Client,
                serialNumber,
                returnType);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsWeekNum.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsWeekNumRequestBuilder"/>.</returns>
        public IWorkbookFunctionsWeekNumRequestBuilder WeekNum(
            Newtonsoft.Json.Linq.JToken serialNumber = null,
            Newtonsoft.Json.Linq.JToken returnType = null)
        {
            return new WorkbookFunctionsWeekNumRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.weekNum"),
                this.Client,
                serialNumber,
                returnType);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsWeibull_Dist.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsWeibull_DistRequestBuilder"/>.</returns>
        public IWorkbookFunctionsWeibull_DistRequestBuilder Weibull_Dist(
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken alpha = null,
            Newtonsoft.Json.Linq.JToken beta = null,
            Newtonsoft.Json.Linq.JToken cumulative = null)
        {
            return new WorkbookFunctionsWeibull_DistRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.weibull_Dist"),
                this.Client,
                x,
                alpha,
                beta,
                cumulative);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsWorkDay.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsWorkDayRequestBuilder"/>.</returns>
        public IWorkbookFunctionsWorkDayRequestBuilder WorkDay(
            Newtonsoft.Json.Linq.JToken startDate = null,
            Newtonsoft.Json.Linq.JToken days = null,
            Newtonsoft.Json.Linq.JToken holidays = null)
        {
            return new WorkbookFunctionsWorkDayRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.workDay"),
                this.Client,
                startDate,
                days,
                holidays);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsWorkDay_Intl.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsWorkDay_IntlRequestBuilder"/>.</returns>
        public IWorkbookFunctionsWorkDay_IntlRequestBuilder WorkDay_Intl(
            Newtonsoft.Json.Linq.JToken startDate = null,
            Newtonsoft.Json.Linq.JToken days = null,
            Newtonsoft.Json.Linq.JToken weekend = null,
            Newtonsoft.Json.Linq.JToken holidays = null)
        {
            return new WorkbookFunctionsWorkDay_IntlRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.workDay_Intl"),
                this.Client,
                startDate,
                days,
                weekend,
                holidays);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsXirr.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsXirrRequestBuilder"/>.</returns>
        public IWorkbookFunctionsXirrRequestBuilder Xirr(
            Newtonsoft.Json.Linq.JToken values = null,
            Newtonsoft.Json.Linq.JToken dates = null,
            Newtonsoft.Json.Linq.JToken guess = null)
        {
            return new WorkbookFunctionsXirrRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.xirr"),
                this.Client,
                values,
                dates,
                guess);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsXnpv.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsXnpvRequestBuilder"/>.</returns>
        public IWorkbookFunctionsXnpvRequestBuilder Xnpv(
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken values = null,
            Newtonsoft.Json.Linq.JToken dates = null)
        {
            return new WorkbookFunctionsXnpvRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.xnpv"),
                this.Client,
                rate,
                values,
                dates);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsXor.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsXorRequestBuilder"/>.</returns>
        public IWorkbookFunctionsXorRequestBuilder Xor(
            Newtonsoft.Json.Linq.JToken values = null)
        {
            return new WorkbookFunctionsXorRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.xor"),
                this.Client,
                values);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsYear.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsYearRequestBuilder"/>.</returns>
        public IWorkbookFunctionsYearRequestBuilder Year(
            Newtonsoft.Json.Linq.JToken serialNumber = null)
        {
            return new WorkbookFunctionsYearRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.year"),
                this.Client,
                serialNumber);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsYearFrac.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsYearFracRequestBuilder"/>.</returns>
        public IWorkbookFunctionsYearFracRequestBuilder YearFrac(
            Newtonsoft.Json.Linq.JToken startDate = null,
            Newtonsoft.Json.Linq.JToken endDate = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsYearFracRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.yearFrac"),
                this.Client,
                startDate,
                endDate,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsYield.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsYieldRequestBuilder"/>.</returns>
        public IWorkbookFunctionsYieldRequestBuilder Yield(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken pr = null,
            Newtonsoft.Json.Linq.JToken redemption = null,
            Newtonsoft.Json.Linq.JToken frequency = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsYieldRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.yield"),
                this.Client,
                settlement,
                maturity,
                rate,
                pr,
                redemption,
                frequency,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsYieldDisc.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsYieldDiscRequestBuilder"/>.</returns>
        public IWorkbookFunctionsYieldDiscRequestBuilder YieldDisc(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken pr = null,
            Newtonsoft.Json.Linq.JToken redemption = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsYieldDiscRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.yieldDisc"),
                this.Client,
                settlement,
                maturity,
                pr,
                redemption,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsYieldMat.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsYieldMatRequestBuilder"/>.</returns>
        public IWorkbookFunctionsYieldMatRequestBuilder YieldMat(
            Newtonsoft.Json.Linq.JToken settlement = null,
            Newtonsoft.Json.Linq.JToken maturity = null,
            Newtonsoft.Json.Linq.JToken issue = null,
            Newtonsoft.Json.Linq.JToken rate = null,
            Newtonsoft.Json.Linq.JToken pr = null,
            Newtonsoft.Json.Linq.JToken basis = null)
        {
            return new WorkbookFunctionsYieldMatRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.yieldMat"),
                this.Client,
                settlement,
                maturity,
                issue,
                rate,
                pr,
                basis);
        }

        /// <summary>
        /// Gets the request builder for WorkbookFunctionsZ_Test.
        /// </summary>
        /// <returns>The <see cref="IWorkbookFunctionsZ_TestRequestBuilder"/>.</returns>
        public IWorkbookFunctionsZ_TestRequestBuilder Z_Test(
            Newtonsoft.Json.Linq.JToken array = null,
            Newtonsoft.Json.Linq.JToken x = null,
            Newtonsoft.Json.Linq.JToken sigma = null)
        {
            return new WorkbookFunctionsZ_TestRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.z_Test"),
                this.Client,
                array,
                x,
                sigma);
        }
    
    }
}
