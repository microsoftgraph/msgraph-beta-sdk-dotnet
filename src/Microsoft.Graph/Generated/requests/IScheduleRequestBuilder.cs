// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Requests\IEntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The interface IScheduleRequestBuilder.
    /// </summary>
    public partial interface IScheduleRequestBuilder : IEntityRequestBuilder
    {
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        new IScheduleRequest Request();

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        new IScheduleRequest Request(IEnumerable<Option> options);
    
        /// <summary>
        /// Gets the request builder for OfferShiftRequests.
        /// </summary>
        /// <returns>The <see cref="IScheduleOfferShiftRequestsCollectionRequestBuilder"/>.</returns>
        IScheduleOfferShiftRequestsCollectionRequestBuilder OfferShiftRequests { get; }

        /// <summary>
        /// Gets the request builder for OpenShiftChangeRequests.
        /// </summary>
        /// <returns>The <see cref="IScheduleOpenShiftChangeRequestsCollectionRequestBuilder"/>.</returns>
        IScheduleOpenShiftChangeRequestsCollectionRequestBuilder OpenShiftChangeRequests { get; }

        /// <summary>
        /// Gets the request builder for OpenShifts.
        /// </summary>
        /// <returns>The <see cref="IScheduleOpenShiftsCollectionRequestBuilder"/>.</returns>
        IScheduleOpenShiftsCollectionRequestBuilder OpenShifts { get; }

        /// <summary>
        /// Gets the request builder for SchedulingGroups.
        /// </summary>
        /// <returns>The <see cref="IScheduleSchedulingGroupsCollectionRequestBuilder"/>.</returns>
        IScheduleSchedulingGroupsCollectionRequestBuilder SchedulingGroups { get; }

        /// <summary>
        /// Gets the request builder for Shifts.
        /// </summary>
        /// <returns>The <see cref="IScheduleShiftsCollectionRequestBuilder"/>.</returns>
        IScheduleShiftsCollectionRequestBuilder Shifts { get; }

        /// <summary>
        /// Gets the request builder for SwapShiftsChangeRequests.
        /// </summary>
        /// <returns>The <see cref="IScheduleSwapShiftsChangeRequestsCollectionRequestBuilder"/>.</returns>
        IScheduleSwapShiftsChangeRequestsCollectionRequestBuilder SwapShiftsChangeRequests { get; }

        /// <summary>
        /// Gets the request builder for TimeOffReasons.
        /// </summary>
        /// <returns>The <see cref="IScheduleTimeOffReasonsCollectionRequestBuilder"/>.</returns>
        IScheduleTimeOffReasonsCollectionRequestBuilder TimeOffReasons { get; }

        /// <summary>
        /// Gets the request builder for TimeOffRequests.
        /// </summary>
        /// <returns>The <see cref="IScheduleTimeOffRequestsCollectionRequestBuilder"/>.</returns>
        IScheduleTimeOffRequestsCollectionRequestBuilder TimeOffRequests { get; }

        /// <summary>
        /// Gets the request builder for TimesOff.
        /// </summary>
        /// <returns>The <see cref="IScheduleTimesOffCollectionRequestBuilder"/>.</returns>
        IScheduleTimesOffCollectionRequestBuilder TimesOff { get; }
    
        /// <summary>
        /// Gets the request builder for ScheduleShare.
        /// </summary>
        /// <returns>The <see cref="IScheduleShareRequestBuilder"/>.</returns>
        IScheduleShareRequestBuilder Share(
            bool? notifyTeam = null,
            DateTimeOffset? startDateTime = null,
            DateTimeOffset? endDateTime = null);
    
    }
}
