// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: EntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The type TimeCardRequestBuilder.
    /// </summary>
    public partial class TimeCardRequestBuilder : ChangeTrackedEntityRequestBuilder, ITimeCardRequestBuilder
    {

        /// <summary>
        /// Constructs a new TimeCardRequestBuilder.
        /// </summary>
        /// <param name="requestUrl">The URL for the built request.</param>
        /// <param name="client">The <see cref="IBaseClient"/> for handling requests.</param>
        public TimeCardRequestBuilder(
            string requestUrl,
            IBaseClient client)
            : base(requestUrl, client)
        {
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        public new ITimeCardRequest Request()
        {
            return this.Request(null);
        }

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        public new ITimeCardRequest Request(IEnumerable<Option> options)
        {
            return new TimeCardRequest(this.RequestUrl, this.Client, options);
        }
    
        /// <summary>
        /// Gets the request builder for TimeCardClockOut.
        /// </summary>
        /// <returns>The <see cref="ITimeCardClockOutRequestBuilder"/>.</returns>
        public ITimeCardClockOutRequestBuilder ClockOut(
            bool? atApprovedLocation = null,
            ItemBody notes = null)
        {
            return new TimeCardClockOutRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.clockOut"),
                this.Client,
                atApprovedLocation,
                notes);
        }

        /// <summary>
        /// Gets the request builder for TimeCardConfirm.
        /// </summary>
        /// <returns>The <see cref="ITimeCardConfirmRequestBuilder"/>.</returns>
        public ITimeCardConfirmRequestBuilder Confirm()
        {
            return new TimeCardConfirmRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.confirm"),
                this.Client);
        }

        /// <summary>
        /// Gets the request builder for TimeCardEndBreak.
        /// </summary>
        /// <returns>The <see cref="ITimeCardEndBreakRequestBuilder"/>.</returns>
        public ITimeCardEndBreakRequestBuilder EndBreak(
            bool? atApprovedLocation = null,
            ItemBody notes = null)
        {
            return new TimeCardEndBreakRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.endBreak"),
                this.Client,
                atApprovedLocation,
                notes);
        }

        /// <summary>
        /// Gets the request builder for TimeCardStartBreak.
        /// </summary>
        /// <returns>The <see cref="ITimeCardStartBreakRequestBuilder"/>.</returns>
        public ITimeCardStartBreakRequestBuilder StartBreak(
            bool? atApprovedLocation = null,
            ItemBody notes = null)
        {
            return new TimeCardStartBreakRequestBuilder(
                this.AppendSegmentToRequestUrl("microsoft.graph.startBreak"),
                this.Client,
                atApprovedLocation,
                notes);
        }
    
    }
}
