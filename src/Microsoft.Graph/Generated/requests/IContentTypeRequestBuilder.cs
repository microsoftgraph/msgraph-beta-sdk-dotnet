// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: IEntityRequestBuilder.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;

    /// <summary>
    /// The interface IContentTypeRequestBuilder.
    /// </summary>
    public partial interface IContentTypeRequestBuilder : IEntityRequestBuilder
    {
        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <returns>The built request.</returns>
        new IContentTypeRequest Request();

        /// <summary>
        /// Builds the request.
        /// </summary>
        /// <param name="options">The query and header options for the request.</param>
        /// <returns>The built request.</returns>
        new IContentTypeRequest Request(IEnumerable<Option> options);
    
        /// <summary>
        /// Gets the request builder for Base.
        /// </summary>
        /// <returns>The <see cref="IContentTypeWithReferenceRequestBuilder"/>.</returns>
        IContentTypeWithReferenceRequestBuilder Base { get; }

        /// <summary>
        /// Gets the request builder for BaseTypes.
        /// </summary>
        /// <returns>The <see cref="IContentTypeBaseTypesCollectionWithReferencesRequestBuilder"/>.</returns>
        IContentTypeBaseTypesCollectionWithReferencesRequestBuilder BaseTypes { get; }

        /// <summary>
        /// Gets the request builder for ColumnLinks.
        /// </summary>
        /// <returns>The <see cref="IContentTypeColumnLinksCollectionRequestBuilder"/>.</returns>
        IContentTypeColumnLinksCollectionRequestBuilder ColumnLinks { get; }

        /// <summary>
        /// Gets the request builder for ColumnPositions.
        /// </summary>
        /// <returns>The <see cref="IContentTypeColumnPositionsCollectionWithReferencesRequestBuilder"/>.</returns>
        IContentTypeColumnPositionsCollectionWithReferencesRequestBuilder ColumnPositions { get; }

        /// <summary>
        /// Gets the request builder for Columns.
        /// </summary>
        /// <returns>The <see cref="IContentTypeColumnsCollectionRequestBuilder"/>.</returns>
        IContentTypeColumnsCollectionRequestBuilder Columns { get; }
    
        /// <summary>
        /// Gets the request builder for ContentTypePublish.
        /// </summary>
        /// <returns>The <see cref="IContentTypePublishRequestBuilder"/>.</returns>
        IContentTypePublishRequestBuilder Publish();

        /// <summary>
        /// Gets the request builder for ContentTypeUnpublish.
        /// </summary>
        /// <returns>The <see cref="IContentTypeUnpublishRequestBuilder"/>.</returns>
        IContentTypeUnpublishRequestBuilder Unpublish();

        /// <summary>
        /// Gets the request builder for ContentTypeAssociateWithHubSites.
        /// </summary>
        /// <returns>The <see cref="IContentTypeAssociateWithHubSitesRequestBuilder"/>.</returns>
        IContentTypeAssociateWithHubSitesRequestBuilder AssociateWithHubSites(
            IEnumerable<string> hubSiteUrls,
            bool? propagateToExistingLists = null);

        /// <summary>
        /// Gets the request builder for ContentTypeCopyToDefaultContentLocation.
        /// </summary>
        /// <returns>The <see cref="IContentTypeCopyToDefaultContentLocationRequestBuilder"/>.</returns>
        IContentTypeCopyToDefaultContentLocationRequestBuilder CopyToDefaultContentLocation(
            ItemReference sourceFile,
            string destinationFileName = null);

        /// <summary>
        /// Gets the request builder for ContentTypeIsPublished.
        /// </summary>
        /// <returns>The <see cref="IContentTypeIsPublishedRequestBuilder"/>.</returns>
        IContentTypeIsPublishedRequestBuilder IsPublished();
    
    }
}
