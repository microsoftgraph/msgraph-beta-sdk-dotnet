// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\MethodRequestBody.cs.tt

namespace Microsoft.Graph
{
    using Newtonsoft.Json;
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;

    /// <summary>
    /// The type CallRecordRequestBody.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class CallRecordRequestBody
    {
    
        /// <summary>
        /// Gets or sets Prompts.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "prompts", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<Prompt> Prompts { get; set; }
    
        /// <summary>
        /// Gets or sets BargeInAllowed.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "bargeInAllowed", Required = Newtonsoft.Json.Required.Default)]
        public bool? BargeInAllowed { get; set; }
    
        /// <summary>
        /// Gets or sets InitialSilenceTimeoutInSeconds.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "initialSilenceTimeoutInSeconds", Required = Newtonsoft.Json.Required.Default)]
        public Int32? InitialSilenceTimeoutInSeconds { get; set; }
    
        /// <summary>
        /// Gets or sets MaxSilenceTimeoutInSeconds.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "maxSilenceTimeoutInSeconds", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MaxSilenceTimeoutInSeconds { get; set; }
    
        /// <summary>
        /// Gets or sets MaxRecordDurationInSeconds.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "maxRecordDurationInSeconds", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MaxRecordDurationInSeconds { get; set; }
    
        /// <summary>
        /// Gets or sets PlayBeep.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "playBeep", Required = Newtonsoft.Json.Required.Default)]
        public bool? PlayBeep { get; set; }
    
        /// <summary>
        /// Gets or sets StreamWhileRecording.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "streamWhileRecording", Required = Newtonsoft.Json.Required.Default)]
        public bool? StreamWhileRecording { get; set; }
    
        /// <summary>
        /// Gets or sets StopTones.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "stopTones", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> StopTones { get; set; }
    
        /// <summary>
        /// Gets or sets ClientContext.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "clientContext", Required = Newtonsoft.Json.Required.Default)]
        public string ClientContext { get; set; }
    
    }
}
