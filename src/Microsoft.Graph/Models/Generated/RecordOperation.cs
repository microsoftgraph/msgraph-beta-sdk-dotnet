// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Record Operation.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class RecordOperation : CommsOperation
    {
    
        /// <summary>
        /// Gets or sets prompts.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "prompts", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<Prompt> Prompts { get; set; }
    
        /// <summary>
        /// Gets or sets barge in allowed.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "bargeInAllowed", Required = Newtonsoft.Json.Required.Default)]
        public bool? BargeInAllowed { get; set; }
    
        /// <summary>
        /// Gets or sets initial silence timeout in seconds.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "initialSilenceTimeoutInSeconds", Required = Newtonsoft.Json.Required.Default)]
        public Int32? InitialSilenceTimeoutInSeconds { get; set; }
    
        /// <summary>
        /// Gets or sets max silence timeout in seconds.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "maxSilenceTimeoutInSeconds", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MaxSilenceTimeoutInSeconds { get; set; }
    
        /// <summary>
        /// Gets or sets max record duration in seconds.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "maxRecordDurationInSeconds", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MaxRecordDurationInSeconds { get; set; }
    
        /// <summary>
        /// Gets or sets play beep.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "playBeep", Required = Newtonsoft.Json.Required.Default)]
        public bool? PlayBeep { get; set; }
    
        /// <summary>
        /// Gets or sets stream while recording.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "streamWhileRecording", Required = Newtonsoft.Json.Required.Default)]
        public bool? StreamWhileRecording { get; set; }
    
        /// <summary>
        /// Gets or sets stop tones.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "stopTones", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> StopTones { get; set; }
    
        /// <summary>
        /// Gets or sets record resource location.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "recordResourceLocation", Required = Newtonsoft.Json.Required.Default)]
        public string RecordResourceLocation { get; set; }
    
        /// <summary>
        /// Gets or sets completion reason.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "completionReason", Required = Newtonsoft.Json.Required.Default)]
        public RecordCompletionReason? CompletionReason { get; set; }
    
    }
}

