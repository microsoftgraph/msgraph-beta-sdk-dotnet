// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Windows10Enrollment Completion Page Configuration.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class Windows10EnrollmentCompletionPageConfiguration : DeviceEnrollmentConfiguration
    {
    
        /// <summary>
        /// Gets or sets show installation progress.
        /// Show or hide installation progress to user
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "showInstallationProgress", Required = Newtonsoft.Json.Required.Default)]
        public bool? ShowInstallationProgress { get; set; }
    
        /// <summary>
        /// Gets or sets block device setup retry by user.
        /// Allow the user to retry the setup on installation failure
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "blockDeviceSetupRetryByUser", Required = Newtonsoft.Json.Required.Default)]
        public bool? BlockDeviceSetupRetryByUser { get; set; }
    
        /// <summary>
        /// Gets or sets allow device reset on install failure.
        /// Allow or block device reset on installation failure
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "allowDeviceResetOnInstallFailure", Required = Newtonsoft.Json.Required.Default)]
        public bool? AllowDeviceResetOnInstallFailure { get; set; }
    
        /// <summary>
        /// Gets or sets allow log collection on install failure.
        /// Allow or block log collection on installation failure
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "allowLogCollectionOnInstallFailure", Required = Newtonsoft.Json.Required.Default)]
        public bool? AllowLogCollectionOnInstallFailure { get; set; }
    
        /// <summary>
        /// Gets or sets custom error message.
        /// Set custom error message to show upon installation failure
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "customErrorMessage", Required = Newtonsoft.Json.Required.Default)]
        public string CustomErrorMessage { get; set; }
    
        /// <summary>
        /// Gets or sets install progress timeout in minutes.
        /// Set installation progress timeout in minutes
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "installProgressTimeoutInMinutes", Required = Newtonsoft.Json.Required.Default)]
        public Int32? InstallProgressTimeoutInMinutes { get; set; }
    
        /// <summary>
        /// Gets or sets allow device use on install failure.
        /// Allow the user to continue using the device on installation failure
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "allowDeviceUseOnInstallFailure", Required = Newtonsoft.Json.Required.Default)]
        public bool? AllowDeviceUseOnInstallFailure { get; set; }
    
        /// <summary>
        /// Gets or sets selected mobile app ids.
        /// Selected applications to track the installation status
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "selectedMobileAppIds", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> SelectedMobileAppIds { get; set; }
    
    }
}

