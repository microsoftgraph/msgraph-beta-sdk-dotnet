// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type WindowsMalwareOverview.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class WindowsMalwareOverview
    {

        /// <summary>
        /// Gets or sets malwareDetectedDeviceCount.
        /// Count of devices with malware detected in the last 30 days
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "malwareDetectedDeviceCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MalwareDetectedDeviceCount { get; set; }
    
        /// <summary>
        /// Gets or sets malwareStateSummary.
        /// Count of devices per malware state
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "malwareStateSummary", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<WindowsMalwareStateCount> MalwareStateSummary { get; set; }
    
        /// <summary>
        /// Gets or sets malwareExecutionStateSummary.
        /// Count of devices per malware execution state
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "malwareExecutionStateSummary", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<WindowsMalwareExecutionStateCount> MalwareExecutionStateSummary { get; set; }
    
        /// <summary>
        /// Gets or sets malwareCategorySummary.
        /// Count of devices per malware category
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "malwareCategorySummary", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<WindowsMalwareCategoryCount> MalwareCategorySummary { get; set; }
    
        /// <summary>
        /// Gets or sets malwareNameSummary.
        /// Count of devices per malware
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "malwareNameSummary", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<WindowsMalwareNameCount> MalwareNameSummary { get; set; }
    
        /// <summary>
        /// Gets or sets osVersionsSummary.
        /// Count of devices with malware per windows OS version
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "osVersionsSummary", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<OsVersionCount> OsVersionsSummary { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "@odata.type", Required = Newtonsoft.Json.Required.Default)]
        public string ODataType { get; set; }
    
    }
}
