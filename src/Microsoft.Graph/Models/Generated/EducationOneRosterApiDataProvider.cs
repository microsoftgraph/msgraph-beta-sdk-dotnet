// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type EducationOneRosterApiDataProvider.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class EducationOneRosterApiDataProvider : EducationSynchronizationDataProvider
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EducationOneRosterApiDataProvider"/> class.
        /// </summary>
        public EducationOneRosterApiDataProvider()
        {
            this.ODataType = "microsoft.graph.educationOneRosterApiDataProvider";
        }

        /// <summary>
        /// Gets or sets connectionUrl.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "connectionUrl", Required = Newtonsoft.Json.Required.Default)]
        public string ConnectionUrl { get; set; }
    
        /// <summary>
        /// Gets or sets connectionSettings.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "connectionSettings", Required = Newtonsoft.Json.Required.Default)]
        public EducationSynchronizationConnectionSettings ConnectionSettings { get; set; }
    
        /// <summary>
        /// Gets or sets schoolsIds.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "schoolsIds", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> SchoolsIds { get; set; }
    
        /// <summary>
        /// Gets or sets termIds.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "termIds", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> TermIds { get; set; }
    
        /// <summary>
        /// Gets or sets providerName.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "providerName", Required = Newtonsoft.Json.Required.Default)]
        public string ProviderName { get; set; }
    
        /// <summary>
        /// Gets or sets customizations.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "customizations", Required = Newtonsoft.Json.Required.Default)]
        public EducationSynchronizationCustomizations Customizations { get; set; }
    
    }
}
