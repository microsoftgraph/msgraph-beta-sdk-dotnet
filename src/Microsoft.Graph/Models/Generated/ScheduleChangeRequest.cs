// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Schedule Change Request.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class ScheduleChangeRequestObject : ChangeTrackedEntity
    {
    
		///<summary>
		/// The internal ScheduleChangeRequest constructor
		///</summary>
        protected internal ScheduleChangeRequestObject()
        {
            // Don't allow initialization of abstract entity types
        }
    
        /// <summary>
        /// Gets or sets assigned to.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "assignedTo", Required = Newtonsoft.Json.Required.Default)]
        public ScheduleChangeRequestActor? AssignedTo { get; set; }
    
        /// <summary>
        /// Gets or sets state.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "state", Required = Newtonsoft.Json.Required.Default)]
        public ScheduleChangeState? State { get; set; }
    
        /// <summary>
        /// Gets or sets sender message.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "senderMessage", Required = Newtonsoft.Json.Required.Default)]
        public string SenderMessage { get; set; }
    
        /// <summary>
        /// Gets or sets sender date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "senderDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? SenderDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets manager action message.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "managerActionMessage", Required = Newtonsoft.Json.Required.Default)]
        public string ManagerActionMessage { get; set; }
    
        /// <summary>
        /// Gets or sets manager action date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "managerActionDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? ManagerActionDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets sender user id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "senderUserId", Required = Newtonsoft.Json.Required.Default)]
        public string SenderUserId { get; set; }
    
        /// <summary>
        /// Gets or sets manager user id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "managerUserId", Required = Newtonsoft.Json.Required.Default)]
        public string ManagerUserId { get; set; }
    
    }
}

