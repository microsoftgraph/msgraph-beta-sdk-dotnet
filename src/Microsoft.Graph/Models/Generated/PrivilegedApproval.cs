// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Privileged Approval.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class PrivilegedApproval : Entity
    {
    
        /// <summary>
        /// Gets or sets user id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "userId", Required = Newtonsoft.Json.Required.Default)]
        public string UserId { get; set; }
    
        /// <summary>
        /// Gets or sets role id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "roleId", Required = Newtonsoft.Json.Required.Default)]
        public string RoleId { get; set; }
    
        /// <summary>
        /// Gets or sets approval type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "approvalType", Required = Newtonsoft.Json.Required.Default)]
        public string ApprovalType { get; set; }
    
        /// <summary>
        /// Gets or sets approval state.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "approvalState", Required = Newtonsoft.Json.Required.Default)]
        public ApprovalState? ApprovalState { get; set; }
    
        /// <summary>
        /// Gets or sets approval duration.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "approvalDuration", Required = Newtonsoft.Json.Required.Default)]
        public Duration ApprovalDuration { get; set; }
    
        /// <summary>
        /// Gets or sets requestor reason.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "requestorReason", Required = Newtonsoft.Json.Required.Default)]
        public string RequestorReason { get; set; }
    
        /// <summary>
        /// Gets or sets approver reason.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "approverReason", Required = Newtonsoft.Json.Required.Default)]
        public string ApproverReason { get; set; }
    
        /// <summary>
        /// Gets or sets start date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "startDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? StartDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets end date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "endDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? EndDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets request.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "request", Required = Newtonsoft.Json.Required.Default)]
        public PrivilegedRoleAssignmentRequest Request { get; set; }
    
        /// <summary>
        /// Gets or sets role info.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "roleInfo", Required = Newtonsoft.Json.Required.Default)]
        public PrivilegedRole RoleInfo { get; set; }
    
    }
}

