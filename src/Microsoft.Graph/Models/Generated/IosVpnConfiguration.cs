// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Ios Vpn Configuration.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class IosVpnConfiguration : AppleVpnConfiguration
    {
    
		///<summary>
		/// The IosVpnConfiguration constructor
		///</summary>
        public IosVpnConfiguration()
        {
            this.ODataType = "microsoft.graph.iosVpnConfiguration";
        }
	
        /// <summary>
        /// Gets or sets user domain.
        /// Zscaler only. Enter a static domain to pre-populate the login field with in the Zscaler app. If this is left empty, the user's Azure Active Directory domain will be used instead.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "userDomain", Required = Newtonsoft.Json.Required.Default)]
        public string UserDomain { get; set; }
    
        /// <summary>
        /// Gets or sets strict enforcement.
        /// Zscaler only. Blocks network traffic until the user signs into Zscaler app. "True" means traffic is blocked.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "strictEnforcement", Required = Newtonsoft.Json.Required.Default)]
        public bool? StrictEnforcement { get; set; }
    
        /// <summary>
        /// Gets or sets cloud name.
        /// Zscaler only. Zscaler cloud which the user is assigned to.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "cloudName", Required = Newtonsoft.Json.Required.Default)]
        public string CloudName { get; set; }
    
        /// <summary>
        /// Gets or sets exclude list.
        /// Zscaler only. List of network addresses which are not sent through the Zscaler cloud.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "excludeList", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> ExcludeList { get; set; }
    
        /// <summary>
        /// Gets or sets targeted mobile apps.
        /// Targeted mobile apps. This collection can contain a maximum of 500 elements.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "targetedMobileApps", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<AppListItem> TargetedMobileApps { get; set; }
    
        /// <summary>
        /// Gets or sets identity certificate.
        /// Identity certificate for client authentication when authentication method is certificate.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "identityCertificate", Required = Newtonsoft.Json.Required.Default)]
        public IosCertificateProfileBase IdentityCertificate { get; set; }
    
        /// <summary>
        /// Gets or sets derived credential settings.
        /// Tenant level settings for the Derived Credentials to be used for authentication.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "derivedCredentialSettings", Required = Newtonsoft.Json.Required.Default)]
        public DeviceManagementDerivedCredentialSettings DerivedCredentialSettings { get; set; }
    
    }
}

