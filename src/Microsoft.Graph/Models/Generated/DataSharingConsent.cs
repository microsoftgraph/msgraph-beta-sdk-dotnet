// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Data Sharing Consent.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class DataSharingConsent : Entity
    {
    
        /// <summary>
        /// Gets or sets service display name.
        /// The display name of the service work flow
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "serviceDisplayName", Required = Newtonsoft.Json.Required.Default)]
        public string ServiceDisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets terms url.
        /// The TermsUrl for the data sharing consent
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "termsUrl", Required = Newtonsoft.Json.Required.Default)]
        public string TermsUrl { get; set; }
    
        /// <summary>
        /// Gets or sets granted.
        /// The granted state for the data sharing consent
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "granted", Required = Newtonsoft.Json.Required.Default)]
        public bool? Granted { get; set; }
    
        /// <summary>
        /// Gets or sets grant date time.
        /// The time consent was granted for this account
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "grantDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? GrantDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets granted by upn.
        /// The Upn of the user that granted consent for this account
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "grantedByUpn", Required = Newtonsoft.Json.Required.Default)]
        public string GrantedByUpn { get; set; }
    
        /// <summary>
        /// Gets or sets granted by user id.
        /// The UserId of the user that granted consent for this account
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "grantedByUserId", Required = Newtonsoft.Json.Required.Default)]
        public string GrantedByUserId { get; set; }
    
    }
}

