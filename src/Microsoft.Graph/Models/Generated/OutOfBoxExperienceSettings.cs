// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type OutOfBoxExperienceSettings.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class OutOfBoxExperienceSettings
    {

        /// <summary>
        /// Gets or sets hidePrivacySettings.
        /// Show or hide privacy settings to user
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "hidePrivacySettings", Required = Newtonsoft.Json.Required.Default)]
        public bool? HidePrivacySettings { get; set; }
    
        /// <summary>
        /// Gets or sets hideEULA.
        /// Show or hide EULA to user
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "hideEULA", Required = Newtonsoft.Json.Required.Default)]
        public bool? HideEULA { get; set; }
    
        /// <summary>
        /// Gets or sets userType.
        /// Type of user
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "userType", Required = Newtonsoft.Json.Required.Default)]
        public WindowsUserType? UserType { get; set; }
    
        /// <summary>
        /// Gets or sets deviceUsageType.
        /// AAD join authentication type
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "deviceUsageType", Required = Newtonsoft.Json.Required.Default)]
        public WindowsDeviceUsageType? DeviceUsageType { get; set; }
    
        /// <summary>
        /// Gets or sets skipKeyboardSelectionPage.
        /// If set, then skip the keyboard selection page if Language and Region are set
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "skipKeyboardSelectionPage", Required = Newtonsoft.Json.Required.Default)]
        public bool? SkipKeyboardSelectionPage { get; set; }
    
        /// <summary>
        /// Gets or sets hideEscapeLink.
        /// If set to true, then the user can't start over with different account, on company sign-in
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "hideEscapeLink", Required = Newtonsoft.Json.Required.Default)]
        public bool? HideEscapeLink { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }

        /// <summary>
        /// Gets or sets @odata.type.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "@odata.type", Required = Newtonsoft.Json.Required.Default)]
        public string ODataType { get; set; }
    
    }
}
