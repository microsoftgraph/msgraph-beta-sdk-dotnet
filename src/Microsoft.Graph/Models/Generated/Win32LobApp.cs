// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Win32Lob App.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class Win32LobApp : MobileLobApp
    {
    
		///<summary>
		/// The Win32LobApp constructor
		///</summary>
        public Win32LobApp()
        {
            this.ODataType = "microsoft.graph.win32LobApp";
        }
	
        /// <summary>
        /// Gets or sets install command line.
        /// The command line to install this app
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "installCommandLine", Required = Newtonsoft.Json.Required.Default)]
        public string InstallCommandLine { get; set; }
    
        /// <summary>
        /// Gets or sets uninstall command line.
        /// The command line to uninstall this app
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "uninstallCommandLine", Required = Newtonsoft.Json.Required.Default)]
        public string UninstallCommandLine { get; set; }
    
        /// <summary>
        /// Gets or sets applicable architectures.
        /// The Windows architecture(s) for which this app can run on.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "applicableArchitectures", Required = Newtonsoft.Json.Required.Default)]
        public WindowsArchitecture? ApplicableArchitectures { get; set; }
    
        /// <summary>
        /// Gets or sets minimum supported operating system.
        /// The value for the minimum applicable operating system.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "minimumSupportedOperatingSystem", Required = Newtonsoft.Json.Required.Default)]
        public WindowsMinimumOperatingSystem MinimumSupportedOperatingSystem { get; set; }
    
        /// <summary>
        /// Gets or sets minimum free disk space in mb.
        /// The value for the minimum free disk space which is required to install this app.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "minimumFreeDiskSpaceInMB", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MinimumFreeDiskSpaceInMB { get; set; }
    
        /// <summary>
        /// Gets or sets minimum memory in mb.
        /// The value for the minimum physical memory which is required to install this app.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "minimumMemoryInMB", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MinimumMemoryInMB { get; set; }
    
        /// <summary>
        /// Gets or sets minimum number of processors.
        /// The value for the minimum number of processors which is required to install this app.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "minimumNumberOfProcessors", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MinimumNumberOfProcessors { get; set; }
    
        /// <summary>
        /// Gets or sets minimum cpu speed in mhz.
        /// The value for the minimum CPU speed which is required to install this app.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "minimumCpuSpeedInMHz", Required = Newtonsoft.Json.Required.Default)]
        public Int32? MinimumCpuSpeedInMHz { get; set; }
    
        /// <summary>
        /// Gets or sets detection rules.
        /// The detection rules to detect Win32 Line of Business (LoB) app.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "detectionRules", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<Win32LobAppDetection> DetectionRules { get; set; }
    
        /// <summary>
        /// Gets or sets requirement rules.
        /// The requirement rules to detect Win32 Line of Business (LoB) app.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "requirementRules", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<Win32LobAppRequirement> RequirementRules { get; set; }
    
        /// <summary>
        /// Gets or sets install experience.
        /// The install experience for this app.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "installExperience", Required = Newtonsoft.Json.Required.Default)]
        public Win32LobAppInstallExperience InstallExperience { get; set; }
    
        /// <summary>
        /// Gets or sets return codes.
        /// The return codes for post installation behavior.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "returnCodes", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<Win32LobAppReturnCode> ReturnCodes { get; set; }
    
        /// <summary>
        /// Gets or sets msi information.
        /// The MSI details if this Win32 app is an MSI app.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "msiInformation", Required = Newtonsoft.Json.Required.Default)]
        public Win32LobAppMsiInformation MsiInformation { get; set; }
    
        /// <summary>
        /// Gets or sets setup file path.
        /// The relative path of the setup file in the encrypted Win32LobApp package.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "setupFilePath", Required = Newtonsoft.Json.Required.Default)]
        public string SetupFilePath { get; set; }
    
        /// <summary>
        /// Gets or sets install language.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "installLanguage", Required = Newtonsoft.Json.Required.Default)]
        public string InstallLanguage { get; set; }
    
    }
}

