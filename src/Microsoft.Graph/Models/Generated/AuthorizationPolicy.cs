// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Authorization Policy.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class AuthorizationPolicy : PolicyBase
    {
    
		///<summary>
		/// The AuthorizationPolicy constructor
		///</summary>
        public AuthorizationPolicy()
        {
            this.ODataType = "microsoft.graph.authorizationPolicy";
        }
	
        /// <summary>
        /// Gets or sets allowed to sign up email based subscriptions.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "allowedToSignUpEmailBasedSubscriptions", Required = Newtonsoft.Json.Required.Default)]
        public bool? AllowedToSignUpEmailBasedSubscriptions { get; set; }
    
        /// <summary>
        /// Gets or sets allowed to use sspr.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "allowedToUseSSPR", Required = Newtonsoft.Json.Required.Default)]
        public bool? AllowedToUseSSPR { get; set; }
    
        /// <summary>
        /// Gets or sets allow email verified users to join organization.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "allowEmailVerifiedUsersToJoinOrganization", Required = Newtonsoft.Json.Required.Default)]
        public bool? AllowEmailVerifiedUsersToJoinOrganization { get; set; }
    
        /// <summary>
        /// Gets or sets block msol power shell.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "blockMsolPowerShell", Required = Newtonsoft.Json.Required.Default)]
        public bool? BlockMsolPowerShell { get; set; }
    
        /// <summary>
        /// Gets or sets default user role permissions.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "defaultUserRolePermissions", Required = Newtonsoft.Json.Required.Default)]
        public DefaultUserRolePermissions DefaultUserRolePermissions { get; set; }
    
        /// <summary>
        /// Gets or sets enabled preview features.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "enabledPreviewFeatures", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> EnabledPreviewFeatures { get; set; }
    
        /// <summary>
        /// Gets or sets guest user role id.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "guestUserRoleId", Required = Newtonsoft.Json.Required.Default)]
        public Guid? GuestUserRoleId { get; set; }
    
        /// <summary>
        /// Gets or sets permission grant policy ids assigned to default user role.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "permissionGrantPolicyIdsAssignedToDefaultUserRole", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> PermissionGrantPolicyIdsAssignedToDefaultUserRole { get; set; }
    
    }
}

