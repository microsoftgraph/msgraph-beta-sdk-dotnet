// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.
// <auto-generated/>

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Device Management Derived Credential Settings.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class DeviceManagementDerivedCredentialSettings : Entity
    {
    
        /// <summary>
        /// Gets or sets help url.
        /// The URL that will be accessible to end users as they retrieve a derived credential using the Company Portal.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "helpUrl", Required = Newtonsoft.Json.Required.Default)]
        public string HelpUrl { get; set; }
    
        /// <summary>
        /// Gets or sets display name.
        /// The display name for the profile.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "displayName", Required = Newtonsoft.Json.Required.Default)]
        public string DisplayName { get; set; }
    
        /// <summary>
        /// Gets or sets issuer.
        /// The derived credential provider to use.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "issuer", Required = Newtonsoft.Json.Required.Default)]
        public DeviceManagementDerivedCredentialIssuer? Issuer { get; set; }
    
        /// <summary>
        /// Gets or sets notification type.
        /// The methods used to inform the end user to open Company Portal to deliver Wi-Fi, VPN, or email profiles that use certificates to the device.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "notificationType", Required = Newtonsoft.Json.Required.Default)]
        public DeviceManagementDerivedCredentialNotificationType? NotificationType { get; set; }
    
    }
}

